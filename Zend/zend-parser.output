

Terminals which are not used:

   T_COMMENT
   T_ML_COMMENT
   T_OPEN_TAG
   T_OPEN_TAG_WITH_ECHO
   T_CLOSE_TAG
   T_WHITESPACE


Conflict in state 82 between rule 335 and token T_LOGICAL_OR resolved as shift.
Conflict in state 82 between rule 335 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 82 between rule 335 and token T_LOGICAL_AND resolved as shift.
Conflict in state 82 between rule 335 and token '?' resolved as shift.
Conflict in state 82 between rule 335 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 82 between rule 335 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 82 between rule 335 and token '|' resolved as shift.
Conflict in state 82 between rule 335 and token '^' resolved as shift.
Conflict in state 82 between rule 335 and token '&' resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_EQUAL resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 82 between rule 335 and token '<' resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 335 and token '>' resolved as shift.
Conflict in state 82 between rule 335 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 335 and token T_SL resolved as shift.
Conflict in state 82 between rule 335 and token T_SR resolved as shift.
Conflict in state 82 between rule 335 and token '+' resolved as shift.
Conflict in state 82 between rule 335 and token '-' resolved as shift.
Conflict in state 82 between rule 335 and token '.' resolved as shift.
Conflict in state 82 between rule 335 and token '*' resolved as shift.
Conflict in state 82 between rule 335 and token '/' resolved as shift.
Conflict in state 82 between rule 335 and token '%' resolved as shift.
Conflict in state 83 between rule 336 and token T_LOGICAL_OR resolved as shift.
Conflict in state 83 between rule 336 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 83 between rule 336 and token T_LOGICAL_AND resolved as shift.
Conflict in state 83 between rule 336 and token '?' resolved as shift.
Conflict in state 83 between rule 336 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 83 between rule 336 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 83 between rule 336 and token '|' resolved as shift.
Conflict in state 83 between rule 336 and token '^' resolved as shift.
Conflict in state 83 between rule 336 and token '&' resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_EQUAL resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 83 between rule 336 and token '<' resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 336 and token '>' resolved as shift.
Conflict in state 83 between rule 336 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 336 and token T_SL resolved as shift.
Conflict in state 83 between rule 336 and token T_SR resolved as shift.
Conflict in state 83 between rule 336 and token '+' resolved as shift.
Conflict in state 83 between rule 336 and token '-' resolved as shift.
Conflict in state 83 between rule 336 and token '.' resolved as shift.
Conflict in state 83 between rule 336 and token '*' resolved as shift.
Conflict in state 83 between rule 336 and token '/' resolved as shift.
Conflict in state 83 between rule 336 and token '%' resolved as shift.
Conflict in state 85 between rule 338 and token T_LOGICAL_OR resolved as shift.
Conflict in state 85 between rule 338 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 85 between rule 338 and token T_LOGICAL_AND resolved as shift.
Conflict in state 85 between rule 338 and token '?' resolved as shift.
Conflict in state 85 between rule 338 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 85 between rule 338 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 85 between rule 338 and token '|' resolved as shift.
Conflict in state 85 between rule 338 and token '^' resolved as shift.
Conflict in state 85 between rule 338 and token '&' resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_EQUAL resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 85 between rule 338 and token '<' resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 338 and token '>' resolved as shift.
Conflict in state 85 between rule 338 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 338 and token T_SL resolved as shift.
Conflict in state 85 between rule 338 and token T_SR resolved as shift.
Conflict in state 85 between rule 338 and token '+' resolved as shift.
Conflict in state 85 between rule 338 and token '-' resolved as shift.
Conflict in state 85 between rule 338 and token '.' resolved as shift.
Conflict in state 85 between rule 338 and token '*' resolved as shift.
Conflict in state 85 between rule 338 and token '/' resolved as shift.
Conflict in state 85 between rule 338 and token '%' resolved as shift.
Conflict in state 89 between rule 227 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 89 between rule 227 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 89 between rule 227 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 89 between rule 227 and token '?' resolved as shift.
Conflict in state 89 between rule 227 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 89 between rule 227 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 89 between rule 227 and token '|' resolved as shift.
Conflict in state 89 between rule 227 and token '^' resolved as shift.
Conflict in state 89 between rule 227 and token '&' resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_EQUAL resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 89 between rule 227 and token '<' resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 89 between rule 227 and token '>' resolved as shift.
Conflict in state 89 between rule 227 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 89 between rule 227 and token T_SL resolved as shift.
Conflict in state 89 between rule 227 and token T_SR resolved as shift.
Conflict in state 89 between rule 227 and token '+' resolved as shift.
Conflict in state 89 between rule 227 and token '-' resolved as shift.
Conflict in state 89 between rule 227 and token '.' resolved as shift.
Conflict in state 89 between rule 227 and token '*' resolved as shift.
Conflict in state 89 between rule 227 and token '/' resolved as shift.
Conflict in state 89 between rule 227 and token '%' resolved as shift.
Conflict in state 90 between rule 196 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 90 between rule 196 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 90 between rule 196 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 90 between rule 196 and token '?' resolved as reduce.
Conflict in state 90 between rule 196 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 90 between rule 196 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 90 between rule 196 and token '|' resolved as reduce.
Conflict in state 90 between rule 196 and token '^' resolved as reduce.
Conflict in state 90 between rule 196 and token '&' resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_EQUAL resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 90 between rule 196 and token '<' resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 90 between rule 196 and token '>' resolved as reduce.
Conflict in state 90 between rule 196 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 90 between rule 196 and token T_SL resolved as reduce.
Conflict in state 90 between rule 196 and token T_SR resolved as reduce.
Conflict in state 90 between rule 196 and token '+' resolved as reduce.
Conflict in state 90 between rule 196 and token '-' resolved as reduce.
Conflict in state 90 between rule 196 and token '.' resolved as reduce.
Conflict in state 90 between rule 196 and token '*' resolved as shift.
Conflict in state 90 between rule 196 and token '/' resolved as shift.
Conflict in state 90 between rule 196 and token '%' resolved as shift.
Conflict in state 91 between rule 197 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 91 between rule 197 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 91 between rule 197 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 91 between rule 197 and token '?' resolved as reduce.
Conflict in state 91 between rule 197 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 91 between rule 197 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 91 between rule 197 and token '|' resolved as reduce.
Conflict in state 91 between rule 197 and token '^' resolved as reduce.
Conflict in state 91 between rule 197 and token '&' resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_EQUAL resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 91 between rule 197 and token '<' resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 91 between rule 197 and token '>' resolved as reduce.
Conflict in state 91 between rule 197 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 91 between rule 197 and token T_SL resolved as reduce.
Conflict in state 91 between rule 197 and token T_SR resolved as reduce.
Conflict in state 91 between rule 197 and token '+' resolved as reduce.
Conflict in state 91 between rule 197 and token '-' resolved as reduce.
Conflict in state 91 between rule 197 and token '.' resolved as reduce.
Conflict in state 91 between rule 197 and token '*' resolved as shift.
Conflict in state 91 between rule 197 and token '/' resolved as shift.
Conflict in state 91 between rule 197 and token '%' resolved as shift.
Conflict in state 92 between rule 198 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 92 between rule 198 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 92 between rule 198 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 92 between rule 198 and token '?' resolved as reduce.
Conflict in state 92 between rule 198 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 92 between rule 198 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 92 between rule 198 and token '|' resolved as reduce.
Conflict in state 92 between rule 198 and token '^' resolved as reduce.
Conflict in state 92 between rule 198 and token '&' resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_EQUAL resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 92 between rule 198 and token '<' resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 92 between rule 198 and token '>' resolved as reduce.
Conflict in state 92 between rule 198 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 92 between rule 198 and token T_SL resolved as reduce.
Conflict in state 92 between rule 198 and token T_SR resolved as reduce.
Conflict in state 92 between rule 198 and token '+' resolved as reduce.
Conflict in state 92 between rule 198 and token '-' resolved as reduce.
Conflict in state 92 between rule 198 and token '.' resolved as reduce.
Conflict in state 92 between rule 198 and token '*' resolved as reduce.
Conflict in state 92 between rule 198 and token '/' resolved as reduce.
Conflict in state 92 between rule 198 and token '%' resolved as reduce.
Conflict in state 93 between rule 199 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 93 between rule 199 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 93 between rule 199 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 93 between rule 199 and token '?' resolved as reduce.
Conflict in state 93 between rule 199 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 93 between rule 199 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 93 between rule 199 and token '|' resolved as reduce.
Conflict in state 93 between rule 199 and token '^' resolved as reduce.
Conflict in state 93 between rule 199 and token '&' resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_EQUAL resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 199 and token '<' resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 199 and token '>' resolved as reduce.
Conflict in state 93 between rule 199 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 199 and token T_SL resolved as reduce.
Conflict in state 93 between rule 199 and token T_SR resolved as reduce.
Conflict in state 93 between rule 199 and token '+' resolved as reduce.
Conflict in state 93 between rule 199 and token '-' resolved as reduce.
Conflict in state 93 between rule 199 and token '.' resolved as reduce.
Conflict in state 93 between rule 199 and token '*' resolved as reduce.
Conflict in state 93 between rule 199 and token '/' resolved as reduce.
Conflict in state 93 between rule 199 and token '%' resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 214 and token '?' resolved as reduce.
Conflict in state 97 between rule 214 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 97 between rule 214 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 97 between rule 214 and token '|' resolved as reduce.
Conflict in state 97 between rule 214 and token '^' resolved as reduce.
Conflict in state 97 between rule 214 and token '&' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 214 and token '<' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token '>' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_SL resolved as reduce.
Conflict in state 97 between rule 214 and token T_SR resolved as reduce.
Conflict in state 97 between rule 214 and token '+' resolved as reduce.
Conflict in state 97 between rule 214 and token '-' resolved as reduce.
Conflict in state 97 between rule 214 and token '.' resolved as reduce.
Conflict in state 97 between rule 214 and token '*' resolved as reduce.
Conflict in state 97 between rule 214 and token '/' resolved as reduce.
Conflict in state 97 between rule 214 and token '%' resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 215 and token '?' resolved as reduce.
Conflict in state 98 between rule 215 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 98 between rule 215 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 98 between rule 215 and token '|' resolved as reduce.
Conflict in state 98 between rule 215 and token '^' resolved as reduce.
Conflict in state 98 between rule 215 and token '&' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 215 and token '<' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token '>' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_SL resolved as reduce.
Conflict in state 98 between rule 215 and token T_SR resolved as reduce.
Conflict in state 98 between rule 215 and token '+' resolved as reduce.
Conflict in state 98 between rule 215 and token '-' resolved as reduce.
Conflict in state 98 between rule 215 and token '.' resolved as reduce.
Conflict in state 98 between rule 215 and token '*' resolved as reduce.
Conflict in state 98 between rule 215 and token '/' resolved as reduce.
Conflict in state 98 between rule 215 and token '%' resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 216 and token '?' resolved as reduce.
Conflict in state 99 between rule 216 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 99 between rule 216 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 99 between rule 216 and token '|' resolved as reduce.
Conflict in state 99 between rule 216 and token '^' resolved as reduce.
Conflict in state 99 between rule 216 and token '&' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 216 and token '<' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token '>' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_SL resolved as reduce.
Conflict in state 99 between rule 216 and token T_SR resolved as reduce.
Conflict in state 99 between rule 216 and token '+' resolved as reduce.
Conflict in state 99 between rule 216 and token '-' resolved as reduce.
Conflict in state 99 between rule 216 and token '.' resolved as reduce.
Conflict in state 99 between rule 216 and token '*' resolved as reduce.
Conflict in state 99 between rule 216 and token '/' resolved as reduce.
Conflict in state 99 between rule 216 and token '%' resolved as reduce.
Conflict in state 100 between rule 217 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 100 between rule 217 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 100 between rule 217 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 100 between rule 217 and token '?' resolved as reduce.
Conflict in state 100 between rule 217 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 100 between rule 217 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 100 between rule 217 and token '|' resolved as reduce.
Conflict in state 100 between rule 217 and token '^' resolved as reduce.
Conflict in state 100 between rule 217 and token '&' resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_EQUAL resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 100 between rule 217 and token '<' resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 100 between rule 217 and token '>' resolved as reduce.
Conflict in state 100 between rule 217 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 100 between rule 217 and token T_SL resolved as reduce.
Conflict in state 100 between rule 217 and token T_SR resolved as reduce.
Conflict in state 100 between rule 217 and token '+' resolved as reduce.
Conflict in state 100 between rule 217 and token '-' resolved as reduce.
Conflict in state 100 between rule 217 and token '.' resolved as reduce.
Conflict in state 100 between rule 217 and token '*' resolved as reduce.
Conflict in state 100 between rule 217 and token '/' resolved as reduce.
Conflict in state 100 between rule 217 and token '%' resolved as reduce.
Conflict in state 101 between rule 218 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 101 between rule 218 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 101 between rule 218 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 101 between rule 218 and token '?' resolved as reduce.
Conflict in state 101 between rule 218 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 101 between rule 218 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 101 between rule 218 and token '|' resolved as reduce.
Conflict in state 101 between rule 218 and token '^' resolved as reduce.
Conflict in state 101 between rule 218 and token '&' resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_EQUAL resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 101 between rule 218 and token '<' resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 101 between rule 218 and token '>' resolved as reduce.
Conflict in state 101 between rule 218 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 101 between rule 218 and token T_SL resolved as reduce.
Conflict in state 101 between rule 218 and token T_SR resolved as reduce.
Conflict in state 101 between rule 218 and token '+' resolved as reduce.
Conflict in state 101 between rule 218 and token '-' resolved as reduce.
Conflict in state 101 between rule 218 and token '.' resolved as reduce.
Conflict in state 101 between rule 218 and token '*' resolved as reduce.
Conflict in state 101 between rule 218 and token '/' resolved as reduce.
Conflict in state 101 between rule 218 and token '%' resolved as reduce.
Conflict in state 102 between rule 219 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 102 between rule 219 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 102 between rule 219 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 102 between rule 219 and token '?' resolved as reduce.
Conflict in state 102 between rule 219 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 102 between rule 219 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 102 between rule 219 and token '|' resolved as reduce.
Conflict in state 102 between rule 219 and token '^' resolved as reduce.
Conflict in state 102 between rule 219 and token '&' resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_EQUAL resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 102 between rule 219 and token '<' resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 102 between rule 219 and token '>' resolved as reduce.
Conflict in state 102 between rule 219 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 102 between rule 219 and token T_SL resolved as reduce.
Conflict in state 102 between rule 219 and token T_SR resolved as reduce.
Conflict in state 102 between rule 219 and token '+' resolved as reduce.
Conflict in state 102 between rule 219 and token '-' resolved as reduce.
Conflict in state 102 between rule 219 and token '.' resolved as reduce.
Conflict in state 102 between rule 219 and token '*' resolved as reduce.
Conflict in state 102 between rule 219 and token '/' resolved as reduce.
Conflict in state 102 between rule 219 and token '%' resolved as reduce.
Conflict in state 103 between rule 220 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 103 between rule 220 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 103 between rule 220 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 103 between rule 220 and token '?' resolved as reduce.
Conflict in state 103 between rule 220 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 103 between rule 220 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 103 between rule 220 and token '|' resolved as reduce.
Conflict in state 103 between rule 220 and token '^' resolved as reduce.
Conflict in state 103 between rule 220 and token '&' resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_EQUAL resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 103 between rule 220 and token '<' resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 103 between rule 220 and token '>' resolved as reduce.
Conflict in state 103 between rule 220 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 103 between rule 220 and token T_SL resolved as reduce.
Conflict in state 103 between rule 220 and token T_SR resolved as reduce.
Conflict in state 103 between rule 220 and token '+' resolved as reduce.
Conflict in state 103 between rule 220 and token '-' resolved as reduce.
Conflict in state 103 between rule 220 and token '.' resolved as reduce.
Conflict in state 103 between rule 220 and token '*' resolved as reduce.
Conflict in state 103 between rule 220 and token '/' resolved as reduce.
Conflict in state 103 between rule 220 and token '%' resolved as reduce.
Conflict in state 200 between rule 223 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 200 between rule 223 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 200 between rule 223 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 200 between rule 223 and token '?' resolved as reduce.
Conflict in state 200 between rule 223 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 200 between rule 223 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 200 between rule 223 and token '|' resolved as reduce.
Conflict in state 200 between rule 223 and token '^' resolved as reduce.
Conflict in state 200 between rule 223 and token '&' resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_EQUAL resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 200 between rule 223 and token '<' resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 200 between rule 223 and token '>' resolved as reduce.
Conflict in state 200 between rule 223 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 200 between rule 223 and token T_SL resolved as reduce.
Conflict in state 200 between rule 223 and token T_SR resolved as reduce.
Conflict in state 200 between rule 223 and token '+' resolved as reduce.
Conflict in state 200 between rule 223 and token '-' resolved as reduce.
Conflict in state 200 between rule 223 and token '.' resolved as reduce.
Conflict in state 200 between rule 223 and token '*' resolved as reduce.
Conflict in state 200 between rule 223 and token '/' resolved as reduce.
Conflict in state 200 between rule 223 and token '%' resolved as reduce.
Conflict in state 269 between rule 184 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 269 between rule 184 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 269 between rule 184 and token T_LOGICAL_AND resolved as shift.
Conflict in state 269 between rule 184 and token '?' resolved as shift.
Conflict in state 269 between rule 184 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 269 between rule 184 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 269 between rule 184 and token '|' resolved as shift.
Conflict in state 269 between rule 184 and token '^' resolved as shift.
Conflict in state 269 between rule 184 and token '&' resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_EQUAL resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 269 between rule 184 and token '<' resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 269 between rule 184 and token '>' resolved as shift.
Conflict in state 269 between rule 184 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 269 between rule 184 and token T_SL resolved as shift.
Conflict in state 269 between rule 184 and token T_SR resolved as shift.
Conflict in state 269 between rule 184 and token '+' resolved as shift.
Conflict in state 269 between rule 184 and token '-' resolved as shift.
Conflict in state 269 between rule 184 and token '.' resolved as shift.
Conflict in state 269 between rule 184 and token '*' resolved as shift.
Conflict in state 269 between rule 184 and token '/' resolved as shift.
Conflict in state 269 between rule 184 and token '%' resolved as shift.
Conflict in state 274 between rule 185 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 274 between rule 185 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 274 between rule 185 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 185 and token '?' resolved as reduce.
Conflict in state 274 between rule 185 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 274 between rule 185 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 274 between rule 185 and token '|' resolved as reduce.
Conflict in state 274 between rule 185 and token '^' resolved as shift.
Conflict in state 274 between rule 185 and token '&' resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_EQUAL resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 274 between rule 185 and token '<' resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 185 and token '>' resolved as shift.
Conflict in state 274 between rule 185 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 185 and token T_SL resolved as shift.
Conflict in state 274 between rule 185 and token T_SR resolved as shift.
Conflict in state 274 between rule 185 and token '+' resolved as shift.
Conflict in state 274 between rule 185 and token '-' resolved as shift.
Conflict in state 274 between rule 185 and token '.' resolved as shift.
Conflict in state 274 between rule 185 and token '*' resolved as shift.
Conflict in state 274 between rule 185 and token '/' resolved as shift.
Conflict in state 274 between rule 185 and token '%' resolved as shift.
Conflict in state 275 between rule 187 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 187 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 275 between rule 187 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 187 and token '?' resolved as reduce.
Conflict in state 275 between rule 187 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 275 between rule 187 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 275 between rule 187 and token '|' resolved as reduce.
Conflict in state 275 between rule 187 and token '^' resolved as reduce.
Conflict in state 275 between rule 187 and token '&' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 275 between rule 187 and token '<' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token '>' resolved as shift.
Conflict in state 275 between rule 187 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 187 and token T_SL resolved as shift.
Conflict in state 275 between rule 187 and token T_SR resolved as shift.
Conflict in state 275 between rule 187 and token '+' resolved as shift.
Conflict in state 275 between rule 187 and token '-' resolved as shift.
Conflict in state 275 between rule 187 and token '.' resolved as shift.
Conflict in state 275 between rule 187 and token '*' resolved as shift.
Conflict in state 275 between rule 187 and token '/' resolved as shift.
Conflict in state 275 between rule 187 and token '%' resolved as shift.
Conflict in state 276 between rule 186 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 186 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 276 between rule 186 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 186 and token '?' resolved as reduce.
Conflict in state 276 between rule 186 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 276 between rule 186 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 276 between rule 186 and token '|' resolved as reduce.
Conflict in state 276 between rule 186 and token '^' resolved as reduce.
Conflict in state 276 between rule 186 and token '&' resolved as reduce.
Conflict in state 276 between rule 186 and token T_IS_EQUAL resolved as shift.
Conflict in state 276 between rule 186 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 276 between rule 186 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 276 between rule 186 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 276 between rule 186 and token '<' resolved as shift.
Conflict in state 276 between rule 186 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 186 and token '>' resolved as shift.
Conflict in state 276 between rule 186 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 186 and token T_SL resolved as shift.
Conflict in state 276 between rule 186 and token T_SR resolved as shift.
Conflict in state 276 between rule 186 and token '+' resolved as shift.
Conflict in state 276 between rule 186 and token '-' resolved as shift.
Conflict in state 276 between rule 186 and token '.' resolved as shift.
Conflict in state 276 between rule 186 and token '*' resolved as shift.
Conflict in state 276 between rule 186 and token '/' resolved as shift.
Conflict in state 276 between rule 186 and token '%' resolved as shift.
Conflict in state 277 between rule 202 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 277 between rule 202 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 277 between rule 202 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 202 and token '?' resolved as reduce.
Conflict in state 277 between rule 202 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 277 between rule 202 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 277 between rule 202 and token '|' resolved as reduce.
Conflict in state 277 between rule 202 and token '^' resolved as reduce.
Conflict in state 277 between rule 202 and token '&' resolved as reduce.
Conflict in state 277 between rule 202 and token T_IS_EQUAL resolved as an error.
Conflict in state 277 between rule 202 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 277 between rule 202 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 277 between rule 202 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 277 between rule 202 and token '<' resolved as shift.
Conflict in state 277 between rule 202 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 202 and token '>' resolved as shift.
Conflict in state 277 between rule 202 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 202 and token T_SL resolved as shift.
Conflict in state 277 between rule 202 and token T_SR resolved as shift.
Conflict in state 277 between rule 202 and token '+' resolved as shift.
Conflict in state 277 between rule 202 and token '-' resolved as shift.
Conflict in state 277 between rule 202 and token '.' resolved as shift.
Conflict in state 277 between rule 202 and token '*' resolved as shift.
Conflict in state 277 between rule 202 and token '/' resolved as shift.
Conflict in state 277 between rule 202 and token '%' resolved as shift.
Conflict in state 278 between rule 203 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 203 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 278 between rule 203 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 203 and token '?' resolved as reduce.
Conflict in state 278 between rule 203 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 278 between rule 203 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 278 between rule 203 and token '|' resolved as reduce.
Conflict in state 278 between rule 203 and token '^' resolved as reduce.
Conflict in state 278 between rule 203 and token '&' resolved as reduce.
Conflict in state 278 between rule 203 and token T_IS_EQUAL resolved as an error.
Conflict in state 278 between rule 203 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 278 between rule 203 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 278 between rule 203 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 278 between rule 203 and token '<' resolved as shift.
Conflict in state 278 between rule 203 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 203 and token '>' resolved as shift.
Conflict in state 278 between rule 203 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 203 and token T_SL resolved as shift.
Conflict in state 278 between rule 203 and token T_SR resolved as shift.
Conflict in state 278 between rule 203 and token '+' resolved as shift.
Conflict in state 278 between rule 203 and token '-' resolved as shift.
Conflict in state 278 between rule 203 and token '.' resolved as shift.
Conflict in state 278 between rule 203 and token '*' resolved as shift.
Conflict in state 278 between rule 203 and token '/' resolved as shift.
Conflict in state 278 between rule 203 and token '%' resolved as shift.
Conflict in state 279 between rule 200 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 279 between rule 200 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 279 between rule 200 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 200 and token '?' resolved as reduce.
Conflict in state 279 between rule 200 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 279 between rule 200 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 279 between rule 200 and token '|' resolved as reduce.
Conflict in state 279 between rule 200 and token '^' resolved as reduce.
Conflict in state 279 between rule 200 and token '&' resolved as reduce.
Conflict in state 279 between rule 200 and token T_IS_EQUAL resolved as an error.
Conflict in state 279 between rule 200 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 279 between rule 200 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 279 between rule 200 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 279 between rule 200 and token '<' resolved as shift.
Conflict in state 279 between rule 200 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 200 and token '>' resolved as shift.
Conflict in state 279 between rule 200 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 200 and token T_SL resolved as shift.
Conflict in state 279 between rule 200 and token T_SR resolved as shift.
Conflict in state 279 between rule 200 and token '+' resolved as shift.
Conflict in state 279 between rule 200 and token '-' resolved as shift.
Conflict in state 279 between rule 200 and token '.' resolved as shift.
Conflict in state 279 between rule 200 and token '*' resolved as shift.
Conflict in state 279 between rule 200 and token '/' resolved as shift.
Conflict in state 279 between rule 200 and token '%' resolved as shift.
Conflict in state 280 between rule 201 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 280 between rule 201 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 280 between rule 201 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 280 between rule 201 and token '?' resolved as reduce.
Conflict in state 280 between rule 201 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 280 between rule 201 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 280 between rule 201 and token '|' resolved as reduce.
Conflict in state 280 between rule 201 and token '^' resolved as reduce.
Conflict in state 280 between rule 201 and token '&' resolved as reduce.
Conflict in state 280 between rule 201 and token T_IS_EQUAL resolved as an error.
Conflict in state 280 between rule 201 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 280 between rule 201 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 280 between rule 201 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 280 between rule 201 and token '<' resolved as shift.
Conflict in state 280 between rule 201 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 201 and token '>' resolved as shift.
Conflict in state 280 between rule 201 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 201 and token T_SL resolved as shift.
Conflict in state 280 between rule 201 and token T_SR resolved as shift.
Conflict in state 280 between rule 201 and token '+' resolved as shift.
Conflict in state 280 between rule 201 and token '-' resolved as shift.
Conflict in state 280 between rule 201 and token '.' resolved as shift.
Conflict in state 280 between rule 201 and token '*' resolved as shift.
Conflict in state 280 between rule 201 and token '/' resolved as shift.
Conflict in state 280 between rule 201 and token '%' resolved as shift.
Conflict in state 281 between rule 204 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 281 between rule 204 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 281 between rule 204 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 204 and token '?' resolved as reduce.
Conflict in state 281 between rule 204 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 281 between rule 204 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 281 between rule 204 and token '|' resolved as reduce.
Conflict in state 281 between rule 204 and token '^' resolved as reduce.
Conflict in state 281 between rule 204 and token '&' resolved as reduce.
Conflict in state 281 between rule 204 and token T_IS_EQUAL resolved as reduce.
Conflict in state 281 between rule 204 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 281 between rule 204 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 204 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 204 and token '<' resolved as an error.
Conflict in state 281 between rule 204 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 281 between rule 204 and token '>' resolved as an error.
Conflict in state 281 between rule 204 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 281 between rule 204 and token T_SL resolved as shift.
Conflict in state 281 between rule 204 and token T_SR resolved as shift.
Conflict in state 281 between rule 204 and token '+' resolved as shift.
Conflict in state 281 between rule 204 and token '-' resolved as shift.
Conflict in state 281 between rule 204 and token '.' resolved as shift.
Conflict in state 281 between rule 204 and token '*' resolved as shift.
Conflict in state 281 between rule 204 and token '/' resolved as shift.
Conflict in state 281 between rule 204 and token '%' resolved as shift.
Conflict in state 282 between rule 205 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 282 between rule 205 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 282 between rule 205 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 205 and token '?' resolved as reduce.
Conflict in state 282 between rule 205 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 282 between rule 205 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 282 between rule 205 and token '|' resolved as reduce.
Conflict in state 282 between rule 205 and token '^' resolved as reduce.
Conflict in state 282 between rule 205 and token '&' resolved as reduce.
Conflict in state 282 between rule 205 and token T_IS_EQUAL resolved as reduce.
Conflict in state 282 between rule 205 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 282 between rule 205 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 205 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 205 and token '<' resolved as an error.
Conflict in state 282 between rule 205 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 205 and token '>' resolved as an error.
Conflict in state 282 between rule 205 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 205 and token T_SL resolved as shift.
Conflict in state 282 between rule 205 and token T_SR resolved as shift.
Conflict in state 282 between rule 205 and token '+' resolved as shift.
Conflict in state 282 between rule 205 and token '-' resolved as shift.
Conflict in state 282 between rule 205 and token '.' resolved as shift.
Conflict in state 282 between rule 205 and token '*' resolved as shift.
Conflict in state 282 between rule 205 and token '/' resolved as shift.
Conflict in state 282 between rule 205 and token '%' resolved as shift.
Conflict in state 283 between rule 206 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 283 between rule 206 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 283 between rule 206 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 283 between rule 206 and token '?' resolved as reduce.
Conflict in state 283 between rule 206 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 283 between rule 206 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 283 between rule 206 and token '|' resolved as reduce.
Conflict in state 283 between rule 206 and token '^' resolved as reduce.
Conflict in state 283 between rule 206 and token '&' resolved as reduce.
Conflict in state 283 between rule 206 and token T_IS_EQUAL resolved as reduce.
Conflict in state 283 between rule 206 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 283 between rule 206 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 206 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 206 and token '<' resolved as an error.
Conflict in state 283 between rule 206 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 206 and token '>' resolved as an error.
Conflict in state 283 between rule 206 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 206 and token T_SL resolved as shift.
Conflict in state 283 between rule 206 and token T_SR resolved as shift.
Conflict in state 283 between rule 206 and token '+' resolved as shift.
Conflict in state 283 between rule 206 and token '-' resolved as shift.
Conflict in state 283 between rule 206 and token '.' resolved as shift.
Conflict in state 283 between rule 206 and token '*' resolved as shift.
Conflict in state 283 between rule 206 and token '/' resolved as shift.
Conflict in state 283 between rule 206 and token '%' resolved as shift.
Conflict in state 284 between rule 207 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 284 between rule 207 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 284 between rule 207 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 284 between rule 207 and token '?' resolved as reduce.
Conflict in state 284 between rule 207 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 284 between rule 207 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 284 between rule 207 and token '|' resolved as reduce.
Conflict in state 284 between rule 207 and token '^' resolved as reduce.
Conflict in state 284 between rule 207 and token '&' resolved as reduce.
Conflict in state 284 between rule 207 and token T_IS_EQUAL resolved as reduce.
Conflict in state 284 between rule 207 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 284 between rule 207 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 207 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 207 and token '<' resolved as an error.
Conflict in state 284 between rule 207 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 207 and token '>' resolved as an error.
Conflict in state 284 between rule 207 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 207 and token T_SL resolved as shift.
Conflict in state 284 between rule 207 and token T_SR resolved as shift.
Conflict in state 284 between rule 207 and token '+' resolved as shift.
Conflict in state 284 between rule 207 and token '-' resolved as shift.
Conflict in state 284 between rule 207 and token '.' resolved as shift.
Conflict in state 284 between rule 207 and token '*' resolved as shift.
Conflict in state 284 between rule 207 and token '/' resolved as shift.
Conflict in state 284 between rule 207 and token '%' resolved as shift.
Conflict in state 285 between rule 194 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 285 between rule 194 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 285 between rule 194 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 285 between rule 194 and token '?' resolved as reduce.
Conflict in state 285 between rule 194 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 285 between rule 194 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 285 between rule 194 and token '|' resolved as reduce.
Conflict in state 285 between rule 194 and token '^' resolved as reduce.
Conflict in state 285 between rule 194 and token '&' resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_EQUAL resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 194 and token '<' resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 194 and token '>' resolved as reduce.
Conflict in state 285 between rule 194 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 194 and token T_SL resolved as reduce.
Conflict in state 285 between rule 194 and token T_SR resolved as reduce.
Conflict in state 285 between rule 194 and token '+' resolved as shift.
Conflict in state 285 between rule 194 and token '-' resolved as shift.
Conflict in state 285 between rule 194 and token '.' resolved as shift.
Conflict in state 285 between rule 194 and token '*' resolved as shift.
Conflict in state 285 between rule 194 and token '/' resolved as shift.
Conflict in state 285 between rule 194 and token '%' resolved as shift.
Conflict in state 286 between rule 195 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 286 between rule 195 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 286 between rule 195 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 286 between rule 195 and token '?' resolved as reduce.
Conflict in state 286 between rule 195 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 286 between rule 195 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 286 between rule 195 and token '|' resolved as reduce.
Conflict in state 286 between rule 195 and token '^' resolved as reduce.
Conflict in state 286 between rule 195 and token '&' resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_EQUAL resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 195 and token '<' resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 195 and token '>' resolved as reduce.
Conflict in state 286 between rule 195 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 195 and token T_SL resolved as reduce.
Conflict in state 286 between rule 195 and token T_SR resolved as reduce.
Conflict in state 286 between rule 195 and token '+' resolved as shift.
Conflict in state 286 between rule 195 and token '-' resolved as shift.
Conflict in state 286 between rule 195 and token '.' resolved as shift.
Conflict in state 286 between rule 195 and token '*' resolved as shift.
Conflict in state 286 between rule 195 and token '/' resolved as shift.
Conflict in state 286 between rule 195 and token '%' resolved as shift.
Conflict in state 287 between rule 189 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 287 between rule 189 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 287 between rule 189 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 287 between rule 189 and token '?' resolved as reduce.
Conflict in state 287 between rule 189 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 287 between rule 189 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 287 between rule 189 and token '|' resolved as reduce.
Conflict in state 287 between rule 189 and token '^' resolved as reduce.
Conflict in state 287 between rule 189 and token '&' resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_EQUAL resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 189 and token '<' resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 189 and token '>' resolved as reduce.
Conflict in state 287 between rule 189 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 189 and token T_SL resolved as reduce.
Conflict in state 287 between rule 189 and token T_SR resolved as reduce.
Conflict in state 287 between rule 189 and token '+' resolved as reduce.
Conflict in state 287 between rule 189 and token '-' resolved as reduce.
Conflict in state 287 between rule 189 and token '.' resolved as reduce.
Conflict in state 287 between rule 189 and token '*' resolved as shift.
Conflict in state 287 between rule 189 and token '/' resolved as shift.
Conflict in state 287 between rule 189 and token '%' resolved as shift.
Conflict in state 288 between rule 190 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 288 between rule 190 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 288 between rule 190 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 190 and token '?' resolved as reduce.
Conflict in state 288 between rule 190 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 288 between rule 190 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 288 between rule 190 and token '|' resolved as reduce.
Conflict in state 288 between rule 190 and token '^' resolved as reduce.
Conflict in state 288 between rule 190 and token '&' resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_EQUAL resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 190 and token '<' resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 190 and token '>' resolved as reduce.
Conflict in state 288 between rule 190 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 190 and token T_SL resolved as reduce.
Conflict in state 288 between rule 190 and token T_SR resolved as reduce.
Conflict in state 288 between rule 190 and token '+' resolved as reduce.
Conflict in state 288 between rule 190 and token '-' resolved as reduce.
Conflict in state 288 between rule 190 and token '.' resolved as reduce.
Conflict in state 288 between rule 190 and token '*' resolved as shift.
Conflict in state 288 between rule 190 and token '/' resolved as shift.
Conflict in state 288 between rule 190 and token '%' resolved as shift.
Conflict in state 289 between rule 188 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 289 between rule 188 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 289 between rule 188 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 289 between rule 188 and token '?' resolved as reduce.
Conflict in state 289 between rule 188 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 289 between rule 188 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 289 between rule 188 and token '|' resolved as reduce.
Conflict in state 289 between rule 188 and token '^' resolved as reduce.
Conflict in state 289 between rule 188 and token '&' resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_EQUAL resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 188 and token '<' resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 188 and token '>' resolved as reduce.
Conflict in state 289 between rule 188 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 188 and token T_SL resolved as reduce.
Conflict in state 289 between rule 188 and token T_SR resolved as reduce.
Conflict in state 289 between rule 188 and token '+' resolved as reduce.
Conflict in state 289 between rule 188 and token '-' resolved as reduce.
Conflict in state 289 between rule 188 and token '.' resolved as reduce.
Conflict in state 289 between rule 188 and token '*' resolved as shift.
Conflict in state 289 between rule 188 and token '/' resolved as shift.
Conflict in state 289 between rule 188 and token '%' resolved as shift.
Conflict in state 290 between rule 191 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 290 between rule 191 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 290 between rule 191 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 290 between rule 191 and token '?' resolved as reduce.
Conflict in state 290 between rule 191 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 290 between rule 191 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 290 between rule 191 and token '|' resolved as reduce.
Conflict in state 290 between rule 191 and token '^' resolved as reduce.
Conflict in state 290 between rule 191 and token '&' resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_EQUAL resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 191 and token '<' resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 191 and token '>' resolved as reduce.
Conflict in state 290 between rule 191 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 191 and token T_SL resolved as reduce.
Conflict in state 290 between rule 191 and token T_SR resolved as reduce.
Conflict in state 290 between rule 191 and token '+' resolved as reduce.
Conflict in state 290 between rule 191 and token '-' resolved as reduce.
Conflict in state 290 between rule 191 and token '.' resolved as reduce.
Conflict in state 290 between rule 191 and token '*' resolved as reduce.
Conflict in state 290 between rule 191 and token '/' resolved as reduce.
Conflict in state 290 between rule 191 and token '%' resolved as reduce.
Conflict in state 291 between rule 192 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 291 between rule 192 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 291 between rule 192 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 192 and token '?' resolved as reduce.
Conflict in state 291 between rule 192 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 291 between rule 192 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 291 between rule 192 and token '|' resolved as reduce.
Conflict in state 291 between rule 192 and token '^' resolved as reduce.
Conflict in state 291 between rule 192 and token '&' resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_EQUAL resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 192 and token '<' resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 192 and token '>' resolved as reduce.
Conflict in state 291 between rule 192 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 192 and token T_SL resolved as reduce.
Conflict in state 291 between rule 192 and token T_SR resolved as reduce.
Conflict in state 291 between rule 192 and token '+' resolved as reduce.
Conflict in state 291 between rule 192 and token '-' resolved as reduce.
Conflict in state 291 between rule 192 and token '.' resolved as reduce.
Conflict in state 291 between rule 192 and token '*' resolved as reduce.
Conflict in state 291 between rule 192 and token '/' resolved as reduce.
Conflict in state 291 between rule 192 and token '%' resolved as reduce.
Conflict in state 292 between rule 193 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 292 between rule 193 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 292 between rule 193 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 292 between rule 193 and token '?' resolved as reduce.
Conflict in state 292 between rule 193 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 292 between rule 193 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 292 between rule 193 and token '|' resolved as reduce.
Conflict in state 292 between rule 193 and token '^' resolved as reduce.
Conflict in state 292 between rule 193 and token '&' resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_EQUAL resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 193 and token '<' resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 193 and token '>' resolved as reduce.
Conflict in state 292 between rule 193 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 193 and token T_SL resolved as reduce.
Conflict in state 292 between rule 193 and token T_SR resolved as reduce.
Conflict in state 292 between rule 193 and token '+' resolved as reduce.
Conflict in state 292 between rule 193 and token '-' resolved as reduce.
Conflict in state 292 between rule 193 and token '.' resolved as reduce.
Conflict in state 292 between rule 193 and token '*' resolved as reduce.
Conflict in state 292 between rule 193 and token '/' resolved as reduce.
Conflict in state 292 between rule 193 and token '%' resolved as reduce.
Conflict in state 294 between rule 156 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 294 between rule 156 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 294 between rule 156 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 294 between rule 156 and token '?' resolved as shift.
Conflict in state 294 between rule 156 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 294 between rule 156 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 294 between rule 156 and token '|' resolved as shift.
Conflict in state 294 between rule 156 and token '^' resolved as shift.
Conflict in state 294 between rule 156 and token '&' resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_EQUAL resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 294 between rule 156 and token '<' resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 294 between rule 156 and token '>' resolved as shift.
Conflict in state 294 between rule 156 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 294 between rule 156 and token T_SL resolved as shift.
Conflict in state 294 between rule 156 and token T_SR resolved as shift.
Conflict in state 294 between rule 156 and token '+' resolved as shift.
Conflict in state 294 between rule 156 and token '-' resolved as shift.
Conflict in state 294 between rule 156 and token '.' resolved as shift.
Conflict in state 294 between rule 156 and token '*' resolved as shift.
Conflict in state 294 between rule 156 and token '/' resolved as shift.
Conflict in state 294 between rule 156 and token '%' resolved as shift.
Conflict in state 295 between rule 161 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 295 between rule 161 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 295 between rule 161 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 295 between rule 161 and token '?' resolved as shift.
Conflict in state 295 between rule 161 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 295 between rule 161 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 295 between rule 161 and token '|' resolved as shift.
Conflict in state 295 between rule 161 and token '^' resolved as shift.
Conflict in state 295 between rule 161 and token '&' resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_EQUAL resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 295 between rule 161 and token '<' resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 161 and token '>' resolved as shift.
Conflict in state 295 between rule 161 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 161 and token T_SL resolved as shift.
Conflict in state 295 between rule 161 and token T_SR resolved as shift.
Conflict in state 295 between rule 161 and token '+' resolved as shift.
Conflict in state 295 between rule 161 and token '-' resolved as shift.
Conflict in state 295 between rule 161 and token '.' resolved as shift.
Conflict in state 295 between rule 161 and token '*' resolved as shift.
Conflict in state 295 between rule 161 and token '/' resolved as shift.
Conflict in state 295 between rule 161 and token '%' resolved as shift.
Conflict in state 296 between rule 162 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 296 between rule 162 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 296 between rule 162 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 162 and token '?' resolved as shift.
Conflict in state 296 between rule 162 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 296 between rule 162 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 296 between rule 162 and token '|' resolved as shift.
Conflict in state 296 between rule 162 and token '^' resolved as shift.
Conflict in state 296 between rule 162 and token '&' resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_EQUAL resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 296 between rule 162 and token '<' resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 162 and token '>' resolved as shift.
Conflict in state 296 between rule 162 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 162 and token T_SL resolved as shift.
Conflict in state 296 between rule 162 and token T_SR resolved as shift.
Conflict in state 296 between rule 162 and token '+' resolved as shift.
Conflict in state 296 between rule 162 and token '-' resolved as shift.
Conflict in state 296 between rule 162 and token '.' resolved as shift.
Conflict in state 296 between rule 162 and token '*' resolved as shift.
Conflict in state 296 between rule 162 and token '/' resolved as shift.
Conflict in state 296 between rule 162 and token '%' resolved as shift.
Conflict in state 297 between rule 163 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 297 between rule 163 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 297 between rule 163 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 163 and token '?' resolved as shift.
Conflict in state 297 between rule 163 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 297 between rule 163 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 297 between rule 163 and token '|' resolved as shift.
Conflict in state 297 between rule 163 and token '^' resolved as shift.
Conflict in state 297 between rule 163 and token '&' resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_EQUAL resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 297 between rule 163 and token '<' resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 163 and token '>' resolved as shift.
Conflict in state 297 between rule 163 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 163 and token T_SL resolved as shift.
Conflict in state 297 between rule 163 and token T_SR resolved as shift.
Conflict in state 297 between rule 163 and token '+' resolved as shift.
Conflict in state 297 between rule 163 and token '-' resolved as shift.
Conflict in state 297 between rule 163 and token '.' resolved as shift.
Conflict in state 297 between rule 163 and token '*' resolved as shift.
Conflict in state 297 between rule 163 and token '/' resolved as shift.
Conflict in state 297 between rule 163 and token '%' resolved as shift.
Conflict in state 298 between rule 164 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 298 between rule 164 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 298 between rule 164 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 298 between rule 164 and token '?' resolved as shift.
Conflict in state 298 between rule 164 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 298 between rule 164 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 298 between rule 164 and token '|' resolved as shift.
Conflict in state 298 between rule 164 and token '^' resolved as shift.
Conflict in state 298 between rule 164 and token '&' resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_EQUAL resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 298 between rule 164 and token '<' resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 164 and token '>' resolved as shift.
Conflict in state 298 between rule 164 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 164 and token T_SL resolved as shift.
Conflict in state 298 between rule 164 and token T_SR resolved as shift.
Conflict in state 298 between rule 164 and token '+' resolved as shift.
Conflict in state 298 between rule 164 and token '-' resolved as shift.
Conflict in state 298 between rule 164 and token '.' resolved as shift.
Conflict in state 298 between rule 164 and token '*' resolved as shift.
Conflict in state 298 between rule 164 and token '/' resolved as shift.
Conflict in state 298 between rule 164 and token '%' resolved as shift.
Conflict in state 299 between rule 165 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 299 between rule 165 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 299 between rule 165 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 299 between rule 165 and token '?' resolved as shift.
Conflict in state 299 between rule 165 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 299 between rule 165 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 299 between rule 165 and token '|' resolved as shift.
Conflict in state 299 between rule 165 and token '^' resolved as shift.
Conflict in state 299 between rule 165 and token '&' resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_EQUAL resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 299 between rule 165 and token '<' resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 165 and token '>' resolved as shift.
Conflict in state 299 between rule 165 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 165 and token T_SL resolved as shift.
Conflict in state 299 between rule 165 and token T_SR resolved as shift.
Conflict in state 299 between rule 165 and token '+' resolved as shift.
Conflict in state 299 between rule 165 and token '-' resolved as shift.
Conflict in state 299 between rule 165 and token '.' resolved as shift.
Conflict in state 299 between rule 165 and token '*' resolved as shift.
Conflict in state 299 between rule 165 and token '/' resolved as shift.
Conflict in state 299 between rule 165 and token '%' resolved as shift.
Conflict in state 300 between rule 166 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 300 between rule 166 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 300 between rule 166 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 300 between rule 166 and token '?' resolved as shift.
Conflict in state 300 between rule 166 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 300 between rule 166 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 300 between rule 166 and token '|' resolved as shift.
Conflict in state 300 between rule 166 and token '^' resolved as shift.
Conflict in state 300 between rule 166 and token '&' resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_EQUAL resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 300 between rule 166 and token '<' resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 166 and token '>' resolved as shift.
Conflict in state 300 between rule 166 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 166 and token T_SL resolved as shift.
Conflict in state 300 between rule 166 and token T_SR resolved as shift.
Conflict in state 300 between rule 166 and token '+' resolved as shift.
Conflict in state 300 between rule 166 and token '-' resolved as shift.
Conflict in state 300 between rule 166 and token '.' resolved as shift.
Conflict in state 300 between rule 166 and token '*' resolved as shift.
Conflict in state 300 between rule 166 and token '/' resolved as shift.
Conflict in state 300 between rule 166 and token '%' resolved as shift.
Conflict in state 301 between rule 167 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 301 between rule 167 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 301 between rule 167 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 301 between rule 167 and token '?' resolved as shift.
Conflict in state 301 between rule 167 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 301 between rule 167 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 301 between rule 167 and token '|' resolved as shift.
Conflict in state 301 between rule 167 and token '^' resolved as shift.
Conflict in state 301 between rule 167 and token '&' resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_EQUAL resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 301 between rule 167 and token '<' resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 167 and token '>' resolved as shift.
Conflict in state 301 between rule 167 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 167 and token T_SL resolved as shift.
Conflict in state 301 between rule 167 and token T_SR resolved as shift.
Conflict in state 301 between rule 167 and token '+' resolved as shift.
Conflict in state 301 between rule 167 and token '-' resolved as shift.
Conflict in state 301 between rule 167 and token '.' resolved as shift.
Conflict in state 301 between rule 167 and token '*' resolved as shift.
Conflict in state 301 between rule 167 and token '/' resolved as shift.
Conflict in state 301 between rule 167 and token '%' resolved as shift.
Conflict in state 302 between rule 168 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 168 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 302 between rule 168 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 168 and token '?' resolved as shift.
Conflict in state 302 between rule 168 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 302 between rule 168 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 302 between rule 168 and token '|' resolved as shift.
Conflict in state 302 between rule 168 and token '^' resolved as shift.
Conflict in state 302 between rule 168 and token '&' resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_EQUAL resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 302 between rule 168 and token '<' resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 168 and token '>' resolved as shift.
Conflict in state 302 between rule 168 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 168 and token T_SL resolved as shift.
Conflict in state 302 between rule 168 and token T_SR resolved as shift.
Conflict in state 302 between rule 168 and token '+' resolved as shift.
Conflict in state 302 between rule 168 and token '-' resolved as shift.
Conflict in state 302 between rule 168 and token '.' resolved as shift.
Conflict in state 302 between rule 168 and token '*' resolved as shift.
Conflict in state 302 between rule 168 and token '/' resolved as shift.
Conflict in state 302 between rule 168 and token '%' resolved as shift.
Conflict in state 303 between rule 169 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 303 between rule 169 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 303 between rule 169 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 303 between rule 169 and token '?' resolved as shift.
Conflict in state 303 between rule 169 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 303 between rule 169 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 303 between rule 169 and token '|' resolved as shift.
Conflict in state 303 between rule 169 and token '^' resolved as shift.
Conflict in state 303 between rule 169 and token '&' resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_EQUAL resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 303 between rule 169 and token '<' resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 169 and token '>' resolved as shift.
Conflict in state 303 between rule 169 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 169 and token T_SL resolved as shift.
Conflict in state 303 between rule 169 and token T_SR resolved as shift.
Conflict in state 303 between rule 169 and token '+' resolved as shift.
Conflict in state 303 between rule 169 and token '-' resolved as shift.
Conflict in state 303 between rule 169 and token '.' resolved as shift.
Conflict in state 303 between rule 169 and token '*' resolved as shift.
Conflict in state 303 between rule 169 and token '/' resolved as shift.
Conflict in state 303 between rule 169 and token '%' resolved as shift.
Conflict in state 304 between rule 170 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 304 between rule 170 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 304 between rule 170 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 304 between rule 170 and token '?' resolved as shift.
Conflict in state 304 between rule 170 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 304 between rule 170 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 304 between rule 170 and token '|' resolved as shift.
Conflict in state 304 between rule 170 and token '^' resolved as shift.
Conflict in state 304 between rule 170 and token '&' resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_EQUAL resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 304 between rule 170 and token '<' resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 170 and token '>' resolved as shift.
Conflict in state 304 between rule 170 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 170 and token T_SL resolved as shift.
Conflict in state 304 between rule 170 and token T_SR resolved as shift.
Conflict in state 304 between rule 170 and token '+' resolved as shift.
Conflict in state 304 between rule 170 and token '-' resolved as shift.
Conflict in state 304 between rule 170 and token '.' resolved as shift.
Conflict in state 304 between rule 170 and token '*' resolved as shift.
Conflict in state 304 between rule 170 and token '/' resolved as shift.
Conflict in state 304 between rule 170 and token '%' resolved as shift.
Conflict in state 305 between rule 171 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 305 between rule 171 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 305 between rule 171 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 171 and token '?' resolved as shift.
Conflict in state 305 between rule 171 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 305 between rule 171 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 305 between rule 171 and token '|' resolved as shift.
Conflict in state 305 between rule 171 and token '^' resolved as shift.
Conflict in state 305 between rule 171 and token '&' resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_EQUAL resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 305 between rule 171 and token '<' resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 171 and token '>' resolved as shift.
Conflict in state 305 between rule 171 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 171 and token T_SL resolved as shift.
Conflict in state 305 between rule 171 and token T_SR resolved as shift.
Conflict in state 305 between rule 171 and token '+' resolved as shift.
Conflict in state 305 between rule 171 and token '-' resolved as shift.
Conflict in state 305 between rule 171 and token '.' resolved as shift.
Conflict in state 305 between rule 171 and token '*' resolved as shift.
Conflict in state 305 between rule 171 and token '/' resolved as shift.
Conflict in state 305 between rule 171 and token '%' resolved as shift.
Conflict in state 369 between rule 181 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 369 between rule 181 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 369 between rule 181 and token T_LOGICAL_AND resolved as shift.
Conflict in state 369 between rule 181 and token '?' resolved as shift.
Conflict in state 369 between rule 181 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 369 between rule 181 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 369 between rule 181 and token '|' resolved as shift.
Conflict in state 369 between rule 181 and token '^' resolved as shift.
Conflict in state 369 between rule 181 and token '&' resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_EQUAL resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 369 between rule 181 and token '<' resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 369 between rule 181 and token '>' resolved as shift.
Conflict in state 369 between rule 181 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 369 between rule 181 and token T_SL resolved as shift.
Conflict in state 369 between rule 181 and token T_SR resolved as shift.
Conflict in state 369 between rule 181 and token '+' resolved as shift.
Conflict in state 369 between rule 181 and token '-' resolved as shift.
Conflict in state 369 between rule 181 and token '.' resolved as shift.
Conflict in state 369 between rule 181 and token '*' resolved as shift.
Conflict in state 369 between rule 181 and token '/' resolved as shift.
Conflict in state 369 between rule 181 and token '%' resolved as shift.
Conflict in state 370 between rule 183 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 370 between rule 183 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 370 between rule 183 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 370 between rule 183 and token '?' resolved as shift.
Conflict in state 370 between rule 183 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 370 between rule 183 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 370 between rule 183 and token '|' resolved as shift.
Conflict in state 370 between rule 183 and token '^' resolved as shift.
Conflict in state 370 between rule 183 and token '&' resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_EQUAL resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 370 between rule 183 and token '<' resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 370 between rule 183 and token '>' resolved as shift.
Conflict in state 370 between rule 183 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 370 between rule 183 and token T_SL resolved as shift.
Conflict in state 370 between rule 183 and token T_SR resolved as shift.
Conflict in state 370 between rule 183 and token '+' resolved as shift.
Conflict in state 370 between rule 183 and token '-' resolved as shift.
Conflict in state 370 between rule 183 and token '.' resolved as shift.
Conflict in state 370 between rule 183 and token '*' resolved as shift.
Conflict in state 370 between rule 183 and token '/' resolved as shift.
Conflict in state 370 between rule 183 and token '%' resolved as shift.
Conflict in state 372 between rule 177 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 372 between rule 177 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 372 between rule 177 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 372 between rule 177 and token '?' resolved as reduce.
Conflict in state 372 between rule 177 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 372 between rule 177 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 372 between rule 177 and token '|' resolved as shift.
Conflict in state 372 between rule 177 and token '^' resolved as shift.
Conflict in state 372 between rule 177 and token '&' resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_EQUAL resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 372 between rule 177 and token '<' resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 177 and token '>' resolved as shift.
Conflict in state 372 between rule 177 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 177 and token T_SL resolved as shift.
Conflict in state 372 between rule 177 and token T_SR resolved as shift.
Conflict in state 372 between rule 177 and token '+' resolved as shift.
Conflict in state 372 between rule 177 and token '-' resolved as shift.
Conflict in state 372 between rule 177 and token '.' resolved as shift.
Conflict in state 372 between rule 177 and token '*' resolved as shift.
Conflict in state 372 between rule 177 and token '/' resolved as shift.
Conflict in state 372 between rule 177 and token '%' resolved as shift.
Conflict in state 373 between rule 179 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 373 between rule 179 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 373 between rule 179 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 373 between rule 179 and token '?' resolved as reduce.
Conflict in state 373 between rule 179 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 373 between rule 179 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 373 between rule 179 and token '|' resolved as shift.
Conflict in state 373 between rule 179 and token '^' resolved as shift.
Conflict in state 373 between rule 179 and token '&' resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_EQUAL resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 373 between rule 179 and token '<' resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 373 between rule 179 and token '>' resolved as shift.
Conflict in state 373 between rule 179 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 373 between rule 179 and token T_SL resolved as shift.
Conflict in state 373 between rule 179 and token T_SR resolved as shift.
Conflict in state 373 between rule 179 and token '+' resolved as shift.
Conflict in state 373 between rule 179 and token '-' resolved as shift.
Conflict in state 373 between rule 179 and token '.' resolved as shift.
Conflict in state 373 between rule 179 and token '*' resolved as shift.
Conflict in state 373 between rule 179 and token '/' resolved as shift.
Conflict in state 373 between rule 179 and token '%' resolved as shift.
Conflict in state 522 between rule 155 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 522 between rule 155 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 522 between rule 155 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 522 between rule 155 and token '?' resolved as shift.
Conflict in state 522 between rule 155 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 522 between rule 155 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 522 between rule 155 and token '|' resolved as shift.
Conflict in state 522 between rule 155 and token '^' resolved as shift.
Conflict in state 522 between rule 155 and token '&' resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_EQUAL resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 522 between rule 155 and token '<' resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 522 between rule 155 and token '>' resolved as shift.
Conflict in state 522 between rule 155 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 522 between rule 155 and token T_SL resolved as shift.
Conflict in state 522 between rule 155 and token T_SR resolved as shift.
Conflict in state 522 between rule 155 and token '+' resolved as shift.
Conflict in state 522 between rule 155 and token '-' resolved as shift.
Conflict in state 522 between rule 155 and token '.' resolved as shift.
Conflict in state 522 between rule 155 and token '*' resolved as shift.
Conflict in state 522 between rule 155 and token '/' resolved as shift.
Conflict in state 522 between rule 155 and token '%' resolved as shift.
Conflict in state 527 between rule 211 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 527 between rule 211 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 527 between rule 211 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 527 between rule 211 and token '?' resolved as reduce.
Conflict in state 527 between rule 211 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 527 between rule 211 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 527 between rule 211 and token '|' resolved as shift.
Conflict in state 527 between rule 211 and token '^' resolved as shift.
Conflict in state 527 between rule 211 and token '&' resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_EQUAL resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 527 between rule 211 and token '<' resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 527 between rule 211 and token '>' resolved as shift.
Conflict in state 527 between rule 211 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 527 between rule 211 and token T_SL resolved as shift.
Conflict in state 527 between rule 211 and token T_SR resolved as shift.
Conflict in state 527 between rule 211 and token '+' resolved as shift.
Conflict in state 527 between rule 211 and token '-' resolved as shift.
Conflict in state 527 between rule 211 and token '.' resolved as shift.
Conflict in state 527 between rule 211 and token '*' resolved as shift.
Conflict in state 527 between rule 211 and token '/' resolved as shift.
Conflict in state 527 between rule 211 and token '%' resolved as shift.
State 248 contains 2 shift/reduce conflicts.
State 532 contains 2 shift/reduce conflicts.

Grammar
rule 1    start -> top_statement_list
rule 2    @1 ->		/* empty */
rule 3    top_statement_list -> top_statement_list @1 top_statement
rule 4    top_statement_list ->		/* empty */
rule 5    top_statement -> statement
rule 6    top_statement -> declaration_statement
rule 7    @2 ->		/* empty */
rule 8    inner_statement_list -> inner_statement_list @2 inner_statement
rule 9    inner_statement_list ->		/* empty */
rule 10   inner_statement -> statement
rule 11   inner_statement -> declaration_statement
rule 12   statement -> unticked_statement
rule 13   unticked_statement -> '{' inner_statement_list '}'
rule 14   @3 ->		/* empty */
rule 15   @4 ->		/* empty */
rule 16   unticked_statement -> T_IF '(' expr ')' @3 statement @4 elseif_list else_single
rule 17   @5 ->		/* empty */
rule 18   @6 ->		/* empty */
rule 19   unticked_statement -> T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'
rule 20   @7 ->		/* empty */
rule 21   @8 ->		/* empty */
rule 22   unticked_statement -> T_WHILE '(' @7 expr ')' @8 while_statement
rule 23   @9 ->		/* empty */
rule 24   @10 ->		/* empty */
rule 25   unticked_statement -> T_DO @9 statement T_WHILE '(' @10 expr ')' ';'
rule 26   @11 ->		/* empty */
rule 27   @12 ->		/* empty */
rule 28   @13 ->		/* empty */
rule 29   unticked_statement -> T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement
rule 30   @14 ->		/* empty */
rule 31   unticked_statement -> T_SWITCH '(' expr ')' @14 switch_case_list
rule 32   unticked_statement -> T_BREAK ';'
rule 33   unticked_statement -> T_BREAK expr ';'
rule 34   unticked_statement -> T_CONTINUE ';'
rule 35   unticked_statement -> T_CONTINUE expr ';'
rule 36   unticked_statement -> T_RETURN ';'
rule 37   unticked_statement -> T_RETURN expr_without_variable ';'
rule 38   unticked_statement -> T_RETURN cvar ';'
rule 39   unticked_statement -> T_GLOBAL global_var_list ';'
rule 40   unticked_statement -> T_STATIC static_var_list ';'
rule 41   unticked_statement -> T_ECHO echo_expr_list ';'
rule 42   unticked_statement -> T_INLINE_HTML
rule 43   unticked_statement -> expr ';'
rule 44   unticked_statement -> T_USE use_filename ';'
rule 45   unticked_statement -> T_UNSET '(' unset_variables ')' ';'
rule 46   @15 ->		/* empty */
rule 47   @16 ->		/* empty */
rule 48   unticked_statement -> T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement
rule 49   @17 ->		/* empty */
rule 50   @18 ->		/* empty */
rule 51   unticked_statement -> T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement
rule 52   @19 ->		/* empty */
rule 53   unticked_statement -> T_DECLARE @19 '(' declare_list ')' declare_statement
rule 54   unticked_statement -> ';'
rule 55   unset_variables -> unset_variable
rule 56   unset_variables -> unset_variables ',' unset_variable
rule 57   unset_variable -> cvar
rule 58   use_filename -> T_CONSTANT_ENCAPSED_STRING
rule 59   use_filename -> '(' T_CONSTANT_ENCAPSED_STRING ')'
rule 60   declaration_statement -> unticked_declaration_statement
rule 61   @20 ->		/* empty */
rule 62   @21 ->		/* empty */
rule 63   unticked_declaration_statement -> T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'
rule 64   @22 ->		/* empty */
rule 65   @23 ->		/* empty */
rule 66   unticked_declaration_statement -> T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'
rule 67   @24 ->		/* empty */
rule 68   unticked_declaration_statement -> T_CLASS T_STRING @24 '{' class_statement_list '}'
rule 69   @25 ->		/* empty */
rule 70   unticked_declaration_statement -> T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}'
rule 71   foreach_optional_arg ->		/* empty */
rule 72   foreach_optional_arg -> T_DOUBLE_ARROW w_cvar
rule 73   for_statement -> statement
rule 74   for_statement -> ':' inner_statement_list T_ENDFOR ';'
rule 75   foreach_statement -> statement
rule 76   foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';'
rule 77   declare_statement -> statement
rule 78   declare_statement -> ':' inner_statement_list T_ENDDECLARE ';'
rule 79   declare_list -> T_STRING '=' static_scalar
rule 80   declare_list -> declare_list ',' T_STRING '=' static_scalar
rule 81   switch_case_list -> '{' case_list '}'
rule 82   switch_case_list -> '{' ';' case_list '}'
rule 83   switch_case_list -> ':' case_list T_ENDSWITCH ';'
rule 84   switch_case_list -> ':' ';' case_list T_ENDSWITCH ';'
rule 85   case_list ->		/* empty */
rule 86   @26 ->		/* empty */
rule 87   case_list -> case_list T_CASE expr case_separator @26 inner_statement_list
rule 88   @27 ->		/* empty */
rule 89   case_list -> case_list T_DEFAULT case_separator @27 inner_statement_list
rule 90   case_separator -> ':'
rule 91   case_separator -> ';'
rule 92   while_statement -> statement
rule 93   while_statement -> ':' inner_statement_list T_ENDWHILE ';'
rule 94   elseif_list ->		/* empty */
rule 95   @28 ->		/* empty */
rule 96   elseif_list -> elseif_list T_ELSEIF '(' expr ')' @28 statement
rule 97   new_elseif_list ->		/* empty */
rule 98   @29 ->		/* empty */
rule 99   new_elseif_list -> new_elseif_list T_ELSEIF '(' expr ')' ':' @29 inner_statement_list
rule 100  else_single ->		/* empty */
rule 101  else_single -> T_ELSE statement
rule 102  new_else_single ->		/* empty */
rule 103  new_else_single -> T_ELSE ':' inner_statement_list
rule 104  parameter_list -> non_empty_parameter_list
rule 105  parameter_list ->		/* empty */
rule 106  non_empty_parameter_list -> T_VARIABLE
rule 107  non_empty_parameter_list -> '&' T_VARIABLE
rule 108  non_empty_parameter_list -> T_CONST T_VARIABLE
rule 109  non_empty_parameter_list -> T_VARIABLE '=' static_scalar
rule 110  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE
rule 111  non_empty_parameter_list -> non_empty_parameter_list ',' '&' T_VARIABLE
rule 112  non_empty_parameter_list -> non_empty_parameter_list ',' T_CONST T_VARIABLE
rule 113  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE '=' static_scalar
rule 114  function_call_parameter_list -> non_empty_function_call_parameter_list
rule 115  function_call_parameter_list ->		/* empty */
rule 116  non_empty_function_call_parameter_list -> expr_without_variable
rule 117  non_empty_function_call_parameter_list -> cvar
rule 118  non_empty_function_call_parameter_list -> '&' w_cvar
rule 119  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' expr_without_variable
rule 120  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' cvar
rule 121  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' '&' w_cvar
rule 122  global_var_list -> global_var_list ',' global_var
rule 123  global_var_list -> global_var
rule 124  global_var -> T_VARIABLE
rule 125  global_var -> '$' r_cvar
rule 126  global_var -> '$' '{' expr '}'
rule 127  static_var_list -> static_var_list ',' T_VARIABLE
rule 128  static_var_list -> static_var_list ',' T_VARIABLE '=' static_scalar
rule 129  static_var_list -> T_VARIABLE
rule 130  static_var_list -> T_VARIABLE '=' static_scalar
rule 131  class_statement_list -> class_statement_list class_statement
rule 132  class_statement_list ->		/* empty */
rule 133  class_statement -> T_VAR class_variable_decleration ';'
rule 134  @30 ->		/* empty */
rule 135  @31 ->		/* empty */
rule 136  class_statement -> T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'
rule 137  @32 ->		/* empty */
rule 138  @33 ->		/* empty */
rule 139  class_statement -> T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'
rule 140  is_reference ->		/* empty */
rule 141  is_reference -> '&'
rule 142  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE
rule 143  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE '=' static_scalar
rule 144  class_variable_decleration -> T_VARIABLE
rule 145  class_variable_decleration -> T_VARIABLE '=' static_scalar
rule 146  echo_expr_list ->		/* empty */
rule 147  echo_expr_list -> echo_expr_list ',' expr
rule 148  echo_expr_list -> expr
rule 149  for_expr ->		/* empty */
rule 150  for_expr -> non_empty_for_expr
rule 151  @34 ->		/* empty */
rule 152  non_empty_for_expr -> non_empty_for_expr ',' @34 expr
rule 153  non_empty_for_expr -> expr
rule 154  @35 ->		/* empty */
rule 155  expr_without_variable -> T_LIST '(' @35 assignment_list ')' '=' expr
rule 156  expr_without_variable -> cvar '=' expr
rule 157  expr_without_variable -> cvar '=' '&' w_cvar
rule 158  expr_without_variable -> cvar '=' '&' function_call
rule 159  @36 ->		/* empty */
rule 160  expr_without_variable -> T_NEW class_name @36 ctor_arguments
rule 161  expr_without_variable -> cvar T_PLUS_EQUAL expr
rule 162  expr_without_variable -> cvar T_MINUS_EQUAL expr
rule 163  expr_without_variable -> cvar T_MUL_EQUAL expr
rule 164  expr_without_variable -> cvar T_DIV_EQUAL expr
rule 165  expr_without_variable -> cvar T_CONCAT_EQUAL expr
rule 166  expr_without_variable -> cvar T_MOD_EQUAL expr
rule 167  expr_without_variable -> cvar T_AND_EQUAL expr
rule 168  expr_without_variable -> cvar T_OR_EQUAL expr
rule 169  expr_without_variable -> cvar T_XOR_EQUAL expr
rule 170  expr_without_variable -> cvar T_SL_EQUAL expr
rule 171  expr_without_variable -> cvar T_SR_EQUAL expr
rule 172  expr_without_variable -> rw_cvar T_INC
rule 173  expr_without_variable -> T_INC rw_cvar
rule 174  expr_without_variable -> rw_cvar T_DEC
rule 175  expr_without_variable -> T_DEC rw_cvar
rule 176  @37 ->		/* empty */
rule 177  expr_without_variable -> expr T_BOOLEAN_OR @37 expr
rule 178  @38 ->		/* empty */
rule 179  expr_without_variable -> expr T_BOOLEAN_AND @38 expr
rule 180  @39 ->		/* empty */
rule 181  expr_without_variable -> expr T_LOGICAL_OR @39 expr
rule 182  @40 ->		/* empty */
rule 183  expr_without_variable -> expr T_LOGICAL_AND @40 expr
rule 184  expr_without_variable -> expr T_LOGICAL_XOR expr
rule 185  expr_without_variable -> expr '|' expr
rule 186  expr_without_variable -> expr '&' expr
rule 187  expr_without_variable -> expr '^' expr
rule 188  expr_without_variable -> expr '.' expr
rule 189  expr_without_variable -> expr '+' expr
rule 190  expr_without_variable -> expr '-' expr
rule 191  expr_without_variable -> expr '*' expr
rule 192  expr_without_variable -> expr '/' expr
rule 193  expr_without_variable -> expr '%' expr
rule 194  expr_without_variable -> expr T_SL expr
rule 195  expr_without_variable -> expr T_SR expr
rule 196  expr_without_variable -> '+' expr
rule 197  expr_without_variable -> '-' expr
rule 198  expr_without_variable -> '!' expr
rule 199  expr_without_variable -> '~' expr
rule 200  expr_without_variable -> expr T_IS_IDENTICAL expr
rule 201  expr_without_variable -> expr T_IS_NOT_IDENTICAL expr
rule 202  expr_without_variable -> expr T_IS_EQUAL expr
rule 203  expr_without_variable -> expr T_IS_NOT_EQUAL expr
rule 204  expr_without_variable -> expr '<' expr
rule 205  expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr
rule 206  expr_without_variable -> expr '>' expr
rule 207  expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr
rule 208  expr_without_variable -> '(' expr ')'
rule 209  @41 ->		/* empty */
rule 210  @42 ->		/* empty */
rule 211  expr_without_variable -> expr '?' @41 expr ':' @42 expr
rule 212  expr_without_variable -> function_call
rule 213  expr_without_variable -> internal_functions_in_yacc
rule 214  expr_without_variable -> T_INT_CAST expr
rule 215  expr_without_variable -> T_DOUBLE_CAST expr
rule 216  expr_without_variable -> T_STRING_CAST expr
rule 217  expr_without_variable -> T_ARRAY_CAST expr
rule 218  expr_without_variable -> T_OBJECT_CAST expr
rule 219  expr_without_variable -> T_BOOL_CAST expr
rule 220  expr_without_variable -> T_UNSET_CAST expr
rule 221  expr_without_variable -> T_EXIT exit_expr
rule 222  @43 ->		/* empty */
rule 223  expr_without_variable -> '@' @43 expr
rule 224  expr_without_variable -> scalar
rule 225  expr_without_variable -> T_ARRAY '(' array_pair_list ')'
rule 226  expr_without_variable -> '`' encaps_list '`'
rule 227  expr_without_variable -> T_PRINT expr
rule 228  @44 ->		/* empty */
rule 229  function_call -> T_STRING '(' @44 function_call_parameter_list ')'
rule 230  @45 ->		/* empty */
rule 231  function_call -> cvar '(' @45 function_call_parameter_list ')'
rule 232  @46 ->		/* empty */
rule 233  function_call -> T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 function_call_parameter_list ')'
rule 234  exit_expr ->		/* empty */
rule 235  exit_expr -> '(' ')'
rule 236  exit_expr -> '(' expr ')'
rule 237  ctor_arguments ->		/* empty */
rule 238  ctor_arguments -> '(' function_call_parameter_list ')'
rule 239  class_name -> T_STRING
rule 240  class_name -> r_cvar
rule 241  common_scalar -> T_LNUMBER
rule 242  common_scalar -> T_DNUMBER
rule 243  common_scalar -> T_CONSTANT_ENCAPSED_STRING
rule 244  common_scalar -> T_LINE
rule 245  common_scalar -> T_FILE
rule 246  static_scalar -> common_scalar
rule 247  static_scalar -> T_STRING
rule 248  static_scalar -> '+' static_scalar
rule 249  static_scalar -> '-' static_scalar
rule 250  static_scalar -> T_ARRAY '(' static_array_pair_list ')'
rule 251  scalar -> T_STRING
rule 252  scalar -> T_STRING_VARNAME
rule 253  scalar -> common_scalar
rule 254  scalar -> '\"' encaps_list '\"'
rule 255  scalar -> '\'' encaps_list '\''
rule 256  scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC
rule 257  static_array_pair_list ->		/* empty */
rule 258  static_array_pair_list -> non_empty_static_array_pair_list possible_comma
rule 259  possible_comma ->		/* empty */
rule 260  possible_comma -> ','
rule 261  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
rule 262  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar
rule 263  non_empty_static_array_pair_list -> static_scalar T_DOUBLE_ARROW static_scalar
rule 264  non_empty_static_array_pair_list -> static_scalar
rule 265  expr -> r_cvar
rule 266  expr -> expr_without_variable
rule 267  r_cvar -> cvar
rule 268  w_cvar -> cvar
rule 269  rw_cvar -> cvar
rule 270  cvar -> cvar_without_objects
rule 271  @47 ->		/* empty */
rule 272  cvar -> cvar_without_objects T_OBJECT_OPERATOR @47 ref_list
rule 273  cvar_without_objects -> reference_variable
rule 274  cvar_without_objects -> simple_indirect_reference reference_variable
rule 275  reference_variable -> reference_variable '[' dim_offset ']'
rule 276  reference_variable -> reference_variable '{' expr '}'
rule 277  reference_variable -> compound_variable
rule 278  compound_variable -> T_VARIABLE
rule 279  compound_variable -> '$' '{' expr '}'
rule 280  dim_offset ->		/* empty */
rule 281  dim_offset -> expr
rule 282  ref_list -> object_property
rule 283  @48 ->		/* empty */
rule 284  ref_list -> ref_list T_OBJECT_OPERATOR @48 object_property
rule 285  object_property -> object_dim_list
rule 286  @49 ->		/* empty */
rule 287  object_property -> cvar_without_objects @49
rule 288  object_dim_list -> object_dim_list '[' dim_offset ']'
rule 289  object_dim_list -> object_dim_list '{' expr '}'
rule 290  object_dim_list -> variable_name
rule 291  variable_name -> T_STRING
rule 292  variable_name -> '{' expr '}'
rule 293  simple_indirect_reference -> '$'
rule 294  simple_indirect_reference -> simple_indirect_reference '$'
rule 295  assignment_list -> assignment_list ',' assignment_list_element
rule 296  assignment_list -> assignment_list_element
rule 297  assignment_list_element -> cvar
rule 298  @50 ->		/* empty */
rule 299  assignment_list_element -> T_LIST '(' @50 assignment_list ')'
rule 300  assignment_list_element ->		/* empty */
rule 301  array_pair_list ->		/* empty */
rule 302  array_pair_list -> non_empty_array_pair_list possible_comma
rule 303  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
rule 304  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr
rule 305  non_empty_array_pair_list -> expr T_DOUBLE_ARROW expr
rule 306  non_empty_array_pair_list -> expr
rule 307  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar
rule 308  non_empty_array_pair_list -> non_empty_array_pair_list ',' '&' w_cvar
rule 309  non_empty_array_pair_list -> expr T_DOUBLE_ARROW '&' w_cvar
rule 310  non_empty_array_pair_list -> '&' w_cvar
rule 311  encaps_list -> encaps_list encaps_var
rule 312  encaps_list -> encaps_list T_STRING
rule 313  encaps_list -> encaps_list T_NUM_STRING
rule 314  encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE
rule 315  encaps_list -> encaps_list T_CHARACTER
rule 316  encaps_list -> encaps_list T_BAD_CHARACTER
rule 317  encaps_list -> encaps_list '['
rule 318  encaps_list -> encaps_list ']'
rule 319  encaps_list -> encaps_list '{'
rule 320  encaps_list -> encaps_list '}'
rule 321  encaps_list -> encaps_list T_OBJECT_OPERATOR
rule 322  encaps_list ->		/* empty */
rule 323  encaps_var -> T_VARIABLE
rule 324  @51 ->		/* empty */
rule 325  encaps_var -> T_VARIABLE '[' @51 encaps_var_offset ']'
rule 326  encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING
rule 327  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}'
rule 328  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
rule 329  encaps_var -> T_CURLY_OPEN cvar '}'
rule 330  encaps_var_offset -> T_STRING
rule 331  encaps_var_offset -> T_NUM_STRING
rule 332  encaps_var_offset -> T_VARIABLE
rule 333  internal_functions_in_yacc -> T_ISSET '(' cvar ')'
rule 334  internal_functions_in_yacc -> T_EMPTY '(' cvar ')'
rule 335  internal_functions_in_yacc -> T_INCLUDE expr
rule 336  internal_functions_in_yacc -> T_INCLUDE_ONCE expr
rule 337  internal_functions_in_yacc -> T_EVAL '(' expr ')'
rule 338  internal_functions_in_yacc -> T_REQUIRE expr
rule 339  internal_functions_in_yacc -> T_REQUIRE_ONCE use_filename

Terminals, with rules where they appear

$ (-1)
'!' (33) 198
'\"' (34) 254
'$' (36) 125 126 279 293 294
'%' (37) 193
'&' (38) 107 111 118 121 141 157 158 186 307 308 309 310
'\'' (39) 255
'(' (40) 16 19 22 25 29 31 45 48 51 53 59 63 66 96 99 136 139 155 208
    225 229 231 233 235 236 238 250 299 333 334 337
')' (41) 16 19 22 25 29 31 45 48 51 53 59 63 66 96 99 136 139 155 208
    225 229 231 233 235 236 238 250 299 333 334 337
'*' (42) 191
'+' (43) 189 196 248
',' (44) 56 80 110 111 112 113 119 120 121 122 127 128 142 143 147
    152 260 261 262 295 303 304 307 308
'-' (45) 190 197 249
'.' (46) 188
'/' (47) 192
':' (58) 19 74 76 78 83 84 90 93 99 103 211
';' (59) 19 25 29 32 33 34 35 36 37 38 39 40 41 43 44 45 54 66 74 76
    78 82 83 84 91 93 133 139
'<' (60) 204
'=' (61) 79 80 109 113 128 130 143 145 155 156 157 158
'>' (62) 206
'?' (63) 211
'@' (64) 223
'[' (91) 275 288 317 325 328
']' (93) 275 288 318 325 328
'^' (94) 187
'`' (96) 226
'{' (123) 13 63 68 70 81 82 126 136 276 279 289 292 319
'|' (124) 185
'}' (125) 13 63 68 70 81 82 126 136 276 279 289 292 320 327 328 329
'~' (126) 199
error (256)
T_INCLUDE (257) 335
T_INCLUDE_ONCE (258) 336
T_EVAL (259) 337
T_REQUIRE (260) 338
T_REQUIRE_ONCE (261) 339
T_LOGICAL_OR (262) 181
T_LOGICAL_XOR (263) 184
T_LOGICAL_AND (264) 183
T_PRINT (265) 227
T_PLUS_EQUAL (266) 161
T_MINUS_EQUAL (267) 162
T_MUL_EQUAL (268) 163
T_DIV_EQUAL (269) 164
T_CONCAT_EQUAL (270) 165
T_MOD_EQUAL (271) 166
T_AND_EQUAL (272) 167
T_OR_EQUAL (273) 168
T_XOR_EQUAL (274) 169
T_SL_EQUAL (275) 170
T_SR_EQUAL (276) 171
T_BOOLEAN_OR (277) 177
T_BOOLEAN_AND (278) 179
T_IS_EQUAL (279) 202
T_IS_NOT_EQUAL (280) 203
T_IS_IDENTICAL (281) 200
T_IS_NOT_IDENTICAL (282) 201
T_IS_SMALLER_OR_EQUAL (283) 205
T_IS_GREATER_OR_EQUAL (284) 207
T_SL (285) 194
T_SR (286) 195
T_INC (287) 172 173
T_DEC (288) 174 175
T_INT_CAST (289) 214
T_DOUBLE_CAST (290) 215
T_STRING_CAST (291) 216
T_ARRAY_CAST (292) 217
T_OBJECT_CAST (293) 218
T_BOOL_CAST (294) 219
T_UNSET_CAST (295) 220
T_NEW (296) 160
T_EXIT (297) 221
T_IF (298) 16 19
T_ELSEIF (299) 96 99
T_ELSE (300) 101 103
T_ENDIF (301) 19
T_LNUMBER (302) 241
T_DNUMBER (303) 242
T_STRING (304) 63 66 68 70 79 80 136 139 229 233 239 247 251 291 312
    326 330
T_STRING_VARNAME (305) 252 328
T_VARIABLE (306) 106 107 108 109 110 111 112 113 124 127 128 129 130
    142 143 144 145 278 323 325 326 332
T_NUM_STRING (307) 313 331
T_INLINE_HTML (308) 42
T_CHARACTER (309) 315
T_BAD_CHARACTER (310) 316
T_ENCAPSED_AND_WHITESPACE (311) 314
T_CONSTANT_ENCAPSED_STRING (312) 58 59 243
T_ECHO (313) 41
T_DO (314) 25
T_WHILE (315) 22 25
T_ENDWHILE (316) 93
T_FOR (317) 29
T_ENDFOR (318) 74
T_FOREACH (319) 48 51
T_ENDFOREACH (320) 76
T_DECLARE (321) 53
T_ENDDECLARE (322) 78
T_AS (323) 48 51
T_SWITCH (324) 31
T_ENDSWITCH (325) 83 84
T_CASE (326) 87
T_DEFAULT (327) 89
T_BREAK (328) 32 33
T_CONTINUE (329) 34 35
T_OLD_FUNCTION (330) 66 139
T_FUNCTION (331) 63 136
T_CONST (332) 108 112
T_RETURN (333) 36 37 38
T_USE (334) 44
T_GLOBAL (335) 39
T_STATIC (336) 40
T_VAR (337) 133
T_UNSET (338) 45
T_ISSET (339) 333
T_EMPTY (340) 334
T_CLASS (341) 68 70
T_EXTENDS (342) 70
T_OBJECT_OPERATOR (343) 272 284 321 326
T_DOUBLE_ARROW (344) 72 261 263 303 305 307 309
T_LIST (345) 155 299
T_ARRAY (346) 225 250
T_LINE (347) 244
T_FILE (348) 245
T_COMMENT (349)
T_ML_COMMENT (350)
T_OPEN_TAG (351)
T_OPEN_TAG_WITH_ECHO (352)
T_CLOSE_TAG (353)
T_WHITESPACE (354)
T_START_HEREDOC (355) 256
T_END_HEREDOC (356) 256
T_DOLLAR_OPEN_CURLY_BRACES (357) 327 328
T_CURLY_OPEN (358) 329
T_PAAMAYIM_NEKUDOTAYIM (359) 233

Nonterminals, with rules where they appear

start (135)
    on left: 1
top_statement_list (136)
    on left: 3 4, on right: 1 3
@1 (137)
    on left: 2, on right: 3
top_statement (138)
    on left: 5 6, on right: 3
inner_statement_list (139)
    on left: 8 9, on right: 8 13 19 63 66 74 76 78 87 89 93 99 103
    136 139
@2 (140)
    on left: 7, on right: 8
inner_statement (141)
    on left: 10 11, on right: 8
statement (142)
    on left: 12, on right: 5 10 16 25 73 75 77 92 96 101
unticked_statement (143)
    on left: 13 16 19 22 25 29 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 48 51 53 54, on right: 12
@3 (144)
    on left: 14, on right: 16
@4 (145)
    on left: 15, on right: 16
@5 (146)
    on left: 17, on right: 19
@6 (147)
    on left: 18, on right: 19
@7 (148)
    on left: 20, on right: 22
@8 (149)
    on left: 21, on right: 22
@9 (150)
    on left: 23, on right: 25
@10 (151)
    on left: 24, on right: 25
@11 (152)
    on left: 26, on right: 29
@12 (153)
    on left: 27, on right: 29
@13 (154)
    on left: 28, on right: 29
@14 (155)
    on left: 30, on right: 31
@15 (156)
    on left: 46, on right: 48
@16 (157)
    on left: 47, on right: 48
@17 (158)
    on left: 49, on right: 51
@18 (159)
    on left: 50, on right: 51
@19 (160)
    on left: 52, on right: 53
unset_variables (161)
    on left: 55 56, on right: 45 56
unset_variable (162)
    on left: 57, on right: 55 56
use_filename (163)
    on left: 58 59, on right: 44 339
declaration_statement (164)
    on left: 60, on right: 6 11
unticked_declaration_statement (165)
    on left: 63 66 68 70, on right: 60
@20 (166)
    on left: 61, on right: 63
@21 (167)
    on left: 62, on right: 63
@22 (168)
    on left: 64, on right: 66
@23 (169)
    on left: 65, on right: 66
@24 (170)
    on left: 67, on right: 68
@25 (171)
    on left: 69, on right: 70
foreach_optional_arg (172)
    on left: 71 72, on right: 48 51
for_statement (173)
    on left: 73 74, on right: 29
foreach_statement (174)
    on left: 75 76, on right: 48 51
declare_statement (175)
    on left: 77 78, on right: 53
declare_list (176)
    on left: 79 80, on right: 53 80
switch_case_list (177)
    on left: 81 82 83 84, on right: 31
case_list (178)
    on left: 85 87 89, on right: 81 82 83 84 87 89
@26 (179)
    on left: 86, on right: 87
@27 (180)
    on left: 88, on right: 89
case_separator (181)
    on left: 90 91, on right: 87 89
while_statement (182)
    on left: 92 93, on right: 22
elseif_list (183)
    on left: 94 96, on right: 16 96
@28 (184)
    on left: 95, on right: 96
new_elseif_list (185)
    on left: 97 99, on right: 19 99
@29 (186)
    on left: 98, on right: 99
else_single (187)
    on left: 100 101, on right: 16
new_else_single (188)
    on left: 102 103, on right: 19
parameter_list (189)
    on left: 104 105, on right: 63 66 136 139
non_empty_parameter_list (190)
    on left: 106 107 108 109 110 111 112 113, on right: 104 110 111
    112 113
function_call_parameter_list (191)
    on left: 114 115, on right: 229 231 233 238
non_empty_function_call_parameter_list (192)
    on left: 116 117 118 119 120 121, on right: 114 119 120 121
global_var_list (193)
    on left: 122 123, on right: 39 122
global_var (194)
    on left: 124 125 126, on right: 122 123
static_var_list (195)
    on left: 127 128 129 130, on right: 40 127 128
class_statement_list (196)
    on left: 131 132, on right: 68 70 131
class_statement (197)
    on left: 133 136 139, on right: 131
@30 (198)
    on left: 134, on right: 136
@31 (199)
    on left: 135, on right: 136
@32 (200)
    on left: 137, on right: 139
@33 (201)
    on left: 138, on right: 139
is_reference (202)
    on left: 140 141, on right: 63 66 136 139
class_variable_decleration (203)
    on left: 142 143 144 145, on right: 133 142 143
echo_expr_list (204)
    on left: 146 147 148, on right: 41 147
for_expr (205)
    on left: 149 150, on right: 29
non_empty_for_expr (206)
    on left: 152 153, on right: 150 152
@34 (207)
    on left: 151, on right: 152
expr_without_variable (208)
    on left: 155 156 157 158 160 161 162 163 164 165 166 167 168 169
    170 171 172 173 174 175 177 179 181 183 184 185 186 187 188 189
    190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
    206 207 208 211 212 213 214 215 216 217 218 219 220 221 223 224
    225 226 227, on right: 37 51 116 119 266
@35 (209)
    on left: 154, on right: 155
@36 (210)
    on left: 159, on right: 160
@37 (211)
    on left: 176, on right: 177
@38 (212)
    on left: 178, on right: 179
@39 (213)
    on left: 180, on right: 181
@40 (214)
    on left: 182, on right: 183
@41 (215)
    on left: 209, on right: 211
@42 (216)
    on left: 210, on right: 211
@43 (217)
    on left: 222, on right: 223
function_call (218)
    on left: 229 231 233, on right: 158 212
@44 (219)
    on left: 228, on right: 229
@45 (220)
    on left: 230, on right: 231
@46 (221)
    on left: 232, on right: 233
exit_expr (222)
    on left: 234 235 236, on right: 221
ctor_arguments (223)
    on left: 237 238, on right: 160
class_name (224)
    on left: 239 240, on right: 160
common_scalar (225)
    on left: 241 242 243 244 245, on right: 246 253
static_scalar (226)
    on left: 246 247 248 249 250, on right: 79 80 109 113 128 130 143
    145 248 249 261 262 263 264
scalar (227)
    on left: 251 252 253 254 255 256, on right: 224
static_array_pair_list (228)
    on left: 257 258, on right: 250
possible_comma (229)
    on left: 259 260, on right: 258 302
non_empty_static_array_pair_list (230)
    on left: 261 262 263 264, on right: 258 261 262
expr (231)
    on left: 265 266, on right: 16 19 22 25 31 33 35 43 87 96 99 126
    147 148 152 153 155 156 161 162 163 164 165 166 167 168 169 170
    171 177 179 181 183 184 185 186 187 188 189 190 191 192 193 194
    195 196 197 198 199 200 201 202 203 204 205 206 207 208 211 214
    215 216 217 218 219 220 223 227 236 276 279 281 289 292 303 304
    305 306 307 309 327 328 335 336 337 338
r_cvar (232)
    on left: 267, on right: 125 240 265
w_cvar (233)
    on left: 268, on right: 48 51 72 118 121 157 307 308 309 310
rw_cvar (234)
    on left: 269, on right: 172 173 174 175
cvar (235)
    on left: 270 272, on right: 38 57 117 120 156 157 158 161 162 163
    164 165 166 167 168 169 170 171 231 267 268 269 297 329 333 334
@47 (236)
    on left: 271, on right: 272
cvar_without_objects (237)
    on left: 273 274, on right: 270 272 287
reference_variable (238)
    on left: 275 276 277, on right: 273 274 275 276
compound_variable (239)
    on left: 278 279, on right: 277
dim_offset (240)
    on left: 280 281, on right: 275 288
ref_list (241)
    on left: 282 284, on right: 272 284
@48 (242)
    on left: 283, on right: 284
object_property (243)
    on left: 285 287, on right: 282 284
@49 (244)
    on left: 286, on right: 287
object_dim_list (245)
    on left: 288 289 290, on right: 285 288 289
variable_name (246)
    on left: 291 292, on right: 290
simple_indirect_reference (247)
    on left: 293 294, on right: 274 294
assignment_list (248)
    on left: 295 296, on right: 155 295 299
assignment_list_element (249)
    on left: 297 299 300, on right: 295 296
@50 (250)
    on left: 298, on right: 299
array_pair_list (251)
    on left: 301 302, on right: 225
non_empty_array_pair_list (252)
    on left: 303 304 305 306 307 308 309 310, on right: 302 303 304
    307 308
encaps_list (253)
    on left: 311 312 313 314 315 316 317 318 319 320 321 322,
    on right: 226 254 255 256 311 312 313 314 315 316 317 318 319 320
    321
encaps_var (254)
    on left: 323 325 326 327 328 329, on right: 311
@51 (255)
    on left: 324, on right: 325
encaps_var_offset (256)
    on left: 330 331 332, on right: 325
internal_functions_in_yacc (257)
    on left: 333 334 335 336 337 338 339, on right: 213


state 0

    $default	reduce using rule 4 (top_statement_list)

    start	go to state 652
    top_statement_list	go to state 1



state 1

    start  ->  top_statement_list .   (rule 1)
    top_statement_list  ->  top_statement_list . @1 top_statement   (rule 3)

    $   	reduce using rule 1 (start)
    $default	reduce using rule 2 (@1)

    @1  	go to state 2



state 2

    top_statement_list  ->  top_statement_list @1 . top_statement   (rule 3)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_OLD_FUNCTION	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    top_statement	go to state 64
    statement	go to state 65
    unticked_statement	go to state 66
    declaration_statement	go to state 67
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 3

    internal_functions_in_yacc  ->  T_INCLUDE . expr   (rule 335)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 82
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 4

    internal_functions_in_yacc  ->  T_INCLUDE_ONCE . expr   (rule 336)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 83
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 5

    internal_functions_in_yacc  ->  T_EVAL . '(' expr ')'   (rule 337)

    '(' 	shift, and go to state 84



state 6

    internal_functions_in_yacc  ->  T_REQUIRE . expr   (rule 338)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 85
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 7

    internal_functions_in_yacc  ->  T_REQUIRE_ONCE . use_filename   (rule 339)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 86
    '(' 	shift, and go to state 87

    use_filename	go to state 88



state 8

    expr_without_variable  ->  T_PRINT . expr   (rule 227)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 89
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 9

    expr_without_variable  ->  '+' . expr   (rule 196)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 90
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 10

    expr_without_variable  ->  '-' . expr   (rule 197)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 91
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 11

    expr_without_variable  ->  '!' . expr   (rule 198)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 92
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 12

    expr_without_variable  ->  '~' . expr   (rule 199)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 93
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 13

    expr_without_variable  ->  T_INC . rw_cvar   (rule 173)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    rw_cvar	go to state 94
    cvar	go to state 95
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 14

    expr_without_variable  ->  T_DEC . rw_cvar   (rule 175)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    rw_cvar	go to state 96
    cvar	go to state 95
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 15

    expr_without_variable  ->  T_INT_CAST . expr   (rule 214)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 97
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 16

    expr_without_variable  ->  T_DOUBLE_CAST . expr   (rule 215)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 98
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 17

    expr_without_variable  ->  T_STRING_CAST . expr   (rule 216)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 99
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 18

    expr_without_variable  ->  T_ARRAY_CAST . expr   (rule 217)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 100
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 19

    expr_without_variable  ->  T_OBJECT_CAST . expr   (rule 218)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 101
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 20

    expr_without_variable  ->  T_BOOL_CAST . expr   (rule 219)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 102
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 21

    expr_without_variable  ->  T_UNSET_CAST . expr   (rule 220)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 103
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 22

    expr_without_variable  ->  '@' . @43 expr   (rule 223)

    $default	reduce using rule 222 (@43)

    @43 	go to state 104



state 23

    expr_without_variable  ->  T_NEW . class_name @36 ctor_arguments   (rule 160)

    T_STRING	shift, and go to state 105
    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    class_name	go to state 106
    r_cvar	go to state 107
    cvar	go to state 108
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 24

    expr_without_variable  ->  T_EXIT . exit_expr   (rule 221)

    '(' 	shift, and go to state 109

    $default	reduce using rule 234 (exit_expr)

    exit_expr	go to state 110



state 25

    unticked_statement  ->  T_IF . '(' expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF . '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    '(' 	shift, and go to state 111



state 26

    common_scalar  ->  T_LNUMBER .   (rule 241)

    $default	reduce using rule 241 (common_scalar)



state 27

    common_scalar  ->  T_DNUMBER .   (rule 242)

    $default	reduce using rule 242 (common_scalar)



state 28

    function_call  ->  T_STRING . '(' @44 function_call_parameter_list ')'   (rule 229)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 function_call_parameter_list ')'   (rule 233)
    scalar  ->  T_STRING .   (rule 251)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 112
    '(' 	shift, and go to state 113

    $default	reduce using rule 251 (scalar)



state 29

    scalar  ->  T_STRING_VARNAME .   (rule 252)

    $default	reduce using rule 252 (scalar)



state 30

    compound_variable  ->  T_VARIABLE .   (rule 278)

    $default	reduce using rule 278 (compound_variable)



state 31

    unticked_statement  ->  T_INLINE_HTML .   (rule 42)

    $default	reduce using rule 42 (unticked_statement)



state 32

    common_scalar  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 243)

    $default	reduce using rule 243 (common_scalar)



state 33

    unticked_statement  ->  T_ECHO . echo_expr_list ';'   (rule 41)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 146 (echo_expr_list)

    echo_expr_list	go to state 114
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 115
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 34

    unticked_statement  ->  T_DO . @9 statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 23 (@9)

    @9  	go to state 116



state 35

    unticked_statement  ->  T_WHILE . '(' @7 expr ')' @8 while_statement   (rule 22)

    '(' 	shift, and go to state 117



state 36

    unticked_statement  ->  T_FOR . '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    '(' 	shift, and go to state 118



state 37

    unticked_statement  ->  T_FOREACH . '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)
    unticked_statement  ->  T_FOREACH . '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    '(' 	shift, and go to state 119



state 38

    unticked_statement  ->  T_DECLARE . @19 '(' declare_list ')' declare_statement   (rule 53)

    $default	reduce using rule 52 (@19)

    @19 	go to state 120



state 39

    unticked_statement  ->  T_SWITCH . '(' expr ')' @14 switch_case_list   (rule 31)

    '(' 	shift, and go to state 121



state 40

    unticked_statement  ->  T_BREAK . ';'   (rule 32)
    unticked_statement  ->  T_BREAK . expr ';'   (rule 33)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 122
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 123
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 41

    unticked_statement  ->  T_CONTINUE . ';'   (rule 34)
    unticked_statement  ->  T_CONTINUE . expr ';'   (rule 35)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 124
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 125
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 42

    unticked_declaration_statement  ->  T_OLD_FUNCTION . @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 64 (@22)

    @22 	go to state 126



state 43

    unticked_declaration_statement  ->  T_FUNCTION . @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    $default	reduce using rule 61 (@20)

    @20 	go to state 127



state 44

    unticked_statement  ->  T_RETURN . ';'   (rule 36)
    unticked_statement  ->  T_RETURN . expr_without_variable ';'   (rule 37)
    unticked_statement  ->  T_RETURN . cvar ';'   (rule 38)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 128
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 129
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 131
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 45

    unticked_statement  ->  T_USE . use_filename ';'   (rule 44)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 86
    '(' 	shift, and go to state 87

    use_filename	go to state 132



state 46

    unticked_statement  ->  T_GLOBAL . global_var_list ';'   (rule 39)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var_list	go to state 135
    global_var	go to state 136



state 47

    unticked_statement  ->  T_STATIC . static_var_list ';'   (rule 40)

    T_VARIABLE	shift, and go to state 137

    static_var_list	go to state 138



state 48

    unticked_statement  ->  T_UNSET . '(' unset_variables ')' ';'   (rule 45)

    '(' 	shift, and go to state 139



state 49

    internal_functions_in_yacc  ->  T_ISSET . '(' cvar ')'   (rule 333)

    '(' 	shift, and go to state 140



state 50

    internal_functions_in_yacc  ->  T_EMPTY . '(' cvar ')'   (rule 334)

    '(' 	shift, and go to state 141



state 51

    unticked_declaration_statement  ->  T_CLASS . T_STRING @24 '{' class_statement_list '}'   (rule 68)
    unticked_declaration_statement  ->  T_CLASS . T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_STRING	shift, and go to state 142



state 52

    expr_without_variable  ->  T_LIST . '(' @35 assignment_list ')' '=' expr   (rule 155)

    '(' 	shift, and go to state 143



state 53

    expr_without_variable  ->  T_ARRAY . '(' array_pair_list ')'   (rule 225)

    '(' 	shift, and go to state 144



state 54

    common_scalar  ->  T_LINE .   (rule 244)

    $default	reduce using rule 244 (common_scalar)



state 55

    common_scalar  ->  T_FILE .   (rule 245)

    $default	reduce using rule 245 (common_scalar)



state 56

    scalar  ->  T_START_HEREDOC . encaps_list T_END_HEREDOC   (rule 256)

    $default	reduce using rule 322 (encaps_list)

    encaps_list	go to state 145



state 57

    unticked_statement  ->  '{' . inner_statement_list '}'   (rule 13)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 146



state 58

    expr_without_variable  ->  '(' . expr ')'   (rule 208)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 147
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 59

    unticked_statement  ->  ';' .   (rule 54)

    $default	reduce using rule 54 (unticked_statement)



state 60

    compound_variable  ->  '$' . '{' expr '}'   (rule 279)
    simple_indirect_reference  ->  '$' .   (rule 293)

    '{' 	shift, and go to state 148

    $default	reduce using rule 293 (simple_indirect_reference)



state 61

    expr_without_variable  ->  '`' . encaps_list '`'   (rule 226)

    $default	reduce using rule 322 (encaps_list)

    encaps_list	go to state 149



state 62

    scalar  ->  '\"' . encaps_list '\"'   (rule 254)

    $default	reduce using rule 322 (encaps_list)

    encaps_list	go to state 150



state 63

    scalar  ->  '\'' . encaps_list '\''   (rule 255)

    $default	reduce using rule 322 (encaps_list)

    encaps_list	go to state 151



state 64

    top_statement_list  ->  top_statement_list @1 top_statement .   (rule 3)

    $default	reduce using rule 3 (top_statement_list)



state 65

    top_statement  ->  statement .   (rule 5)

    $default	reduce using rule 5 (top_statement)



state 66

    statement  ->  unticked_statement .   (rule 12)

    $default	reduce using rule 12 (statement)



state 67

    top_statement  ->  declaration_statement .   (rule 6)

    $default	reduce using rule 6 (top_statement)



state 68

    declaration_statement  ->  unticked_declaration_statement .   (rule 60)

    $default	reduce using rule 60 (declaration_statement)



state 69

    expr  ->  expr_without_variable .   (rule 266)

    $default	reduce using rule 266 (expr)



state 70

    expr_without_variable  ->  function_call .   (rule 212)

    $default	reduce using rule 212 (expr_without_variable)



state 71

    scalar  ->  common_scalar .   (rule 253)

    $default	reduce using rule 253 (scalar)



state 72

    expr_without_variable  ->  scalar .   (rule 224)

    $default	reduce using rule 224 (expr_without_variable)



state 73

    unticked_statement  ->  expr . ';'   (rule 43)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 177



state 74

    expr  ->  r_cvar .   (rule 265)

    $default	reduce using rule 265 (expr)



state 75

    expr_without_variable  ->  rw_cvar . T_INC   (rule 172)
    expr_without_variable  ->  rw_cvar . T_DEC   (rule 174)

    T_INC	shift, and go to state 178
    T_DEC	shift, and go to state 179



state 76

    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 171)
    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    r_cvar  ->  cvar .   (rule 267)
    rw_cvar  ->  cvar .   (rule 269)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    T_INC	reduce using rule 269 (rw_cvar)
    T_DEC	reduce using rule 269 (rw_cvar)
    $default	reduce using rule 267 (r_cvar)



state 77

    cvar  ->  cvar_without_objects .   (rule 270)
    cvar  ->  cvar_without_objects . T_OBJECT_OPERATOR @47 ref_list   (rule 272)

    T_OBJECT_OPERATOR	shift, and go to state 193

    $default	reduce using rule 270 (cvar)



state 78

    cvar_without_objects  ->  reference_variable .   (rule 273)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 275)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 276)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 273 (cvar_without_objects)



state 79

    reference_variable  ->  compound_variable .   (rule 277)

    $default	reduce using rule 277 (reference_variable)



state 80

    cvar_without_objects  ->  simple_indirect_reference . reference_variable   (rule 274)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 294)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 196

    reference_variable	go to state 197
    compound_variable	go to state 79



state 81

    expr_without_variable  ->  internal_functions_in_yacc .   (rule 213)

    $default	reduce using rule 213 (expr_without_variable)



state 82

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    internal_functions_in_yacc  ->  T_INCLUDE expr .   (rule 335)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 335 (internal_functions_in_yacc)



state 83

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    internal_functions_in_yacc  ->  T_INCLUDE_ONCE expr .   (rule 336)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 336 (internal_functions_in_yacc)



state 84

    internal_functions_in_yacc  ->  T_EVAL '(' . expr ')'   (rule 337)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 198
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 85

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    internal_functions_in_yacc  ->  T_REQUIRE expr .   (rule 338)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 338 (internal_functions_in_yacc)



state 86

    use_filename  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 58)

    $default	reduce using rule 58 (use_filename)



state 87

    use_filename  ->  '(' . T_CONSTANT_ENCAPSED_STRING ')'   (rule 59)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 199



state 88

    internal_functions_in_yacc  ->  T_REQUIRE_ONCE use_filename .   (rule 339)

    $default	reduce using rule 339 (internal_functions_in_yacc)



state 89

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_PRINT expr .   (rule 227)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 227 (expr_without_variable)



state 90

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  '+' expr .   (rule 196)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 196 (expr_without_variable)



state 91

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  '-' expr .   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 197 (expr_without_variable)



state 92

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  '!' expr .   (rule 198)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)


    $default	reduce using rule 198 (expr_without_variable)



state 93

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  '~' expr .   (rule 199)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)


    $default	reduce using rule 199 (expr_without_variable)



state 94

    expr_without_variable  ->  T_INC rw_cvar .   (rule 173)

    $default	reduce using rule 173 (expr_without_variable)



state 95

    rw_cvar  ->  cvar .   (rule 269)

    $default	reduce using rule 269 (rw_cvar)



state 96

    expr_without_variable  ->  T_DEC rw_cvar .   (rule 175)

    $default	reduce using rule 175 (expr_without_variable)



state 97

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_INT_CAST expr .   (rule 214)


    $default	reduce using rule 214 (expr_without_variable)



state 98

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_DOUBLE_CAST expr .   (rule 215)


    $default	reduce using rule 215 (expr_without_variable)



state 99

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_STRING_CAST expr .   (rule 216)


    $default	reduce using rule 216 (expr_without_variable)



state 100

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_ARRAY_CAST expr .   (rule 217)


    $default	reduce using rule 217 (expr_without_variable)



state 101

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_OBJECT_CAST expr .   (rule 218)


    $default	reduce using rule 218 (expr_without_variable)



state 102

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_BOOL_CAST expr .   (rule 219)


    $default	reduce using rule 219 (expr_without_variable)



state 103

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  T_UNSET_CAST expr .   (rule 220)


    $default	reduce using rule 220 (expr_without_variable)



state 104

    expr_without_variable  ->  '@' @43 . expr   (rule 223)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 200
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 105

    class_name  ->  T_STRING .   (rule 239)

    $default	reduce using rule 239 (class_name)



state 106

    expr_without_variable  ->  T_NEW class_name . @36 ctor_arguments   (rule 160)

    $default	reduce using rule 159 (@36)

    @36 	go to state 201



state 107

    class_name  ->  r_cvar .   (rule 240)

    $default	reduce using rule 240 (class_name)



state 108

    r_cvar  ->  cvar .   (rule 267)

    $default	reduce using rule 267 (r_cvar)



state 109

    exit_expr  ->  '(' . ')'   (rule 235)
    exit_expr  ->  '(' . expr ')'   (rule 236)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ')' 	shift, and go to state 202
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 203
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 110

    expr_without_variable  ->  T_EXIT exit_expr .   (rule 221)

    $default	reduce using rule 221 (expr_without_variable)



state 111

    unticked_statement  ->  T_IF '(' . expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' . expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 204
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 112

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @46 function_call_parameter_list ')'   (rule 233)

    T_STRING	shift, and go to state 205



state 113

    function_call  ->  T_STRING '(' . @44 function_call_parameter_list ')'   (rule 229)

    $default	reduce using rule 228 (@44)

    @44 	go to state 206



state 114

    unticked_statement  ->  T_ECHO echo_expr_list . ';'   (rule 41)
    echo_expr_list  ->  echo_expr_list . ',' expr   (rule 147)

    ',' 	shift, and go to state 207
    ';' 	shift, and go to state 208



state 115

    echo_expr_list  ->  expr .   (rule 148)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 148 (echo_expr_list)



state 116

    unticked_statement  ->  T_DO @9 . statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 209
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 117

    unticked_statement  ->  T_WHILE '(' . @7 expr ')' @8 while_statement   (rule 22)

    $default	reduce using rule 20 (@7)

    @7  	go to state 210



state 118

    unticked_statement  ->  T_FOR '(' . for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 211
    non_empty_for_expr	go to state 212
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 213
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 119

    unticked_statement  ->  T_FOREACH '(' . w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)
    unticked_statement  ->  T_FOREACH '(' . expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 214
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    w_cvar	go to state 215
    rw_cvar	go to state 75
    cvar	go to state 216
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 120

    unticked_statement  ->  T_DECLARE @19 . '(' declare_list ')' declare_statement   (rule 53)

    '(' 	shift, and go to state 217



state 121

    unticked_statement  ->  T_SWITCH '(' . expr ')' @14 switch_case_list   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 218
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 122

    unticked_statement  ->  T_BREAK ';' .   (rule 32)

    $default	reduce using rule 32 (unticked_statement)



state 123

    unticked_statement  ->  T_BREAK expr . ';'   (rule 33)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 219



state 124

    unticked_statement  ->  T_CONTINUE ';' .   (rule 34)

    $default	reduce using rule 34 (unticked_statement)



state 125

    unticked_statement  ->  T_CONTINUE expr . ';'   (rule 35)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 220



state 126

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 . is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    '&' 	shift, and go to state 221

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 222



state 127

    unticked_declaration_statement  ->  T_FUNCTION @20 . is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '&' 	shift, and go to state 221

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 223



state 128

    unticked_statement  ->  T_RETURN ';' .   (rule 36)

    $default	reduce using rule 36 (unticked_statement)



state 129

    unticked_statement  ->  T_RETURN expr_without_variable . ';'   (rule 37)
    expr  ->  expr_without_variable .   (rule 266)

    ';' 	shift, and go to state 224

    $default	reduce using rule 266 (expr)



state 130

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 131

    unticked_statement  ->  T_RETURN cvar . ';'   (rule 38)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 171)
    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    r_cvar  ->  cvar .   (rule 267)
    rw_cvar  ->  cvar .   (rule 269)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192
    ';' 	shift, and go to state 225

    T_INC	reduce using rule 269 (rw_cvar)
    T_DEC	reduce using rule 269 (rw_cvar)
    $default	reduce using rule 267 (r_cvar)



state 132

    unticked_statement  ->  T_USE use_filename . ';'   (rule 44)

    ';' 	shift, and go to state 226



state 133

    global_var  ->  T_VARIABLE .   (rule 124)

    $default	reduce using rule 124 (global_var)



state 134

    global_var  ->  '$' . r_cvar   (rule 125)
    global_var  ->  '$' . '{' expr '}'   (rule 126)

    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 227
    '$' 	shift, and go to state 60

    r_cvar	go to state 228
    cvar	go to state 108
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 135

    unticked_statement  ->  T_GLOBAL global_var_list . ';'   (rule 39)
    global_var_list  ->  global_var_list . ',' global_var   (rule 122)

    ',' 	shift, and go to state 229
    ';' 	shift, and go to state 230



state 136

    global_var_list  ->  global_var .   (rule 123)

    $default	reduce using rule 123 (global_var_list)



state 137

    static_var_list  ->  T_VARIABLE .   (rule 129)
    static_var_list  ->  T_VARIABLE . '=' static_scalar   (rule 130)

    '=' 	shift, and go to state 231

    $default	reduce using rule 129 (static_var_list)



state 138

    unticked_statement  ->  T_STATIC static_var_list . ';'   (rule 40)
    static_var_list  ->  static_var_list . ',' T_VARIABLE   (rule 127)
    static_var_list  ->  static_var_list . ',' T_VARIABLE '=' static_scalar   (rule 128)

    ',' 	shift, and go to state 232
    ';' 	shift, and go to state 233



state 139

    unticked_statement  ->  T_UNSET '(' . unset_variables ')' ';'   (rule 45)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    unset_variables	go to state 234
    unset_variable	go to state 235
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 140

    internal_functions_in_yacc  ->  T_ISSET '(' . cvar ')'   (rule 333)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 237
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 141

    internal_functions_in_yacc  ->  T_EMPTY '(' . cvar ')'   (rule 334)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 238
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 142

    unticked_declaration_statement  ->  T_CLASS T_STRING . @24 '{' class_statement_list '}'   (rule 68)
    unticked_declaration_statement  ->  T_CLASS T_STRING . T_EXTENDS T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_EXTENDS	shift, and go to state 239

    $default	reduce using rule 67 (@24)

    @24 	go to state 240



state 143

    expr_without_variable  ->  T_LIST '(' . @35 assignment_list ')' '=' expr   (rule 155)

    $default	reduce using rule 154 (@35)

    @35 	go to state 241



state 144

    expr_without_variable  ->  T_ARRAY '(' . array_pair_list ')'   (rule 225)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 242
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 301 (array_pair_list)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 243
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    array_pair_list	go to state 244
    non_empty_array_pair_list	go to state 245
    internal_functions_in_yacc	go to state 81



state 145

    scalar  ->  T_START_HEREDOC encaps_list . T_END_HEREDOC   (rule 256)
    encaps_list  ->  encaps_list . encaps_var   (rule 311)
    encaps_list  ->  encaps_list . T_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 313)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 314)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 316)
    encaps_list  ->  encaps_list . '['   (rule 317)
    encaps_list  ->  encaps_list . ']'   (rule 318)
    encaps_list  ->  encaps_list . '{'   (rule 319)
    encaps_list  ->  encaps_list . '}'   (rule 320)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 321)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_END_HEREDOC	shift, and go to state 254
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 146

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  '{' inner_statement_list . '}'   (rule 13)

    '}' 	shift, and go to state 261

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 147

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  '(' expr . ')'   (rule 208)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 263



state 148

    compound_variable  ->  '$' '{' . expr '}'   (rule 279)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 264
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 149

    expr_without_variable  ->  '`' encaps_list . '`'   (rule 226)
    encaps_list  ->  encaps_list . encaps_var   (rule 311)
    encaps_list  ->  encaps_list . T_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 313)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 314)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 316)
    encaps_list  ->  encaps_list . '['   (rule 317)
    encaps_list  ->  encaps_list . ']'   (rule 318)
    encaps_list  ->  encaps_list . '{'   (rule 319)
    encaps_list  ->  encaps_list . '}'   (rule 320)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 321)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '`' 	shift, and go to state 265
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 150

    scalar  ->  '\"' encaps_list . '\"'   (rule 254)
    encaps_list  ->  encaps_list . encaps_var   (rule 311)
    encaps_list  ->  encaps_list . T_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 313)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 314)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 316)
    encaps_list  ->  encaps_list . '['   (rule 317)
    encaps_list  ->  encaps_list . ']'   (rule 318)
    encaps_list  ->  encaps_list . '{'   (rule 319)
    encaps_list  ->  encaps_list . '}'   (rule 320)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 321)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '\"'	shift, and go to state 266
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 151

    scalar  ->  '\'' encaps_list . '\''   (rule 255)
    encaps_list  ->  encaps_list . encaps_var   (rule 311)
    encaps_list  ->  encaps_list . T_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 313)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 314)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 316)
    encaps_list  ->  encaps_list . '['   (rule 317)
    encaps_list  ->  encaps_list . ']'   (rule 318)
    encaps_list  ->  encaps_list . '{'   (rule 319)
    encaps_list  ->  encaps_list . '}'   (rule 320)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 321)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '\''	shift, and go to state 267
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 152

    expr_without_variable  ->  expr T_LOGICAL_OR . @39 expr   (rule 181)

    $default	reduce using rule 180 (@39)

    @39 	go to state 268



state 153

    expr_without_variable  ->  expr T_LOGICAL_XOR . expr   (rule 184)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 269
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 154

    expr_without_variable  ->  expr T_LOGICAL_AND . @40 expr   (rule 183)

    $default	reduce using rule 182 (@40)

    @40 	go to state 270



state 155

    expr_without_variable  ->  expr '?' . @41 expr ':' @42 expr   (rule 211)

    $default	reduce using rule 209 (@41)

    @41 	go to state 271



state 156

    expr_without_variable  ->  expr T_BOOLEAN_OR . @37 expr   (rule 177)

    $default	reduce using rule 176 (@37)

    @37 	go to state 272



state 157

    expr_without_variable  ->  expr T_BOOLEAN_AND . @38 expr   (rule 179)

    $default	reduce using rule 178 (@38)

    @38 	go to state 273



state 158

    expr_without_variable  ->  expr '|' . expr   (rule 185)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 274
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 159

    expr_without_variable  ->  expr '^' . expr   (rule 187)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 275
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 160

    expr_without_variable  ->  expr '&' . expr   (rule 186)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 276
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 161

    expr_without_variable  ->  expr T_IS_EQUAL . expr   (rule 202)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 277
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 162

    expr_without_variable  ->  expr T_IS_NOT_EQUAL . expr   (rule 203)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 278
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 163

    expr_without_variable  ->  expr T_IS_IDENTICAL . expr   (rule 200)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 279
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 164

    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL . expr   (rule 201)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 280
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 165

    expr_without_variable  ->  expr '<' . expr   (rule 204)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 281
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 166

    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL . expr   (rule 205)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 282
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 167

    expr_without_variable  ->  expr '>' . expr   (rule 206)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 283
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 168

    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL . expr   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 284
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 169

    expr_without_variable  ->  expr T_SL . expr   (rule 194)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 285
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 170

    expr_without_variable  ->  expr T_SR . expr   (rule 195)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 286
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 171

    expr_without_variable  ->  expr '+' . expr   (rule 189)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 287
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 172

    expr_without_variable  ->  expr '-' . expr   (rule 190)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 288
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 173

    expr_without_variable  ->  expr '.' . expr   (rule 188)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 289
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 174

    expr_without_variable  ->  expr '*' . expr   (rule 191)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 290
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 175

    expr_without_variable  ->  expr '/' . expr   (rule 192)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 291
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 176

    expr_without_variable  ->  expr '%' . expr   (rule 193)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 292
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 177

    unticked_statement  ->  expr ';' .   (rule 43)

    $default	reduce using rule 43 (unticked_statement)



state 178

    expr_without_variable  ->  rw_cvar T_INC .   (rule 172)

    $default	reduce using rule 172 (expr_without_variable)



state 179

    expr_without_variable  ->  rw_cvar T_DEC .   (rule 174)

    $default	reduce using rule 174 (expr_without_variable)



state 180

    expr_without_variable  ->  cvar '=' . expr   (rule 156)
    expr_without_variable  ->  cvar '=' . '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar '=' . '&' function_call   (rule 158)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 293
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 294
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 181

    expr_without_variable  ->  cvar T_PLUS_EQUAL . expr   (rule 161)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 295
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 182

    expr_without_variable  ->  cvar T_MINUS_EQUAL . expr   (rule 162)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 296
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 183

    expr_without_variable  ->  cvar T_MUL_EQUAL . expr   (rule 163)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 297
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 184

    expr_without_variable  ->  cvar T_DIV_EQUAL . expr   (rule 164)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 298
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 185

    expr_without_variable  ->  cvar T_CONCAT_EQUAL . expr   (rule 165)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 299
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 186

    expr_without_variable  ->  cvar T_MOD_EQUAL . expr   (rule 166)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 300
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 187

    expr_without_variable  ->  cvar T_AND_EQUAL . expr   (rule 167)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 301
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 188

    expr_without_variable  ->  cvar T_OR_EQUAL . expr   (rule 168)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 302
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 189

    expr_without_variable  ->  cvar T_XOR_EQUAL . expr   (rule 169)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 303
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 190

    expr_without_variable  ->  cvar T_SL_EQUAL . expr   (rule 170)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 304
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 191

    expr_without_variable  ->  cvar T_SR_EQUAL . expr   (rule 171)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 305
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 192

    function_call  ->  cvar '(' . @45 function_call_parameter_list ')'   (rule 231)

    $default	reduce using rule 230 (@45)

    @45 	go to state 306



state 193

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR . @47 ref_list   (rule 272)

    $default	reduce using rule 271 (@47)

    @47 	go to state 307



state 194

    reference_variable  ->  reference_variable '[' . dim_offset ']'   (rule 275)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 280 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 308
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 309
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 195

    reference_variable  ->  reference_variable '{' . expr '}'   (rule 276)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 310
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 196

    compound_variable  ->  '$' . '{' expr '}'   (rule 279)
    simple_indirect_reference  ->  simple_indirect_reference '$' .   (rule 294)

    '{' 	shift, and go to state 148

    $default	reduce using rule 294 (simple_indirect_reference)



state 197

    cvar_without_objects  ->  simple_indirect_reference reference_variable .   (rule 274)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 275)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 276)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 274 (cvar_without_objects)



state 198

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    internal_functions_in_yacc  ->  T_EVAL '(' expr . ')'   (rule 337)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 311



state 199

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING . ')'   (rule 59)

    ')' 	shift, and go to state 312



state 200

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  '@' @43 expr .   (rule 223)


    $default	reduce using rule 223 (expr_without_variable)



state 201

    expr_without_variable  ->  T_NEW class_name @36 . ctor_arguments   (rule 160)

    '(' 	shift, and go to state 313

    $default	reduce using rule 237 (ctor_arguments)

    ctor_arguments	go to state 314



state 202

    exit_expr  ->  '(' ')' .   (rule 235)

    $default	reduce using rule 235 (exit_expr)



state 203

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    exit_expr  ->  '(' expr . ')'   (rule 236)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 315



state 204

    unticked_statement  ->  T_IF '(' expr . ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr . ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 316



state 205

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @46 function_call_parameter_list ')'   (rule 233)

    '(' 	shift, and go to state 317



state 206

    function_call  ->  T_STRING '(' @44 . function_call_parameter_list ')'   (rule 229)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 319
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 207

    echo_expr_list  ->  echo_expr_list ',' . expr   (rule 147)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 323
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 208

    unticked_statement  ->  T_ECHO echo_expr_list ';' .   (rule 41)

    $default	reduce using rule 41 (unticked_statement)



state 209

    unticked_statement  ->  T_DO @9 statement . T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_WHILE	shift, and go to state 324



state 210

    unticked_statement  ->  T_WHILE '(' @7 . expr ')' @8 while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 325
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 211

    unticked_statement  ->  T_FOR '(' for_expr . ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 326



state 212

    for_expr  ->  non_empty_for_expr .   (rule 150)
    non_empty_for_expr  ->  non_empty_for_expr . ',' @34 expr   (rule 152)

    ',' 	shift, and go to state 327

    $default	reduce using rule 150 (for_expr)



state 213

    non_empty_for_expr  ->  expr .   (rule 153)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 153 (non_empty_for_expr)



state 214

    unticked_statement  ->  T_FOREACH '(' expr_without_variable . T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)
    expr  ->  expr_without_variable .   (rule 266)

    T_AS	shift, and go to state 328

    $default	reduce using rule 266 (expr)



state 215

    unticked_statement  ->  T_FOREACH '(' w_cvar . T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_AS	shift, and go to state 329



state 216

    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 171)
    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    r_cvar  ->  cvar .   (rule 267)
    w_cvar  ->  cvar .   (rule 268)
    rw_cvar  ->  cvar .   (rule 269)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    T_INC	reduce using rule 269 (rw_cvar)
    T_DEC	reduce using rule 269 (rw_cvar)
    T_AS	reduce using rule 268 (w_cvar)
    $default	reduce using rule 267 (r_cvar)



state 217

    unticked_statement  ->  T_DECLARE @19 '(' . declare_list ')' declare_statement   (rule 53)

    T_STRING	shift, and go to state 330

    declare_list	go to state 331



state 218

    unticked_statement  ->  T_SWITCH '(' expr . ')' @14 switch_case_list   (rule 31)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 332



state 219

    unticked_statement  ->  T_BREAK expr ';' .   (rule 33)

    $default	reduce using rule 33 (unticked_statement)



state 220

    unticked_statement  ->  T_CONTINUE expr ';' .   (rule 35)

    $default	reduce using rule 35 (unticked_statement)



state 221

    is_reference  ->  '&' .   (rule 141)

    $default	reduce using rule 141 (is_reference)



state 222

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference . T_STRING @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    T_STRING	shift, and go to state 333



state 223

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference . T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    T_STRING	shift, and go to state 334



state 224

    unticked_statement  ->  T_RETURN expr_without_variable ';' .   (rule 37)

    $default	reduce using rule 37 (unticked_statement)



state 225

    unticked_statement  ->  T_RETURN cvar ';' .   (rule 38)

    $default	reduce using rule 38 (unticked_statement)



state 226

    unticked_statement  ->  T_USE use_filename ';' .   (rule 44)

    $default	reduce using rule 44 (unticked_statement)



state 227

    global_var  ->  '$' '{' . expr '}'   (rule 126)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 335
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 228

    global_var  ->  '$' r_cvar .   (rule 125)

    $default	reduce using rule 125 (global_var)



state 229

    global_var_list  ->  global_var_list ',' . global_var   (rule 122)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var	go to state 336



state 230

    unticked_statement  ->  T_GLOBAL global_var_list ';' .   (rule 39)

    $default	reduce using rule 39 (unticked_statement)



state 231

    static_var_list  ->  T_VARIABLE '=' . static_scalar   (rule 130)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 342



state 232

    static_var_list  ->  static_var_list ',' . T_VARIABLE   (rule 127)
    static_var_list  ->  static_var_list ',' . T_VARIABLE '=' static_scalar   (rule 128)

    T_VARIABLE	shift, and go to state 343



state 233

    unticked_statement  ->  T_STATIC static_var_list ';' .   (rule 40)

    $default	reduce using rule 40 (unticked_statement)



state 234

    unticked_statement  ->  T_UNSET '(' unset_variables . ')' ';'   (rule 45)
    unset_variables  ->  unset_variables . ',' unset_variable   (rule 56)

    ',' 	shift, and go to state 344
    ')' 	shift, and go to state 345



state 235

    unset_variables  ->  unset_variable .   (rule 55)

    $default	reduce using rule 55 (unset_variables)



state 236

    unset_variable  ->  cvar .   (rule 57)

    $default	reduce using rule 57 (unset_variable)



state 237

    internal_functions_in_yacc  ->  T_ISSET '(' cvar . ')'   (rule 333)

    ')' 	shift, and go to state 346



state 238

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar . ')'   (rule 334)

    ')' 	shift, and go to state 347



state 239

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS . T_STRING @25 '{' class_statement_list '}'   (rule 70)

    T_STRING	shift, and go to state 348



state 240

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 . '{' class_statement_list '}'   (rule 68)

    '{' 	shift, and go to state 349



state 241

    expr_without_variable  ->  T_LIST '(' @35 . assignment_list ')' '=' expr   (rule 155)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 350
    '$' 	shift, and go to state 60

    $default	reduce using rule 300 (assignment_list_element)

    cvar	go to state 351
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 352
    assignment_list_element	go to state 353



state 242

    non_empty_array_pair_list  ->  '&' . w_cvar   (rule 310)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 354
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 243

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW expr   (rule 305)
    non_empty_array_pair_list  ->  expr .   (rule 306)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW '&' w_cvar   (rule 309)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 356

    $default	reduce using rule 306 (non_empty_array_pair_list)



state 244

    expr_without_variable  ->  T_ARRAY '(' array_pair_list . ')'   (rule 225)

    ')' 	shift, and go to state 357



state 245

    array_pair_list  ->  non_empty_array_pair_list . possible_comma   (rule 302)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr   (rule 304)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_cvar   (rule 307)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' '&' w_cvar   (rule 308)

    ',' 	shift, and go to state 358

    $default	reduce using rule 259 (possible_comma)

    possible_comma	go to state 359



state 246

    encaps_list  ->  encaps_list '[' .   (rule 317)

    $default	reduce using rule 317 (encaps_list)



state 247

    encaps_list  ->  encaps_list T_STRING .   (rule 312)

    $default	reduce using rule 312 (encaps_list)



state 248

    encaps_var  ->  T_VARIABLE .   (rule 323)
    encaps_var  ->  T_VARIABLE . '[' @51 encaps_var_offset ']'   (rule 325)
    encaps_var  ->  T_VARIABLE . T_OBJECT_OPERATOR T_STRING   (rule 326)

    '[' 	shift, and go to state 360
    T_OBJECT_OPERATOR	shift, and go to state 361

    '[' 	[reduce using rule 323 (encaps_var)]
    T_OBJECT_OPERATOR	[reduce using rule 323 (encaps_var)]
    $default	reduce using rule 323 (encaps_var)



state 249

    encaps_list  ->  encaps_list T_NUM_STRING .   (rule 313)

    $default	reduce using rule 313 (encaps_list)



state 250

    encaps_list  ->  encaps_list T_CHARACTER .   (rule 315)

    $default	reduce using rule 315 (encaps_list)



state 251

    encaps_list  ->  encaps_list T_BAD_CHARACTER .   (rule 316)

    $default	reduce using rule 316 (encaps_list)



state 252

    encaps_list  ->  encaps_list T_ENCAPSED_AND_WHITESPACE .   (rule 314)

    $default	reduce using rule 314 (encaps_list)



state 253

    encaps_list  ->  encaps_list T_OBJECT_OPERATOR .   (rule 321)

    $default	reduce using rule 321 (encaps_list)



state 254

    scalar  ->  T_START_HEREDOC encaps_list T_END_HEREDOC .   (rule 256)

    $default	reduce using rule 256 (scalar)



state 255

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . expr '}'   (rule 327)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'   (rule 328)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 362
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 363
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 256

    encaps_var  ->  T_CURLY_OPEN . cvar '}'   (rule 329)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    cvar	go to state 364
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 257

    encaps_list  ->  encaps_list '{' .   (rule 319)

    $default	reduce using rule 319 (encaps_list)



state 258

    encaps_list  ->  encaps_list '}' .   (rule 320)

    $default	reduce using rule 320 (encaps_list)



state 259

    encaps_list  ->  encaps_list ']' .   (rule 318)

    $default	reduce using rule 318 (encaps_list)



state 260

    encaps_list  ->  encaps_list encaps_var .   (rule 311)

    $default	reduce using rule 311 (encaps_list)



state 261

    unticked_statement  ->  '{' inner_statement_list '}' .   (rule 13)

    $default	reduce using rule 13 (unticked_statement)



state 262

    inner_statement_list  ->  inner_statement_list @2 . inner_statement   (rule 8)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_OLD_FUNCTION	shift, and go to state 42
    T_FUNCTION	shift, and go to state 43
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    inner_statement	go to state 365
    statement	go to state 366
    unticked_statement	go to state 66
    declaration_statement	go to state 367
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 263

    expr_without_variable  ->  '(' expr ')' .   (rule 208)

    $default	reduce using rule 208 (expr_without_variable)



state 264

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    compound_variable  ->  '$' '{' expr . '}'   (rule 279)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 368



state 265

    expr_without_variable  ->  '`' encaps_list '`' .   (rule 226)

    $default	reduce using rule 226 (expr_without_variable)



state 266

    scalar  ->  '\"' encaps_list '\"' .   (rule 254)

    $default	reduce using rule 254 (scalar)



state 267

    scalar  ->  '\'' encaps_list '\'' .   (rule 255)

    $default	reduce using rule 255 (scalar)



state 268

    expr_without_variable  ->  expr T_LOGICAL_OR @39 . expr   (rule 181)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 369
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 269

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr T_LOGICAL_XOR expr .   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 184 (expr_without_variable)



state 270

    expr_without_variable  ->  expr T_LOGICAL_AND @40 . expr   (rule 183)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 370
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 271

    expr_without_variable  ->  expr '?' @41 . expr ':' @42 expr   (rule 211)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 371
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 272

    expr_without_variable  ->  expr T_BOOLEAN_OR @37 . expr   (rule 177)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 372
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 273

    expr_without_variable  ->  expr T_BOOLEAN_AND @38 . expr   (rule 179)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 373
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 274

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr '|' expr .   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 185 (expr_without_variable)



state 275

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr '^' expr .   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 187 (expr_without_variable)



state 276

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr '&' expr .   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 186 (expr_without_variable)



state 277

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr T_IS_EQUAL expr .   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 202 (expr_without_variable)



state 278

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr T_IS_NOT_EQUAL expr .   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 203 (expr_without_variable)



state 279

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr T_IS_IDENTICAL expr .   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 200 (expr_without_variable)



state 280

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL expr .   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 201 (expr_without_variable)



state 281

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr '<' expr .   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 204 (expr_without_variable)



state 282

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL expr .   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 205 (expr_without_variable)



state 283

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr '>' expr .   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 206 (expr_without_variable)



state 284

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL expr .   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 207 (expr_without_variable)



state 285

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr T_SL expr .   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 194 (expr_without_variable)



state 286

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr T_SR expr .   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 195 (expr_without_variable)



state 287

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr '+' expr .   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 189 (expr_without_variable)



state 288

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr '-' expr .   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 190 (expr_without_variable)



state 289

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr '.' expr .   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 188 (expr_without_variable)



state 290

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr '*' expr .   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)


    $default	reduce using rule 191 (expr_without_variable)



state 291

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr '/' expr .   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)


    $default	reduce using rule 192 (expr_without_variable)



state 292

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr '%' expr .   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)


    $default	reduce using rule 193 (expr_without_variable)



state 293

    expr_without_variable  ->  cvar '=' '&' . w_cvar   (rule 157)
    expr_without_variable  ->  cvar '=' '&' . function_call   (rule 158)

    T_STRING	shift, and go to state 374
    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    function_call	go to state 375
    w_cvar	go to state 376
    cvar	go to state 377
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 294

    expr_without_variable  ->  cvar '=' expr .   (rule 156)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 156 (expr_without_variable)



state 295

    expr_without_variable  ->  cvar T_PLUS_EQUAL expr .   (rule 161)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 161 (expr_without_variable)



state 296

    expr_without_variable  ->  cvar T_MINUS_EQUAL expr .   (rule 162)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 162 (expr_without_variable)



state 297

    expr_without_variable  ->  cvar T_MUL_EQUAL expr .   (rule 163)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 163 (expr_without_variable)



state 298

    expr_without_variable  ->  cvar T_DIV_EQUAL expr .   (rule 164)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 164 (expr_without_variable)



state 299

    expr_without_variable  ->  cvar T_CONCAT_EQUAL expr .   (rule 165)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 165 (expr_without_variable)



state 300

    expr_without_variable  ->  cvar T_MOD_EQUAL expr .   (rule 166)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 166 (expr_without_variable)



state 301

    expr_without_variable  ->  cvar T_AND_EQUAL expr .   (rule 167)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 167 (expr_without_variable)



state 302

    expr_without_variable  ->  cvar T_OR_EQUAL expr .   (rule 168)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 168 (expr_without_variable)



state 303

    expr_without_variable  ->  cvar T_XOR_EQUAL expr .   (rule 169)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 169 (expr_without_variable)



state 304

    expr_without_variable  ->  cvar T_SL_EQUAL expr .   (rule 170)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 170 (expr_without_variable)



state 305

    expr_without_variable  ->  cvar T_SR_EQUAL expr .   (rule 171)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 171 (expr_without_variable)



state 306

    function_call  ->  cvar '(' @45 . function_call_parameter_list ')'   (rule 231)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 378
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 307

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @47 . ref_list   (rule 272)

    T_STRING	shift, and go to state 379
    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 380
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 381
    reference_variable	go to state 78
    compound_variable	go to state 79
    ref_list	go to state 382
    object_property	go to state 383
    object_dim_list	go to state 384
    variable_name	go to state 385
    simple_indirect_reference	go to state 80



state 308

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    dim_offset  ->  expr .   (rule 281)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 281 (dim_offset)



state 309

    reference_variable  ->  reference_variable '[' dim_offset . ']'   (rule 275)

    ']' 	shift, and go to state 386



state 310

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    reference_variable  ->  reference_variable '{' expr . '}'   (rule 276)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 387



state 311

    internal_functions_in_yacc  ->  T_EVAL '(' expr ')' .   (rule 337)

    $default	reduce using rule 337 (internal_functions_in_yacc)



state 312

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING ')' .   (rule 59)

    $default	reduce using rule 59 (use_filename)



state 313

    ctor_arguments  ->  '(' . function_call_parameter_list ')'   (rule 238)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 388
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 314

    expr_without_variable  ->  T_NEW class_name @36 ctor_arguments .   (rule 160)

    $default	reduce using rule 160 (expr_without_variable)



state 315

    exit_expr  ->  '(' expr ')' .   (rule 236)

    $default	reduce using rule 236 (exit_expr)



state 316

    unticked_statement  ->  T_IF '(' expr ')' . @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr ')' . ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    ':' 	shift, and go to state 389

    $default	reduce using rule 14 (@3)

    @3  	go to state 390



state 317

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @46 function_call_parameter_list ')'   (rule 233)

    $default	reduce using rule 232 (@46)

    @46 	go to state 391



state 318

    non_empty_function_call_parameter_list  ->  '&' . w_cvar   (rule 118)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 392
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 319

    function_call  ->  T_STRING '(' @44 function_call_parameter_list . ')'   (rule 229)

    ')' 	shift, and go to state 393



state 320

    function_call_parameter_list  ->  non_empty_function_call_parameter_list .   (rule 114)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' expr_without_variable   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' cvar   (rule 120)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' '&' w_cvar   (rule 121)

    ',' 	shift, and go to state 394

    $default	reduce using rule 114 (function_call_parameter_list)



state 321

    non_empty_function_call_parameter_list  ->  expr_without_variable .   (rule 116)
    expr  ->  expr_without_variable .   (rule 266)

    ',' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    $default	reduce using rule 266 (expr)



state 322

    non_empty_function_call_parameter_list  ->  cvar .   (rule 117)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 171)
    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    r_cvar  ->  cvar .   (rule 267)
    rw_cvar  ->  cvar .   (rule 269)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    ',' 	reduce using rule 117 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 269 (rw_cvar)
    T_DEC	reduce using rule 269 (rw_cvar)
    ')' 	reduce using rule 117 (non_empty_function_call_parameter_list)
    $default	reduce using rule 267 (r_cvar)



state 323

    echo_expr_list  ->  echo_expr_list ',' expr .   (rule 147)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 147 (echo_expr_list)



state 324

    unticked_statement  ->  T_DO @9 statement T_WHILE . '(' @10 expr ')' ';'   (rule 25)

    '(' 	shift, and go to state 395



state 325

    unticked_statement  ->  T_WHILE '(' @7 expr . ')' @8 while_statement   (rule 22)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 396



state 326

    unticked_statement  ->  T_FOR '(' for_expr ';' . @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 26 (@11)

    @11 	go to state 397



state 327

    non_empty_for_expr  ->  non_empty_for_expr ',' . @34 expr   (rule 152)

    $default	reduce using rule 151 (@34)

    @34 	go to state 398



state 328

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS . @17 w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    $default	reduce using rule 49 (@17)

    @17 	go to state 399



state 329

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS . @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    $default	reduce using rule 46 (@15)

    @15 	go to state 400



state 330

    declare_list  ->  T_STRING . '=' static_scalar   (rule 79)

    '=' 	shift, and go to state 401



state 331

    unticked_statement  ->  T_DECLARE @19 '(' declare_list . ')' declare_statement   (rule 53)
    declare_list  ->  declare_list . ',' T_STRING '=' static_scalar   (rule 80)

    ',' 	shift, and go to state 402
    ')' 	shift, and go to state 403



state 332

    unticked_statement  ->  T_SWITCH '(' expr ')' . @14 switch_case_list   (rule 31)

    $default	reduce using rule 30 (@14)

    @14 	go to state 404



state 333

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING . @23 parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 65 (@23)

    @23 	go to state 405



state 334

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING . @21 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    $default	reduce using rule 62 (@21)

    @21 	go to state 406



state 335

    global_var  ->  '$' '{' expr . '}'   (rule 126)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 407



state 336

    global_var_list  ->  global_var_list ',' global_var .   (rule 122)

    $default	reduce using rule 122 (global_var_list)



state 337

    static_scalar  ->  '+' . static_scalar   (rule 248)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 408



state 338

    static_scalar  ->  '-' . static_scalar   (rule 249)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 409



state 339

    static_scalar  ->  T_STRING .   (rule 247)

    $default	reduce using rule 247 (static_scalar)



state 340

    static_scalar  ->  T_ARRAY . '(' static_array_pair_list ')'   (rule 250)

    '(' 	shift, and go to state 410



state 341

    static_scalar  ->  common_scalar .   (rule 246)

    $default	reduce using rule 246 (static_scalar)



state 342

    static_var_list  ->  T_VARIABLE '=' static_scalar .   (rule 130)

    $default	reduce using rule 130 (static_var_list)



state 343

    static_var_list  ->  static_var_list ',' T_VARIABLE .   (rule 127)
    static_var_list  ->  static_var_list ',' T_VARIABLE . '=' static_scalar   (rule 128)

    '=' 	shift, and go to state 411

    $default	reduce using rule 127 (static_var_list)



state 344

    unset_variables  ->  unset_variables ',' . unset_variable   (rule 56)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    unset_variable	go to state 412
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 345

    unticked_statement  ->  T_UNSET '(' unset_variables ')' . ';'   (rule 45)

    ';' 	shift, and go to state 413



state 346

    internal_functions_in_yacc  ->  T_ISSET '(' cvar ')' .   (rule 333)

    $default	reduce using rule 333 (internal_functions_in_yacc)



state 347

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar ')' .   (rule 334)

    $default	reduce using rule 334 (internal_functions_in_yacc)



state 348

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING . @25 '{' class_statement_list '}'   (rule 70)

    $default	reduce using rule 69 (@25)

    @25 	go to state 414



state 349

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' . class_statement_list '}'   (rule 68)

    $default	reduce using rule 132 (class_statement_list)

    class_statement_list	go to state 415



state 350

    assignment_list_element  ->  T_LIST . '(' @50 assignment_list ')'   (rule 299)

    '(' 	shift, and go to state 416



state 351

    assignment_list_element  ->  cvar .   (rule 297)

    $default	reduce using rule 297 (assignment_list_element)



state 352

    expr_without_variable  ->  T_LIST '(' @35 assignment_list . ')' '=' expr   (rule 155)
    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 295)

    ',' 	shift, and go to state 417
    ')' 	shift, and go to state 418



state 353

    assignment_list  ->  assignment_list_element .   (rule 296)

    $default	reduce using rule 296 (assignment_list)



state 354

    non_empty_array_pair_list  ->  '&' w_cvar .   (rule 310)

    $default	reduce using rule 310 (non_empty_array_pair_list)



state 355

    w_cvar  ->  cvar .   (rule 268)

    $default	reduce using rule 268 (w_cvar)



state 356

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . expr   (rule 305)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . '&' w_cvar   (rule 309)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 419
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 420
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 357

    expr_without_variable  ->  T_ARRAY '(' array_pair_list ')' .   (rule 225)

    $default	reduce using rule 225 (expr_without_variable)



state 358

    possible_comma  ->  ',' .   (rule 260)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr   (rule 304)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_cvar   (rule 307)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . '&' w_cvar   (rule 308)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 421
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 260 (possible_comma)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 422
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 359

    array_pair_list  ->  non_empty_array_pair_list possible_comma .   (rule 302)

    $default	reduce using rule 302 (array_pair_list)



state 360

    encaps_var  ->  T_VARIABLE '[' . @51 encaps_var_offset ']'   (rule 325)

    $default	reduce using rule 324 (@51)

    @51 	go to state 423



state 361

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR . T_STRING   (rule 326)

    T_STRING	shift, and go to state 424



state 362

    scalar  ->  T_STRING_VARNAME .   (rule 252)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'   (rule 328)

    '[' 	shift, and go to state 425

    $default	reduce using rule 252 (scalar)



state 363

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr . '}'   (rule 327)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 426



state 364

    encaps_var  ->  T_CURLY_OPEN cvar . '}'   (rule 329)

    '}' 	shift, and go to state 427



state 365

    inner_statement_list  ->  inner_statement_list @2 inner_statement .   (rule 8)

    $default	reduce using rule 8 (inner_statement_list)



state 366

    inner_statement  ->  statement .   (rule 10)

    $default	reduce using rule 10 (inner_statement)



state 367

    inner_statement  ->  declaration_statement .   (rule 11)

    $default	reduce using rule 11 (inner_statement)



state 368

    compound_variable  ->  '$' '{' expr '}' .   (rule 279)

    $default	reduce using rule 279 (compound_variable)



state 369

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr T_LOGICAL_OR @39 expr .   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 181 (expr_without_variable)



state 370

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr T_LOGICAL_AND @40 expr .   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 183 (expr_without_variable)



state 371

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  expr '?' @41 expr . ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 428
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 372

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr T_BOOLEAN_OR @37 expr .   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 177 (expr_without_variable)



state 373

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr T_BOOLEAN_AND @38 expr .   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 179 (expr_without_variable)



state 374

    function_call  ->  T_STRING . '(' @44 function_call_parameter_list ')'   (rule 229)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 function_call_parameter_list ')'   (rule 233)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 112
    '(' 	shift, and go to state 113



state 375

    expr_without_variable  ->  cvar '=' '&' function_call .   (rule 158)

    $default	reduce using rule 158 (expr_without_variable)



state 376

    expr_without_variable  ->  cvar '=' '&' w_cvar .   (rule 157)

    $default	reduce using rule 157 (expr_without_variable)



state 377

    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    w_cvar  ->  cvar .   (rule 268)

    '(' 	shift, and go to state 192

    $default	reduce using rule 268 (w_cvar)



state 378

    function_call  ->  cvar '(' @45 function_call_parameter_list . ')'   (rule 231)

    ')' 	shift, and go to state 429



state 379

    variable_name  ->  T_STRING .   (rule 291)

    $default	reduce using rule 291 (variable_name)



state 380

    variable_name  ->  '{' . expr '}'   (rule 292)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 430
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 381

    object_property  ->  cvar_without_objects . @49   (rule 287)

    $default	reduce using rule 286 (@49)

    @49 	go to state 431



state 382

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @47 ref_list .   (rule 272)
    ref_list  ->  ref_list . T_OBJECT_OPERATOR @48 object_property   (rule 284)

    T_OBJECT_OPERATOR	shift, and go to state 432

    $default	reduce using rule 272 (cvar)



state 383

    ref_list  ->  object_property .   (rule 282)

    $default	reduce using rule 282 (ref_list)



state 384

    object_property  ->  object_dim_list .   (rule 285)
    object_dim_list  ->  object_dim_list . '[' dim_offset ']'   (rule 288)
    object_dim_list  ->  object_dim_list . '{' expr '}'   (rule 289)

    '[' 	shift, and go to state 433
    '{' 	shift, and go to state 434

    $default	reduce using rule 285 (object_property)



state 385

    object_dim_list  ->  variable_name .   (rule 290)

    $default	reduce using rule 290 (object_dim_list)



state 386

    reference_variable  ->  reference_variable '[' dim_offset ']' .   (rule 275)

    $default	reduce using rule 275 (reference_variable)



state 387

    reference_variable  ->  reference_variable '{' expr '}' .   (rule 276)

    $default	reduce using rule 276 (reference_variable)



state 388

    ctor_arguments  ->  '(' function_call_parameter_list . ')'   (rule 238)

    ')' 	shift, and go to state 435



state 389

    unticked_statement  ->  T_IF '(' expr ')' ':' . @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 17 (@5)

    @5  	go to state 436



state 390

    unticked_statement  ->  T_IF '(' expr ')' @3 . statement @4 elseif_list else_single   (rule 16)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 437
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 391

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 . function_call_parameter_list ')'   (rule 233)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 318
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 115 (function_call_parameter_list)

    function_call_parameter_list	go to state 438
    non_empty_function_call_parameter_list	go to state 320
    expr_without_variable	go to state 321
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 322
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 392

    non_empty_function_call_parameter_list  ->  '&' w_cvar .   (rule 118)

    $default	reduce using rule 118 (non_empty_function_call_parameter_list)



state 393

    function_call  ->  T_STRING '(' @44 function_call_parameter_list ')' .   (rule 229)

    $default	reduce using rule 229 (function_call)



state 394

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . expr_without_variable   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . cvar   (rule 120)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . '&' w_cvar   (rule 121)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 439
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 440
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 130
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 441
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 395

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' . @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 24 (@10)

    @10 	go to state 442



state 396

    unticked_statement  ->  T_WHILE '(' @7 expr ')' . @8 while_statement   (rule 22)

    $default	reduce using rule 21 (@8)

    @8  	go to state 443



state 397

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 . for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 444
    non_empty_for_expr	go to state 212
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 213
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 398

    non_empty_for_expr  ->  non_empty_for_expr ',' @34 . expr   (rule 152)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 445
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 399

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 . w_cvar foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 446
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 400

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 . w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 447
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 401

    declare_list  ->  T_STRING '=' . static_scalar   (rule 79)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 448



state 402

    declare_list  ->  declare_list ',' . T_STRING '=' static_scalar   (rule 80)

    T_STRING	shift, and go to state 449



state 403

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' . declare_statement   (rule 53)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 450
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 451
    unticked_statement	go to state 66
    declare_statement	go to state 452
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 404

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 . switch_case_list   (rule 31)

    ':' 	shift, and go to state 453
    '{' 	shift, and go to state 454

    switch_case_list	go to state 455



state 405

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 . parameter_list '(' inner_statement_list ')' ';'   (rule 66)

    '&' 	shift, and go to state 456
    T_VARIABLE	shift, and go to state 457
    T_CONST	shift, and go to state 458

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 459
    non_empty_parameter_list	go to state 460



state 406

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '(' 	shift, and go to state 461



state 407

    global_var  ->  '$' '{' expr '}' .   (rule 126)

    $default	reduce using rule 126 (global_var)



state 408

    static_scalar  ->  '+' static_scalar .   (rule 248)

    $default	reduce using rule 248 (static_scalar)



state 409

    static_scalar  ->  '-' static_scalar .   (rule 249)

    $default	reduce using rule 249 (static_scalar)



state 410

    static_scalar  ->  T_ARRAY '(' . static_array_pair_list ')'   (rule 250)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 257 (static_array_pair_list)

    common_scalar	go to state 341
    static_scalar	go to state 462
    static_array_pair_list	go to state 463
    non_empty_static_array_pair_list	go to state 464



state 411

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' . static_scalar   (rule 128)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 465



state 412

    unset_variables  ->  unset_variables ',' unset_variable .   (rule 56)

    $default	reduce using rule 56 (unset_variables)



state 413

    unticked_statement  ->  T_UNSET '(' unset_variables ')' ';' .   (rule 45)

    $default	reduce using rule 45 (unticked_statement)



state 414

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 . '{' class_statement_list '}'   (rule 70)

    '{' 	shift, and go to state 466



state 415

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' class_statement_list . '}'   (rule 68)
    class_statement_list  ->  class_statement_list . class_statement   (rule 131)

    T_OLD_FUNCTION	shift, and go to state 467
    T_FUNCTION	shift, and go to state 468
    T_VAR	shift, and go to state 469
    '}' 	shift, and go to state 470

    class_statement	go to state 471



state 416

    assignment_list_element  ->  T_LIST '(' . @50 assignment_list ')'   (rule 299)

    $default	reduce using rule 298 (@50)

    @50 	go to state 472



state 417

    assignment_list  ->  assignment_list ',' . assignment_list_element   (rule 295)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 350
    '$' 	shift, and go to state 60

    $default	reduce using rule 300 (assignment_list_element)

    cvar	go to state 351
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list_element	go to state 473



state 418

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' . '=' expr   (rule 155)

    '=' 	shift, and go to state 474



state 419

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' . w_cvar   (rule 309)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 475
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 420

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW expr .   (rule 305)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 305 (non_empty_array_pair_list)



state 421

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' . w_cvar   (rule 308)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 476
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 422

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr .   (rule 304)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_cvar   (rule 307)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 477

    $default	reduce using rule 304 (non_empty_array_pair_list)



state 423

    encaps_var  ->  T_VARIABLE '[' @51 . encaps_var_offset ']'   (rule 325)

    T_STRING	shift, and go to state 478
    T_VARIABLE	shift, and go to state 479
    T_NUM_STRING	shift, and go to state 480

    encaps_var_offset	go to state 481



state 424

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR T_STRING .   (rule 326)

    $default	reduce using rule 326 (encaps_var)



state 425

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'   (rule 328)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 482
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 426

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr '}' .   (rule 327)

    $default	reduce using rule 327 (encaps_var)



state 427

    encaps_var  ->  T_CURLY_OPEN cvar '}' .   (rule 329)

    $default	reduce using rule 329 (encaps_var)



state 428

    expr_without_variable  ->  expr '?' @41 expr ':' . @42 expr   (rule 211)

    $default	reduce using rule 210 (@42)

    @42 	go to state 483



state 429

    function_call  ->  cvar '(' @45 function_call_parameter_list ')' .   (rule 231)

    $default	reduce using rule 231 (function_call)



state 430

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    variable_name  ->  '{' expr . '}'   (rule 292)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 484



state 431

    object_property  ->  cvar_without_objects @49 .   (rule 287)

    $default	reduce using rule 287 (object_property)



state 432

    ref_list  ->  ref_list T_OBJECT_OPERATOR . @48 object_property   (rule 284)

    $default	reduce using rule 283 (@48)

    @48 	go to state 485



state 433

    object_dim_list  ->  object_dim_list '[' . dim_offset ']'   (rule 288)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 280 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 308
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 486
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 434

    object_dim_list  ->  object_dim_list '{' . expr '}'   (rule 289)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 487
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 435

    ctor_arguments  ->  '(' function_call_parameter_list ')' .   (rule 238)

    $default	reduce using rule 238 (ctor_arguments)



state 436

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 . inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 488



state 437

    unticked_statement  ->  T_IF '(' expr ')' @3 statement . @4 elseif_list else_single   (rule 16)

    $default	reduce using rule 15 (@4)

    @4  	go to state 489



state 438

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 function_call_parameter_list . ')'   (rule 233)

    ')' 	shift, and go to state 490



state 439

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' . w_cvar   (rule 121)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 491
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 440

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' expr_without_variable .   (rule 119)
    expr  ->  expr_without_variable .   (rule 266)

    ',' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    $default	reduce using rule 266 (expr)



state 441

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' cvar .   (rule 120)
    expr_without_variable  ->  cvar . '=' expr   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 157)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 158)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 170)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 171)
    function_call  ->  cvar . '(' @45 function_call_parameter_list ')'   (rule 231)
    r_cvar  ->  cvar .   (rule 267)
    rw_cvar  ->  cvar .   (rule 269)

    '=' 	shift, and go to state 180
    T_PLUS_EQUAL	shift, and go to state 181
    T_MINUS_EQUAL	shift, and go to state 182
    T_MUL_EQUAL	shift, and go to state 183
    T_DIV_EQUAL	shift, and go to state 184
    T_CONCAT_EQUAL	shift, and go to state 185
    T_MOD_EQUAL	shift, and go to state 186
    T_AND_EQUAL	shift, and go to state 187
    T_OR_EQUAL	shift, and go to state 188
    T_XOR_EQUAL	shift, and go to state 189
    T_SL_EQUAL	shift, and go to state 190
    T_SR_EQUAL	shift, and go to state 191
    '(' 	shift, and go to state 192

    ',' 	reduce using rule 120 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 269 (rw_cvar)
    T_DEC	reduce using rule 269 (rw_cvar)
    ')' 	reduce using rule 120 (non_empty_function_call_parameter_list)
    $default	reduce using rule 267 (r_cvar)



state 442

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 . expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 492
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 443

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 . while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 493
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 494
    unticked_statement	go to state 66
    while_statement	go to state 495
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 444

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr . ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 496



state 445

    non_empty_for_expr  ->  non_empty_for_expr ',' @34 expr .   (rule 152)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 152 (non_empty_for_expr)



state 446

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar . foreach_optional_arg ')' @18 foreach_statement   (rule 51)

    T_DOUBLE_ARROW	shift, and go to state 497

    $default	reduce using rule 71 (foreach_optional_arg)

    foreach_optional_arg	go to state 498



state 447

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar . foreach_optional_arg ')' @16 foreach_statement   (rule 48)

    T_DOUBLE_ARROW	shift, and go to state 497

    $default	reduce using rule 71 (foreach_optional_arg)

    foreach_optional_arg	go to state 499



state 448

    declare_list  ->  T_STRING '=' static_scalar .   (rule 79)

    $default	reduce using rule 79 (declare_list)



state 449

    declare_list  ->  declare_list ',' T_STRING . '=' static_scalar   (rule 80)

    '=' 	shift, and go to state 500



state 450

    declare_statement  ->  ':' . inner_statement_list T_ENDDECLARE ';'   (rule 78)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 501



state 451

    declare_statement  ->  statement .   (rule 77)

    $default	reduce using rule 77 (declare_statement)



state 452

    unticked_statement  ->  T_DECLARE @19 '(' declare_list ')' declare_statement .   (rule 53)

    $default	reduce using rule 53 (unticked_statement)



state 453

    switch_case_list  ->  ':' . case_list T_ENDSWITCH ';'   (rule 83)
    switch_case_list  ->  ':' . ';' case_list T_ENDSWITCH ';'   (rule 84)

    ';' 	shift, and go to state 502

    $default	reduce using rule 85 (case_list)

    case_list	go to state 503



state 454

    switch_case_list  ->  '{' . case_list '}'   (rule 81)
    switch_case_list  ->  '{' . ';' case_list '}'   (rule 82)

    ';' 	shift, and go to state 504

    $default	reduce using rule 85 (case_list)

    case_list	go to state 505



state 455

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 switch_case_list .   (rule 31)

    $default	reduce using rule 31 (unticked_statement)



state 456

    non_empty_parameter_list  ->  '&' . T_VARIABLE   (rule 107)

    T_VARIABLE	shift, and go to state 506



state 457

    non_empty_parameter_list  ->  T_VARIABLE .   (rule 106)
    non_empty_parameter_list  ->  T_VARIABLE . '=' static_scalar   (rule 109)

    '=' 	shift, and go to state 507

    $default	reduce using rule 106 (non_empty_parameter_list)



state 458

    non_empty_parameter_list  ->  T_CONST . T_VARIABLE   (rule 108)

    T_VARIABLE	shift, and go to state 508



state 459

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list . '(' inner_statement_list ')' ';'   (rule 66)

    '(' 	shift, and go to state 509



state 460

    parameter_list  ->  non_empty_parameter_list .   (rule 104)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' '&' T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_CONST T_VARIABLE   (rule 112)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE '=' static_scalar   (rule 113)

    ',' 	shift, and go to state 510

    $default	reduce using rule 104 (parameter_list)



state 461

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 63)

    '&' 	shift, and go to state 456
    T_VARIABLE	shift, and go to state 457
    T_CONST	shift, and go to state 458

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 511
    non_empty_parameter_list	go to state 460



state 462

    non_empty_static_array_pair_list  ->  static_scalar . T_DOUBLE_ARROW static_scalar   (rule 263)
    non_empty_static_array_pair_list  ->  static_scalar .   (rule 264)

    T_DOUBLE_ARROW	shift, and go to state 512

    $default	reduce using rule 264 (non_empty_static_array_pair_list)



state 463

    static_scalar  ->  T_ARRAY '(' static_array_pair_list . ')'   (rule 250)

    ')' 	shift, and go to state 513



state 464

    static_array_pair_list  ->  non_empty_static_array_pair_list . possible_comma   (rule 258)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar   (rule 261)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar   (rule 262)

    ',' 	shift, and go to state 514

    $default	reduce using rule 259 (possible_comma)

    possible_comma	go to state 515



state 465

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' static_scalar .   (rule 128)

    $default	reduce using rule 128 (static_var_list)



state 466

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' . class_statement_list '}'   (rule 70)

    $default	reduce using rule 132 (class_statement_list)

    class_statement_list	go to state 516



state 467

    class_statement  ->  T_OLD_FUNCTION . @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 137 (@32)

    @32 	go to state 517



state 468

    class_statement  ->  T_FUNCTION . @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    $default	reduce using rule 134 (@30)

    @30 	go to state 518



state 469

    class_statement  ->  T_VAR . class_variable_decleration ';'   (rule 133)

    T_VARIABLE	shift, and go to state 519

    class_variable_decleration	go to state 520



state 470

    unticked_declaration_statement  ->  T_CLASS T_STRING @24 '{' class_statement_list '}' .   (rule 68)

    $default	reduce using rule 68 (unticked_declaration_statement)



state 471

    class_statement_list  ->  class_statement_list class_statement .   (rule 131)

    $default	reduce using rule 131 (class_statement_list)



state 472

    assignment_list_element  ->  T_LIST '(' @50 . assignment_list ')'   (rule 299)

    T_VARIABLE	shift, and go to state 30
    T_LIST	shift, and go to state 350
    '$' 	shift, and go to state 60

    $default	reduce using rule 300 (assignment_list_element)

    cvar	go to state 351
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 521
    assignment_list_element	go to state 353



state 473

    assignment_list  ->  assignment_list ',' assignment_list_element .   (rule 295)

    $default	reduce using rule 295 (assignment_list)



state 474

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' '=' . expr   (rule 155)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 522
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 475

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' w_cvar .   (rule 309)

    $default	reduce using rule 309 (non_empty_array_pair_list)



state 476

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' w_cvar .   (rule 308)

    $default	reduce using rule 308 (non_empty_array_pair_list)



state 477

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_cvar   (rule 307)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '&' 	shift, and go to state 523
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 524
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 478

    encaps_var_offset  ->  T_STRING .   (rule 330)

    $default	reduce using rule 330 (encaps_var_offset)



state 479

    encaps_var_offset  ->  T_VARIABLE .   (rule 332)

    $default	reduce using rule 332 (encaps_var_offset)



state 480

    encaps_var_offset  ->  T_NUM_STRING .   (rule 331)

    $default	reduce using rule 331 (encaps_var_offset)



state 481

    encaps_var  ->  T_VARIABLE '[' @51 encaps_var_offset . ']'   (rule 325)

    ']' 	shift, and go to state 525



state 482

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'   (rule 328)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ']' 	shift, and go to state 526



state 483

    expr_without_variable  ->  expr '?' @41 expr ':' @42 . expr   (rule 211)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 527
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 484

    variable_name  ->  '{' expr '}' .   (rule 292)

    $default	reduce using rule 292 (variable_name)



state 485

    ref_list  ->  ref_list T_OBJECT_OPERATOR @48 . object_property   (rule 284)

    T_STRING	shift, and go to state 379
    T_VARIABLE	shift, and go to state 30
    '{' 	shift, and go to state 380
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 381
    reference_variable	go to state 78
    compound_variable	go to state 79
    object_property	go to state 528
    object_dim_list	go to state 384
    variable_name	go to state 385
    simple_indirect_reference	go to state 80



state 486

    object_dim_list  ->  object_dim_list '[' dim_offset . ']'   (rule 288)

    ']' 	shift, and go to state 529



state 487

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    object_dim_list  ->  object_dim_list '{' expr . '}'   (rule 289)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 530



state 488

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list . @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_ELSEIF	reduce using rule 18 (@6)
    T_ELSE	reduce using rule 18 (@6)
    T_ENDIF	reduce using rule 18 (@6)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262
    @6  	go to state 531



state 489

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 . elseif_list else_single   (rule 16)

    $default	reduce using rule 94 (elseif_list)

    elseif_list	go to state 532



state 490

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @46 function_call_parameter_list ')' .   (rule 233)

    $default	reduce using rule 233 (function_call)



state 491

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' w_cvar .   (rule 121)

    $default	reduce using rule 121 (non_empty_function_call_parameter_list)



state 492

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr . ')' ';'   (rule 25)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 533



state 493

    while_statement  ->  ':' . inner_statement_list T_ENDWHILE ';'   (rule 93)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 534



state 494

    while_statement  ->  statement .   (rule 92)

    $default	reduce using rule 92 (while_statement)



state 495

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 while_statement .   (rule 22)

    $default	reduce using rule 22 (unticked_statement)



state 496

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' . @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 27 (@12)

    @12 	go to state 535



state 497

    foreach_optional_arg  ->  T_DOUBLE_ARROW . w_cvar   (rule 72)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 536
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 498

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg . ')' @18 foreach_statement   (rule 51)

    ')' 	shift, and go to state 537



state 499

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg . ')' @16 foreach_statement   (rule 48)

    ')' 	shift, and go to state 538



state 500

    declare_list  ->  declare_list ',' T_STRING '=' . static_scalar   (rule 80)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 539



state 501

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    declare_statement  ->  ':' inner_statement_list . T_ENDDECLARE ';'   (rule 78)

    T_ENDDECLARE	shift, and go to state 540

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 502

    switch_case_list  ->  ':' ';' . case_list T_ENDSWITCH ';'   (rule 84)

    $default	reduce using rule 85 (case_list)

    case_list	go to state 541



state 503

    switch_case_list  ->  ':' case_list . T_ENDSWITCH ';'   (rule 83)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_ENDSWITCH	shift, and go to state 542
    T_CASE	shift, and go to state 543
    T_DEFAULT	shift, and go to state 544



state 504

    switch_case_list  ->  '{' ';' . case_list '}'   (rule 82)

    $default	reduce using rule 85 (case_list)

    case_list	go to state 545



state 505

    switch_case_list  ->  '{' case_list . '}'   (rule 81)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_CASE	shift, and go to state 543
    T_DEFAULT	shift, and go to state 544
    '}' 	shift, and go to state 546



state 506

    non_empty_parameter_list  ->  '&' T_VARIABLE .   (rule 107)

    $default	reduce using rule 107 (non_empty_parameter_list)



state 507

    non_empty_parameter_list  ->  T_VARIABLE '=' . static_scalar   (rule 109)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 547



state 508

    non_empty_parameter_list  ->  T_CONST T_VARIABLE .   (rule 108)

    $default	reduce using rule 108 (non_empty_parameter_list)



state 509

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' . inner_statement_list ')' ';'   (rule 66)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 548



state 510

    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . '&' T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_CONST T_VARIABLE   (rule 112)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE '=' static_scalar   (rule 113)

    '&' 	shift, and go to state 549
    T_VARIABLE	shift, and go to state 550
    T_CONST	shift, and go to state 551



state 511

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 63)

    ')' 	shift, and go to state 552



state 512

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW . static_scalar   (rule 263)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 553



state 513

    static_scalar  ->  T_ARRAY '(' static_array_pair_list ')' .   (rule 250)

    $default	reduce using rule 250 (static_scalar)



state 514

    possible_comma  ->  ',' .   (rule 260)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar   (rule 261)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar   (rule 262)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 260 (possible_comma)

    common_scalar	go to state 341
    static_scalar	go to state 554



state 515

    static_array_pair_list  ->  non_empty_static_array_pair_list possible_comma .   (rule 258)

    $default	reduce using rule 258 (static_array_pair_list)



state 516

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list . '}'   (rule 70)
    class_statement_list  ->  class_statement_list . class_statement   (rule 131)

    T_OLD_FUNCTION	shift, and go to state 467
    T_FUNCTION	shift, and go to state 468
    T_VAR	shift, and go to state 469
    '}' 	shift, and go to state 555

    class_statement	go to state 471



state 517

    class_statement  ->  T_OLD_FUNCTION @32 . is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    '&' 	shift, and go to state 221

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 556



state 518

    class_statement  ->  T_FUNCTION @30 . is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '&' 	shift, and go to state 221

    $default	reduce using rule 140 (is_reference)

    is_reference	go to state 557



state 519

    class_variable_decleration  ->  T_VARIABLE .   (rule 144)
    class_variable_decleration  ->  T_VARIABLE . '=' static_scalar   (rule 145)

    '=' 	shift, and go to state 558

    $default	reduce using rule 144 (class_variable_decleration)



state 520

    class_statement  ->  T_VAR class_variable_decleration . ';'   (rule 133)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE   (rule 142)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE '=' static_scalar   (rule 143)

    ',' 	shift, and go to state 559
    ';' 	shift, and go to state 560



state 521

    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 295)
    assignment_list_element  ->  T_LIST '(' @50 assignment_list . ')'   (rule 299)

    ',' 	shift, and go to state 417
    ')' 	shift, and go to state 561



state 522

    expr_without_variable  ->  T_LIST '(' @35 assignment_list ')' '=' expr .   (rule 155)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 155 (expr_without_variable)



state 523

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_cvar   (rule 307)

    T_VARIABLE	shift, and go to state 30
    '$' 	shift, and go to state 60

    w_cvar	go to state 562
    cvar	go to state 355
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 524

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .   (rule 303)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 303 (non_empty_array_pair_list)



state 525

    encaps_var  ->  T_VARIABLE '[' @51 encaps_var_offset ']' .   (rule 325)

    $default	reduce using rule 325 (encaps_var)



state 526

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'   (rule 328)

    '}' 	shift, and go to state 563



state 527

    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)
    expr_without_variable  ->  expr '?' @41 expr ':' @42 expr .   (rule 211)

    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 211 (expr_without_variable)



state 528

    ref_list  ->  ref_list T_OBJECT_OPERATOR @48 object_property .   (rule 284)

    $default	reduce using rule 284 (ref_list)



state 529

    object_dim_list  ->  object_dim_list '[' dim_offset ']' .   (rule 288)

    $default	reduce using rule 288 (object_dim_list)



state 530

    object_dim_list  ->  object_dim_list '{' expr '}' .   (rule 289)

    $default	reduce using rule 289 (object_dim_list)



state 531

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 . new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 97 (new_elseif_list)

    new_elseif_list	go to state 564



state 532

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list . else_single   (rule 16)
    elseif_list  ->  elseif_list . T_ELSEIF '(' expr ')' @28 statement   (rule 96)

    T_ELSEIF	shift, and go to state 565
    T_ELSE	shift, and go to state 566

    T_ELSEIF	[reduce using rule 100 (else_single)]
    T_ELSE	[reduce using rule 100 (else_single)]
    $default	reduce using rule 100 (else_single)

    else_single	go to state 567



state 533

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' . ';'   (rule 25)

    ';' 	shift, and go to state 568



state 534

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    while_statement  ->  ':' inner_statement_list . T_ENDWHILE ';'   (rule 93)

    T_ENDWHILE	shift, and go to state 569

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 535

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 . for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 149 (for_expr)

    for_expr	go to state 570
    non_empty_for_expr	go to state 212
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 213
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 536

    foreach_optional_arg  ->  T_DOUBLE_ARROW w_cvar .   (rule 72)

    $default	reduce using rule 72 (foreach_optional_arg)



state 537

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' . @18 foreach_statement   (rule 51)

    $default	reduce using rule 50 (@18)

    @18 	go to state 571



state 538

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' . @16 foreach_statement   (rule 48)

    $default	reduce using rule 47 (@16)

    @16 	go to state 572



state 539

    declare_list  ->  declare_list ',' T_STRING '=' static_scalar .   (rule 80)

    $default	reduce using rule 80 (declare_list)



state 540

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE . ';'   (rule 78)

    ';' 	shift, and go to state 573



state 541

    switch_case_list  ->  ':' ';' case_list . T_ENDSWITCH ';'   (rule 84)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_ENDSWITCH	shift, and go to state 574
    T_CASE	shift, and go to state 543
    T_DEFAULT	shift, and go to state 544



state 542

    switch_case_list  ->  ':' case_list T_ENDSWITCH . ';'   (rule 83)

    ';' 	shift, and go to state 575



state 543

    case_list  ->  case_list T_CASE . expr case_separator @26 inner_statement_list   (rule 87)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 576
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 544

    case_list  ->  case_list T_DEFAULT . case_separator @27 inner_statement_list   (rule 89)

    ':' 	shift, and go to state 577
    ';' 	shift, and go to state 578

    case_separator	go to state 579



state 545

    switch_case_list  ->  '{' ';' case_list . '}'   (rule 82)
    case_list  ->  case_list . T_CASE expr case_separator @26 inner_statement_list   (rule 87)
    case_list  ->  case_list . T_DEFAULT case_separator @27 inner_statement_list   (rule 89)

    T_CASE	shift, and go to state 543
    T_DEFAULT	shift, and go to state 544
    '}' 	shift, and go to state 580



state 546

    switch_case_list  ->  '{' case_list '}' .   (rule 81)

    $default	reduce using rule 81 (switch_case_list)



state 547

    non_empty_parameter_list  ->  T_VARIABLE '=' static_scalar .   (rule 109)

    $default	reduce using rule 109 (non_empty_parameter_list)



state 548

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list . ')' ';'   (rule 66)

    ')' 	shift, and go to state 581

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 549

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' . T_VARIABLE   (rule 111)

    T_VARIABLE	shift, and go to state 582



state 550

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE .   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE . '=' static_scalar   (rule 113)

    '=' 	shift, and go to state 583

    $default	reduce using rule 110 (non_empty_parameter_list)



state 551

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST . T_VARIABLE   (rule 112)

    T_VARIABLE	shift, and go to state 584



state 552

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 63)

    '{' 	shift, and go to state 585



state 553

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW static_scalar .   (rule 263)

    $default	reduce using rule 263 (non_empty_static_array_pair_list)



state 554

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar   (rule 261)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar .   (rule 262)

    T_DOUBLE_ARROW	shift, and go to state 586

    $default	reduce using rule 262 (non_empty_static_array_pair_list)



state 555

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @25 '{' class_statement_list '}' .   (rule 70)

    $default	reduce using rule 70 (unticked_declaration_statement)



state 556

    class_statement  ->  T_OLD_FUNCTION @32 is_reference . T_STRING @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    T_STRING	shift, and go to state 587



state 557

    class_statement  ->  T_FUNCTION @30 is_reference . T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    T_STRING	shift, and go to state 588



state 558

    class_variable_decleration  ->  T_VARIABLE '=' . static_scalar   (rule 145)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 589



state 559

    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE   (rule 142)
    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE '=' static_scalar   (rule 143)

    T_VARIABLE	shift, and go to state 590



state 560

    class_statement  ->  T_VAR class_variable_decleration ';' .   (rule 133)

    $default	reduce using rule 133 (class_statement)



state 561

    assignment_list_element  ->  T_LIST '(' @50 assignment_list ')' .   (rule 299)

    $default	reduce using rule 299 (assignment_list_element)



state 562

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar .   (rule 307)

    $default	reduce using rule 307 (non_empty_array_pair_list)



state 563

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .   (rule 328)

    $default	reduce using rule 328 (encaps_var)



state 564

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list . new_else_single T_ENDIF ';'   (rule 19)
    new_elseif_list  ->  new_elseif_list . T_ELSEIF '(' expr ')' ':' @29 inner_statement_list   (rule 99)

    T_ELSEIF	shift, and go to state 591
    T_ELSE	shift, and go to state 592

    $default	reduce using rule 102 (new_else_single)

    new_else_single	go to state 593



state 565

    elseif_list  ->  elseif_list T_ELSEIF . '(' expr ')' @28 statement   (rule 96)

    '(' 	shift, and go to state 594



state 566

    else_single  ->  T_ELSE . statement   (rule 101)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 595
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 567

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list else_single .   (rule 16)

    $default	reduce using rule 16 (unticked_statement)



state 568

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' ';' .   (rule 25)

    $default	reduce using rule 25 (unticked_statement)



state 569

    while_statement  ->  ':' inner_statement_list T_ENDWHILE . ';'   (rule 93)

    ';' 	shift, and go to state 596



state 570

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr . ')' @13 for_statement   (rule 29)

    ')' 	shift, and go to state 597



state 571

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 . foreach_statement   (rule 51)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 598
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 599
    unticked_statement	go to state 66
    foreach_statement	go to state 600
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 572

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 . foreach_statement   (rule 48)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 598
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 599
    unticked_statement	go to state 66
    foreach_statement	go to state 601
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 573

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE ';' .   (rule 78)

    $default	reduce using rule 78 (declare_statement)



state 574

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH . ';'   (rule 84)

    ';' 	shift, and go to state 602



state 575

    switch_case_list  ->  ':' case_list T_ENDSWITCH ';' .   (rule 83)

    $default	reduce using rule 83 (switch_case_list)



state 576

    case_list  ->  case_list T_CASE expr . case_separator @26 inner_statement_list   (rule 87)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 577
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 578

    case_separator	go to state 603



state 577

    case_separator  ->  ':' .   (rule 90)

    $default	reduce using rule 90 (case_separator)



state 578

    case_separator  ->  ';' .   (rule 91)

    $default	reduce using rule 91 (case_separator)



state 579

    case_list  ->  case_list T_DEFAULT case_separator . @27 inner_statement_list   (rule 89)

    $default	reduce using rule 88 (@27)

    @27 	go to state 604



state 580

    switch_case_list  ->  '{' ';' case_list '}' .   (rule 82)

    $default	reduce using rule 82 (switch_case_list)



state 581

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' . ';'   (rule 66)

    ';' 	shift, and go to state 605



state 582

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' T_VARIABLE .   (rule 111)

    $default	reduce using rule 111 (non_empty_parameter_list)



state 583

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' . static_scalar   (rule 113)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 606



state 584

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST T_VARIABLE .   (rule 112)

    $default	reduce using rule 112 (non_empty_parameter_list)



state 585

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 63)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 607



state 586

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar   (rule 261)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 608



state 587

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING . @33 parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 138 (@33)

    @33 	go to state 609



state 588

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING . @31 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    $default	reduce using rule 135 (@31)

    @31 	go to state 610



state 589

    class_variable_decleration  ->  T_VARIABLE '=' static_scalar .   (rule 145)

    $default	reduce using rule 145 (class_variable_decleration)



state 590

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE .   (rule 142)
    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE . '=' static_scalar   (rule 143)

    '=' 	shift, and go to state 611

    $default	reduce using rule 142 (class_variable_decleration)



state 591

    new_elseif_list  ->  new_elseif_list T_ELSEIF . '(' expr ')' ':' @29 inner_statement_list   (rule 99)

    '(' 	shift, and go to state 612



state 592

    new_else_single  ->  T_ELSE . ':' inner_statement_list   (rule 103)

    ':' 	shift, and go to state 613



state 593

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single . T_ENDIF ';'   (rule 19)

    T_ENDIF	shift, and go to state 614



state 594

    elseif_list  ->  elseif_list T_ELSEIF '(' . expr ')' @28 statement   (rule 96)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 615
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 595

    else_single  ->  T_ELSE statement .   (rule 101)

    $default	reduce using rule 101 (else_single)



state 596

    while_statement  ->  ':' inner_statement_list T_ENDWHILE ';' .   (rule 93)

    $default	reduce using rule 93 (while_statement)



state 597

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' . @13 for_statement   (rule 29)

    $default	reduce using rule 28 (@13)

    @13 	go to state 616



state 598

    foreach_statement  ->  ':' . inner_statement_list T_ENDFOREACH ';'   (rule 76)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 617



state 599

    foreach_statement  ->  statement .   (rule 75)

    $default	reduce using rule 75 (foreach_statement)



state 600

    unticked_statement  ->  T_FOREACH '(' expr_without_variable T_AS @17 w_cvar foreach_optional_arg ')' @18 foreach_statement .   (rule 51)

    $default	reduce using rule 51 (unticked_statement)



state 601

    unticked_statement  ->  T_FOREACH '(' w_cvar T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement .   (rule 48)

    $default	reduce using rule 48 (unticked_statement)



state 602

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH ';' .   (rule 84)

    $default	reduce using rule 84 (switch_case_list)



state 603

    case_list  ->  case_list T_CASE expr case_separator . @26 inner_statement_list   (rule 87)

    $default	reduce using rule 86 (@26)

    @26 	go to state 618



state 604

    case_list  ->  case_list T_DEFAULT case_separator @27 . inner_statement_list   (rule 89)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 619



state 605

    unticked_declaration_statement  ->  T_OLD_FUNCTION @22 is_reference T_STRING @23 parameter_list '(' inner_statement_list ')' ';' .   (rule 66)

    $default	reduce using rule 66 (unticked_declaration_statement)



state 606

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' static_scalar .   (rule 113)

    $default	reduce using rule 113 (non_empty_parameter_list)



state 607

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 63)

    '}' 	shift, and go to state 620

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 608

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .   (rule 261)

    $default	reduce using rule 261 (non_empty_static_array_pair_list)



state 609

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 . parameter_list '(' inner_statement_list ')' ';'   (rule 139)

    '&' 	shift, and go to state 456
    T_VARIABLE	shift, and go to state 457
    T_CONST	shift, and go to state 458

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 621
    non_empty_parameter_list	go to state 460



state 610

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '(' 	shift, and go to state 622



state 611

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' . static_scalar   (rule 143)

    '+' 	shift, and go to state 337
    '-' 	shift, and go to state 338
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 339
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ARRAY	shift, and go to state 340
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 341
    static_scalar	go to state 623



state 612

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' . expr ')' ':' @29 inner_statement_list   (rule 99)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 624
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 613

    new_else_single  ->  T_ELSE ':' . inner_statement_list   (rule 103)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 625



state 614

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF . ';'   (rule 19)

    ';' 	shift, and go to state 626



state 615

    elseif_list  ->  elseif_list T_ELSEIF '(' expr . ')' @28 statement   (rule 96)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 627



state 616

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 . for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    ':' 	shift, and go to state 628
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 629
    unticked_statement	go to state 66
    for_statement	go to state 630
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 617

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    foreach_statement  ->  ':' inner_statement_list . T_ENDFOREACH ';'   (rule 76)

    T_ENDFOREACH	shift, and go to state 631

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 618

    case_list  ->  case_list T_CASE expr case_separator @26 . inner_statement_list   (rule 87)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 632



state 619

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_DEFAULT case_separator @27 inner_statement_list .   (rule 89)

    T_ENDSWITCH	reduce using rule 89 (case_list)
    T_CASE	reduce using rule 89 (case_list)
    T_DEFAULT	reduce using rule 89 (case_list)
    '}' 	reduce using rule 89 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 620

    unticked_declaration_statement  ->  T_FUNCTION @20 is_reference T_STRING @21 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 63)

    $default	reduce using rule 63 (unticked_declaration_statement)



state 621

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list . '(' inner_statement_list ')' ';'   (rule 139)

    '(' 	shift, and go to state 633



state 622

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 136)

    '&' 	shift, and go to state 456
    T_VARIABLE	shift, and go to state 457
    T_CONST	shift, and go to state 458

    $default	reduce using rule 105 (parameter_list)

    parameter_list	go to state 634
    non_empty_parameter_list	go to state 460



state 623

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' static_scalar .   (rule 143)

    $default	reduce using rule 143 (class_variable_decleration)



state 624

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr . ')' ':' @29 inner_statement_list   (rule 99)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_OR @39 expr   (rule 181)
    expr_without_variable  ->  expr . T_LOGICAL_AND @40 expr   (rule 183)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 184)
    expr_without_variable  ->  expr . '|' expr   (rule 185)
    expr_without_variable  ->  expr . '&' expr   (rule 186)
    expr_without_variable  ->  expr . '^' expr   (rule 187)
    expr_without_variable  ->  expr . '.' expr   (rule 188)
    expr_without_variable  ->  expr . '+' expr   (rule 189)
    expr_without_variable  ->  expr . '-' expr   (rule 190)
    expr_without_variable  ->  expr . '*' expr   (rule 191)
    expr_without_variable  ->  expr . '/' expr   (rule 192)
    expr_without_variable  ->  expr . '%' expr   (rule 193)
    expr_without_variable  ->  expr . T_SL expr   (rule 194)
    expr_without_variable  ->  expr . T_SR expr   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '<' expr   (rule 204)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 205)
    expr_without_variable  ->  expr . '>' expr   (rule 206)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 207)
    expr_without_variable  ->  expr . '?' @41 expr ':' @42 expr   (rule 211)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 635



state 625

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_else_single  ->  T_ELSE ':' inner_statement_list .   (rule 103)

    T_ENDIF	reduce using rule 103 (new_else_single)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 626

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';' .   (rule 19)

    $default	reduce using rule 19 (unticked_statement)



state 627

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' . @28 statement   (rule 96)

    $default	reduce using rule 95 (@28)

    @28 	go to state 636



state 628

    for_statement  ->  ':' . inner_statement_list T_ENDFOR ';'   (rule 74)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 637



state 629

    for_statement  ->  statement .   (rule 73)

    $default	reduce using rule 73 (for_statement)



state 630

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement .   (rule 29)

    $default	reduce using rule 29 (unticked_statement)



state 631

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH . ';'   (rule 76)

    ';' 	shift, and go to state 638



state 632

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_CASE expr case_separator @26 inner_statement_list .   (rule 87)

    T_ENDSWITCH	reduce using rule 87 (case_list)
    T_CASE	reduce using rule 87 (case_list)
    T_DEFAULT	reduce using rule 87 (case_list)
    '}' 	reduce using rule 87 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 633

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' . inner_statement_list ')' ';'   (rule 139)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 639



state 634

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 136)

    ')' 	shift, and go to state 640



state 635

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' . ':' @29 inner_statement_list   (rule 99)

    ':' 	shift, and go to state 641



state 636

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @28 . statement   (rule 96)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_REQUIRE	shift, and go to state 6
    T_REQUIRE_ONCE	shift, and go to state 7
    T_PRINT	shift, and go to state 8
    '+' 	shift, and go to state 9
    '-' 	shift, and go to state 10
    '!' 	shift, and go to state 11
    '~' 	shift, and go to state 12
    T_INC	shift, and go to state 13
    T_DEC	shift, and go to state 14
    T_INT_CAST	shift, and go to state 15
    T_DOUBLE_CAST	shift, and go to state 16
    T_STRING_CAST	shift, and go to state 17
    T_ARRAY_CAST	shift, and go to state 18
    T_OBJECT_CAST	shift, and go to state 19
    T_BOOL_CAST	shift, and go to state 20
    T_UNSET_CAST	shift, and go to state 21
    '@' 	shift, and go to state 22
    T_NEW	shift, and go to state 23
    T_EXIT	shift, and go to state 24
    T_IF	shift, and go to state 25
    T_LNUMBER	shift, and go to state 26
    T_DNUMBER	shift, and go to state 27
    T_STRING	shift, and go to state 28
    T_STRING_VARNAME	shift, and go to state 29
    T_VARIABLE	shift, and go to state 30
    T_INLINE_HTML	shift, and go to state 31
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 32
    T_ECHO	shift, and go to state 33
    T_DO	shift, and go to state 34
    T_WHILE	shift, and go to state 35
    T_FOR	shift, and go to state 36
    T_FOREACH	shift, and go to state 37
    T_DECLARE	shift, and go to state 38
    T_SWITCH	shift, and go to state 39
    T_BREAK	shift, and go to state 40
    T_CONTINUE	shift, and go to state 41
    T_RETURN	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 642
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 637

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    for_statement  ->  ':' inner_statement_list . T_ENDFOR ';'   (rule 74)

    T_ENDFOR	shift, and go to state 643

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 638

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH ';' .   (rule 76)

    $default	reduce using rule 76 (foreach_statement)



state 639

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list . ')' ';'   (rule 139)

    ')' 	shift, and go to state 644

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 640

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 136)

    '{' 	shift, and go to state 645



state 641

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' . @29 inner_statement_list   (rule 99)

    $default	reduce using rule 98 (@29)

    @29 	go to state 646



state 642

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @28 statement .   (rule 96)

    $default	reduce using rule 96 (elseif_list)



state 643

    for_statement  ->  ':' inner_statement_list T_ENDFOR . ';'   (rule 74)

    ';' 	shift, and go to state 647



state 644

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' . ';'   (rule 139)

    ';' 	shift, and go to state 648



state 645

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 136)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 649



state 646

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @29 . inner_statement_list   (rule 99)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 650



state 647

    for_statement  ->  ':' inner_statement_list T_ENDFOR ';' .   (rule 74)

    $default	reduce using rule 74 (for_statement)



state 648

    class_statement  ->  T_OLD_FUNCTION @32 is_reference T_STRING @33 parameter_list '(' inner_statement_list ')' ';' .   (rule 139)

    $default	reduce using rule 139 (class_statement)



state 649

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 136)

    '}' 	shift, and go to state 651

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 650

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @29 inner_statement_list .   (rule 99)

    T_ELSEIF	reduce using rule 99 (new_elseif_list)
    T_ELSE	reduce using rule 99 (new_elseif_list)
    T_ENDIF	reduce using rule 99 (new_elseif_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 651

    class_statement  ->  T_FUNCTION @30 is_reference T_STRING @31 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 136)

    $default	reduce using rule 136 (class_statement)



state 652

    $   	go to state 653



state 653

    $   	go to state 654



state 654

    $default	accept
