

Terminals which are not used:

   T_COMMENT
   T_ML_COMMENT
   T_OPEN_TAG
   T_OPEN_TAG_WITH_ECHO
   T_CLOSE_TAG
   T_WHITESPACE


Conflict in state 82 between rule 334 and token T_LOGICAL_OR resolved as shift.
Conflict in state 82 between rule 334 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 82 between rule 334 and token T_LOGICAL_AND resolved as shift.
Conflict in state 82 between rule 334 and token '?' resolved as shift.
Conflict in state 82 between rule 334 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 82 between rule 334 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 82 between rule 334 and token '|' resolved as shift.
Conflict in state 82 between rule 334 and token '^' resolved as shift.
Conflict in state 82 between rule 334 and token '&' resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_EQUAL resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 82 between rule 334 and token '<' resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 334 and token '>' resolved as shift.
Conflict in state 82 between rule 334 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 334 and token T_SL resolved as shift.
Conflict in state 82 between rule 334 and token T_SR resolved as shift.
Conflict in state 82 between rule 334 and token '+' resolved as shift.
Conflict in state 82 between rule 334 and token '-' resolved as shift.
Conflict in state 82 between rule 334 and token '.' resolved as shift.
Conflict in state 82 between rule 334 and token '*' resolved as shift.
Conflict in state 82 between rule 334 and token '/' resolved as shift.
Conflict in state 82 between rule 334 and token '%' resolved as shift.
Conflict in state 83 between rule 335 and token T_LOGICAL_OR resolved as shift.
Conflict in state 83 between rule 335 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 83 between rule 335 and token T_LOGICAL_AND resolved as shift.
Conflict in state 83 between rule 335 and token '?' resolved as shift.
Conflict in state 83 between rule 335 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 83 between rule 335 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 83 between rule 335 and token '|' resolved as shift.
Conflict in state 83 between rule 335 and token '^' resolved as shift.
Conflict in state 83 between rule 335 and token '&' resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_EQUAL resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 83 between rule 335 and token '<' resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 335 and token '>' resolved as shift.
Conflict in state 83 between rule 335 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 335 and token T_SL resolved as shift.
Conflict in state 83 between rule 335 and token T_SR resolved as shift.
Conflict in state 83 between rule 335 and token '+' resolved as shift.
Conflict in state 83 between rule 335 and token '-' resolved as shift.
Conflict in state 83 between rule 335 and token '.' resolved as shift.
Conflict in state 83 between rule 335 and token '*' resolved as shift.
Conflict in state 83 between rule 335 and token '/' resolved as shift.
Conflict in state 83 between rule 335 and token '%' resolved as shift.
Conflict in state 85 between rule 226 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 85 between rule 226 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 85 between rule 226 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 85 between rule 226 and token '?' resolved as shift.
Conflict in state 85 between rule 226 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 85 between rule 226 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 85 between rule 226 and token '|' resolved as shift.
Conflict in state 85 between rule 226 and token '^' resolved as shift.
Conflict in state 85 between rule 226 and token '&' resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_EQUAL resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 85 between rule 226 and token '<' resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 226 and token '>' resolved as shift.
Conflict in state 85 between rule 226 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 226 and token T_SL resolved as shift.
Conflict in state 85 between rule 226 and token T_SR resolved as shift.
Conflict in state 85 between rule 226 and token '+' resolved as shift.
Conflict in state 85 between rule 226 and token '-' resolved as shift.
Conflict in state 85 between rule 226 and token '.' resolved as shift.
Conflict in state 85 between rule 226 and token '*' resolved as shift.
Conflict in state 85 between rule 226 and token '/' resolved as shift.
Conflict in state 85 between rule 226 and token '%' resolved as shift.
Conflict in state 86 between rule 195 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 86 between rule 195 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 86 between rule 195 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 86 between rule 195 and token '?' resolved as reduce.
Conflict in state 86 between rule 195 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 86 between rule 195 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 86 between rule 195 and token '|' resolved as reduce.
Conflict in state 86 between rule 195 and token '^' resolved as reduce.
Conflict in state 86 between rule 195 and token '&' resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_EQUAL resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 86 between rule 195 and token '<' resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 86 between rule 195 and token '>' resolved as reduce.
Conflict in state 86 between rule 195 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 86 between rule 195 and token T_SL resolved as reduce.
Conflict in state 86 between rule 195 and token T_SR resolved as reduce.
Conflict in state 86 between rule 195 and token '+' resolved as reduce.
Conflict in state 86 between rule 195 and token '-' resolved as reduce.
Conflict in state 86 between rule 195 and token '.' resolved as reduce.
Conflict in state 86 between rule 195 and token '*' resolved as shift.
Conflict in state 86 between rule 195 and token '/' resolved as shift.
Conflict in state 86 between rule 195 and token '%' resolved as shift.
Conflict in state 87 between rule 196 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 87 between rule 196 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 87 between rule 196 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 87 between rule 196 and token '?' resolved as reduce.
Conflict in state 87 between rule 196 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 87 between rule 196 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 87 between rule 196 and token '|' resolved as reduce.
Conflict in state 87 between rule 196 and token '^' resolved as reduce.
Conflict in state 87 between rule 196 and token '&' resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_EQUAL resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 87 between rule 196 and token '<' resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 87 between rule 196 and token '>' resolved as reduce.
Conflict in state 87 between rule 196 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 87 between rule 196 and token T_SL resolved as reduce.
Conflict in state 87 between rule 196 and token T_SR resolved as reduce.
Conflict in state 87 between rule 196 and token '+' resolved as reduce.
Conflict in state 87 between rule 196 and token '-' resolved as reduce.
Conflict in state 87 between rule 196 and token '.' resolved as reduce.
Conflict in state 87 between rule 196 and token '*' resolved as shift.
Conflict in state 87 between rule 196 and token '/' resolved as shift.
Conflict in state 87 between rule 196 and token '%' resolved as shift.
Conflict in state 88 between rule 197 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 88 between rule 197 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 88 between rule 197 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 88 between rule 197 and token '?' resolved as reduce.
Conflict in state 88 between rule 197 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 88 between rule 197 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 88 between rule 197 and token '|' resolved as reduce.
Conflict in state 88 between rule 197 and token '^' resolved as reduce.
Conflict in state 88 between rule 197 and token '&' resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_EQUAL resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 197 and token '<' resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 197 and token '>' resolved as reduce.
Conflict in state 88 between rule 197 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 197 and token T_SL resolved as reduce.
Conflict in state 88 between rule 197 and token T_SR resolved as reduce.
Conflict in state 88 between rule 197 and token '+' resolved as reduce.
Conflict in state 88 between rule 197 and token '-' resolved as reduce.
Conflict in state 88 between rule 197 and token '.' resolved as reduce.
Conflict in state 88 between rule 197 and token '*' resolved as reduce.
Conflict in state 88 between rule 197 and token '/' resolved as reduce.
Conflict in state 88 between rule 197 and token '%' resolved as reduce.
Conflict in state 89 between rule 198 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 89 between rule 198 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 89 between rule 198 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 89 between rule 198 and token '?' resolved as reduce.
Conflict in state 89 between rule 198 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 89 between rule 198 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 89 between rule 198 and token '|' resolved as reduce.
Conflict in state 89 between rule 198 and token '^' resolved as reduce.
Conflict in state 89 between rule 198 and token '&' resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_EQUAL resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 198 and token '<' resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 198 and token '>' resolved as reduce.
Conflict in state 89 between rule 198 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 198 and token T_SL resolved as reduce.
Conflict in state 89 between rule 198 and token T_SR resolved as reduce.
Conflict in state 89 between rule 198 and token '+' resolved as reduce.
Conflict in state 89 between rule 198 and token '-' resolved as reduce.
Conflict in state 89 between rule 198 and token '.' resolved as reduce.
Conflict in state 89 between rule 198 and token '*' resolved as reduce.
Conflict in state 89 between rule 198 and token '/' resolved as reduce.
Conflict in state 89 between rule 198 and token '%' resolved as reduce.
Conflict in state 93 between rule 213 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 93 between rule 213 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 93 between rule 213 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 93 between rule 213 and token '?' resolved as reduce.
Conflict in state 93 between rule 213 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 93 between rule 213 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 93 between rule 213 and token '|' resolved as reduce.
Conflict in state 93 between rule 213 and token '^' resolved as reduce.
Conflict in state 93 between rule 213 and token '&' resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_EQUAL resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 213 and token '<' resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 213 and token '>' resolved as reduce.
Conflict in state 93 between rule 213 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 213 and token T_SL resolved as reduce.
Conflict in state 93 between rule 213 and token T_SR resolved as reduce.
Conflict in state 93 between rule 213 and token '+' resolved as reduce.
Conflict in state 93 between rule 213 and token '-' resolved as reduce.
Conflict in state 93 between rule 213 and token '.' resolved as reduce.
Conflict in state 93 between rule 213 and token '*' resolved as reduce.
Conflict in state 93 between rule 213 and token '/' resolved as reduce.
Conflict in state 93 between rule 213 and token '%' resolved as reduce.
Conflict in state 94 between rule 214 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 94 between rule 214 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 94 between rule 214 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 94 between rule 214 and token '?' resolved as reduce.
Conflict in state 94 between rule 214 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 94 between rule 214 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 94 between rule 214 and token '|' resolved as reduce.
Conflict in state 94 between rule 214 and token '^' resolved as reduce.
Conflict in state 94 between rule 214 and token '&' resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_EQUAL resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 94 between rule 214 and token '<' resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 94 between rule 214 and token '>' resolved as reduce.
Conflict in state 94 between rule 214 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 94 between rule 214 and token T_SL resolved as reduce.
Conflict in state 94 between rule 214 and token T_SR resolved as reduce.
Conflict in state 94 between rule 214 and token '+' resolved as reduce.
Conflict in state 94 between rule 214 and token '-' resolved as reduce.
Conflict in state 94 between rule 214 and token '.' resolved as reduce.
Conflict in state 94 between rule 214 and token '*' resolved as reduce.
Conflict in state 94 between rule 214 and token '/' resolved as reduce.
Conflict in state 94 between rule 214 and token '%' resolved as reduce.
Conflict in state 95 between rule 215 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 95 between rule 215 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 95 between rule 215 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 95 between rule 215 and token '?' resolved as reduce.
Conflict in state 95 between rule 215 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 95 between rule 215 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 95 between rule 215 and token '|' resolved as reduce.
Conflict in state 95 between rule 215 and token '^' resolved as reduce.
Conflict in state 95 between rule 215 and token '&' resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_EQUAL resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 215 and token '<' resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 215 and token '>' resolved as reduce.
Conflict in state 95 between rule 215 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 215 and token T_SL resolved as reduce.
Conflict in state 95 between rule 215 and token T_SR resolved as reduce.
Conflict in state 95 between rule 215 and token '+' resolved as reduce.
Conflict in state 95 between rule 215 and token '-' resolved as reduce.
Conflict in state 95 between rule 215 and token '.' resolved as reduce.
Conflict in state 95 between rule 215 and token '*' resolved as reduce.
Conflict in state 95 between rule 215 and token '/' resolved as reduce.
Conflict in state 95 between rule 215 and token '%' resolved as reduce.
Conflict in state 96 between rule 216 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 96 between rule 216 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 96 between rule 216 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 96 between rule 216 and token '?' resolved as reduce.
Conflict in state 96 between rule 216 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 96 between rule 216 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 96 between rule 216 and token '|' resolved as reduce.
Conflict in state 96 between rule 216 and token '^' resolved as reduce.
Conflict in state 96 between rule 216 and token '&' resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_EQUAL resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 216 and token '<' resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 216 and token '>' resolved as reduce.
Conflict in state 96 between rule 216 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 216 and token T_SL resolved as reduce.
Conflict in state 96 between rule 216 and token T_SR resolved as reduce.
Conflict in state 96 between rule 216 and token '+' resolved as reduce.
Conflict in state 96 between rule 216 and token '-' resolved as reduce.
Conflict in state 96 between rule 216 and token '.' resolved as reduce.
Conflict in state 96 between rule 216 and token '*' resolved as reduce.
Conflict in state 96 between rule 216 and token '/' resolved as reduce.
Conflict in state 96 between rule 216 and token '%' resolved as reduce.
Conflict in state 97 between rule 217 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 97 between rule 217 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 97 between rule 217 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 217 and token '?' resolved as reduce.
Conflict in state 97 between rule 217 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 97 between rule 217 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 97 between rule 217 and token '|' resolved as reduce.
Conflict in state 97 between rule 217 and token '^' resolved as reduce.
Conflict in state 97 between rule 217 and token '&' resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_EQUAL resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 217 and token '<' resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 217 and token '>' resolved as reduce.
Conflict in state 97 between rule 217 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 217 and token T_SL resolved as reduce.
Conflict in state 97 between rule 217 and token T_SR resolved as reduce.
Conflict in state 97 between rule 217 and token '+' resolved as reduce.
Conflict in state 97 between rule 217 and token '-' resolved as reduce.
Conflict in state 97 between rule 217 and token '.' resolved as reduce.
Conflict in state 97 between rule 217 and token '*' resolved as reduce.
Conflict in state 97 between rule 217 and token '/' resolved as reduce.
Conflict in state 97 between rule 217 and token '%' resolved as reduce.
Conflict in state 98 between rule 218 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 98 between rule 218 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 98 between rule 218 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 218 and token '?' resolved as reduce.
Conflict in state 98 between rule 218 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 98 between rule 218 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 98 between rule 218 and token '|' resolved as reduce.
Conflict in state 98 between rule 218 and token '^' resolved as reduce.
Conflict in state 98 between rule 218 and token '&' resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_EQUAL resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 218 and token '<' resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 218 and token '>' resolved as reduce.
Conflict in state 98 between rule 218 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 218 and token T_SL resolved as reduce.
Conflict in state 98 between rule 218 and token T_SR resolved as reduce.
Conflict in state 98 between rule 218 and token '+' resolved as reduce.
Conflict in state 98 between rule 218 and token '-' resolved as reduce.
Conflict in state 98 between rule 218 and token '.' resolved as reduce.
Conflict in state 98 between rule 218 and token '*' resolved as reduce.
Conflict in state 98 between rule 218 and token '/' resolved as reduce.
Conflict in state 98 between rule 218 and token '%' resolved as reduce.
Conflict in state 99 between rule 219 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 99 between rule 219 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 99 between rule 219 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 219 and token '?' resolved as reduce.
Conflict in state 99 between rule 219 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 99 between rule 219 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 99 between rule 219 and token '|' resolved as reduce.
Conflict in state 99 between rule 219 and token '^' resolved as reduce.
Conflict in state 99 between rule 219 and token '&' resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_EQUAL resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 219 and token '<' resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 219 and token '>' resolved as reduce.
Conflict in state 99 between rule 219 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 219 and token T_SL resolved as reduce.
Conflict in state 99 between rule 219 and token T_SR resolved as reduce.
Conflict in state 99 between rule 219 and token '+' resolved as reduce.
Conflict in state 99 between rule 219 and token '-' resolved as reduce.
Conflict in state 99 between rule 219 and token '.' resolved as reduce.
Conflict in state 99 between rule 219 and token '*' resolved as reduce.
Conflict in state 99 between rule 219 and token '/' resolved as reduce.
Conflict in state 99 between rule 219 and token '%' resolved as reduce.
Conflict in state 199 between rule 222 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 199 between rule 222 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 199 between rule 222 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 222 and token '?' resolved as reduce.
Conflict in state 199 between rule 222 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 199 between rule 222 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 199 between rule 222 and token '|' resolved as reduce.
Conflict in state 199 between rule 222 and token '^' resolved as reduce.
Conflict in state 199 between rule 222 and token '&' resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_EQUAL resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 222 and token '<' resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 222 and token '>' resolved as reduce.
Conflict in state 199 between rule 222 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 222 and token T_SL resolved as reduce.
Conflict in state 199 between rule 222 and token T_SR resolved as reduce.
Conflict in state 199 between rule 222 and token '+' resolved as reduce.
Conflict in state 199 between rule 222 and token '-' resolved as reduce.
Conflict in state 199 between rule 222 and token '.' resolved as reduce.
Conflict in state 199 between rule 222 and token '*' resolved as reduce.
Conflict in state 199 between rule 222 and token '/' resolved as reduce.
Conflict in state 199 between rule 222 and token '%' resolved as reduce.
Conflict in state 269 between rule 183 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 269 between rule 183 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 269 between rule 183 and token T_LOGICAL_AND resolved as shift.
Conflict in state 269 between rule 183 and token '?' resolved as shift.
Conflict in state 269 between rule 183 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 269 between rule 183 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 269 between rule 183 and token '|' resolved as shift.
Conflict in state 269 between rule 183 and token '^' resolved as shift.
Conflict in state 269 between rule 183 and token '&' resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_EQUAL resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 269 between rule 183 and token '<' resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 269 between rule 183 and token '>' resolved as shift.
Conflict in state 269 between rule 183 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 269 between rule 183 and token T_SL resolved as shift.
Conflict in state 269 between rule 183 and token T_SR resolved as shift.
Conflict in state 269 between rule 183 and token '+' resolved as shift.
Conflict in state 269 between rule 183 and token '-' resolved as shift.
Conflict in state 269 between rule 183 and token '.' resolved as shift.
Conflict in state 269 between rule 183 and token '*' resolved as shift.
Conflict in state 269 between rule 183 and token '/' resolved as shift.
Conflict in state 269 between rule 183 and token '%' resolved as shift.
Conflict in state 274 between rule 184 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 274 between rule 184 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 274 between rule 184 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 184 and token '?' resolved as reduce.
Conflict in state 274 between rule 184 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 274 between rule 184 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 274 between rule 184 and token '|' resolved as reduce.
Conflict in state 274 between rule 184 and token '^' resolved as shift.
Conflict in state 274 between rule 184 and token '&' resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_EQUAL resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 274 between rule 184 and token '<' resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 184 and token '>' resolved as shift.
Conflict in state 274 between rule 184 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 184 and token T_SL resolved as shift.
Conflict in state 274 between rule 184 and token T_SR resolved as shift.
Conflict in state 274 between rule 184 and token '+' resolved as shift.
Conflict in state 274 between rule 184 and token '-' resolved as shift.
Conflict in state 274 between rule 184 and token '.' resolved as shift.
Conflict in state 274 between rule 184 and token '*' resolved as shift.
Conflict in state 274 between rule 184 and token '/' resolved as shift.
Conflict in state 274 between rule 184 and token '%' resolved as shift.
Conflict in state 275 between rule 186 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 186 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 275 between rule 186 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 186 and token '?' resolved as reduce.
Conflict in state 275 between rule 186 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 275 between rule 186 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 275 between rule 186 and token '|' resolved as reduce.
Conflict in state 275 between rule 186 and token '^' resolved as reduce.
Conflict in state 275 between rule 186 and token '&' resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_EQUAL resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 275 between rule 186 and token '<' resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 186 and token '>' resolved as shift.
Conflict in state 275 between rule 186 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 186 and token T_SL resolved as shift.
Conflict in state 275 between rule 186 and token T_SR resolved as shift.
Conflict in state 275 between rule 186 and token '+' resolved as shift.
Conflict in state 275 between rule 186 and token '-' resolved as shift.
Conflict in state 275 between rule 186 and token '.' resolved as shift.
Conflict in state 275 between rule 186 and token '*' resolved as shift.
Conflict in state 275 between rule 186 and token '/' resolved as shift.
Conflict in state 275 between rule 186 and token '%' resolved as shift.
Conflict in state 276 between rule 185 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 185 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 276 between rule 185 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 185 and token '?' resolved as reduce.
Conflict in state 276 between rule 185 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 276 between rule 185 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 276 between rule 185 and token '|' resolved as reduce.
Conflict in state 276 between rule 185 and token '^' resolved as reduce.
Conflict in state 276 between rule 185 and token '&' resolved as reduce.
Conflict in state 276 between rule 185 and token T_IS_EQUAL resolved as shift.
Conflict in state 276 between rule 185 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 276 between rule 185 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 276 between rule 185 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 276 between rule 185 and token '<' resolved as shift.
Conflict in state 276 between rule 185 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 185 and token '>' resolved as shift.
Conflict in state 276 between rule 185 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 185 and token T_SL resolved as shift.
Conflict in state 276 between rule 185 and token T_SR resolved as shift.
Conflict in state 276 between rule 185 and token '+' resolved as shift.
Conflict in state 276 between rule 185 and token '-' resolved as shift.
Conflict in state 276 between rule 185 and token '.' resolved as shift.
Conflict in state 276 between rule 185 and token '*' resolved as shift.
Conflict in state 276 between rule 185 and token '/' resolved as shift.
Conflict in state 276 between rule 185 and token '%' resolved as shift.
Conflict in state 277 between rule 201 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 277 between rule 201 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 277 between rule 201 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 201 and token '?' resolved as reduce.
Conflict in state 277 between rule 201 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 277 between rule 201 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 277 between rule 201 and token '|' resolved as reduce.
Conflict in state 277 between rule 201 and token '^' resolved as reduce.
Conflict in state 277 between rule 201 and token '&' resolved as reduce.
Conflict in state 277 between rule 201 and token T_IS_EQUAL resolved as an error.
Conflict in state 277 between rule 201 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 277 between rule 201 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 277 between rule 201 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 277 between rule 201 and token '<' resolved as shift.
Conflict in state 277 between rule 201 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 201 and token '>' resolved as shift.
Conflict in state 277 between rule 201 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 277 between rule 201 and token T_SL resolved as shift.
Conflict in state 277 between rule 201 and token T_SR resolved as shift.
Conflict in state 277 between rule 201 and token '+' resolved as shift.
Conflict in state 277 between rule 201 and token '-' resolved as shift.
Conflict in state 277 between rule 201 and token '.' resolved as shift.
Conflict in state 277 between rule 201 and token '*' resolved as shift.
Conflict in state 277 between rule 201 and token '/' resolved as shift.
Conflict in state 277 between rule 201 and token '%' resolved as shift.
Conflict in state 278 between rule 202 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 202 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 278 between rule 202 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 202 and token '?' resolved as reduce.
Conflict in state 278 between rule 202 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 278 between rule 202 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 278 between rule 202 and token '|' resolved as reduce.
Conflict in state 278 between rule 202 and token '^' resolved as reduce.
Conflict in state 278 between rule 202 and token '&' resolved as reduce.
Conflict in state 278 between rule 202 and token T_IS_EQUAL resolved as an error.
Conflict in state 278 between rule 202 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 278 between rule 202 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 278 between rule 202 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 278 between rule 202 and token '<' resolved as shift.
Conflict in state 278 between rule 202 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 202 and token '>' resolved as shift.
Conflict in state 278 between rule 202 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 278 between rule 202 and token T_SL resolved as shift.
Conflict in state 278 between rule 202 and token T_SR resolved as shift.
Conflict in state 278 between rule 202 and token '+' resolved as shift.
Conflict in state 278 between rule 202 and token '-' resolved as shift.
Conflict in state 278 between rule 202 and token '.' resolved as shift.
Conflict in state 278 between rule 202 and token '*' resolved as shift.
Conflict in state 278 between rule 202 and token '/' resolved as shift.
Conflict in state 278 between rule 202 and token '%' resolved as shift.
Conflict in state 279 between rule 199 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 279 between rule 199 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 279 between rule 199 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 199 and token '?' resolved as reduce.
Conflict in state 279 between rule 199 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 279 between rule 199 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 279 between rule 199 and token '|' resolved as reduce.
Conflict in state 279 between rule 199 and token '^' resolved as reduce.
Conflict in state 279 between rule 199 and token '&' resolved as reduce.
Conflict in state 279 between rule 199 and token T_IS_EQUAL resolved as an error.
Conflict in state 279 between rule 199 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 279 between rule 199 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 279 between rule 199 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 279 between rule 199 and token '<' resolved as shift.
Conflict in state 279 between rule 199 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 199 and token '>' resolved as shift.
Conflict in state 279 between rule 199 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 279 between rule 199 and token T_SL resolved as shift.
Conflict in state 279 between rule 199 and token T_SR resolved as shift.
Conflict in state 279 between rule 199 and token '+' resolved as shift.
Conflict in state 279 between rule 199 and token '-' resolved as shift.
Conflict in state 279 between rule 199 and token '.' resolved as shift.
Conflict in state 279 between rule 199 and token '*' resolved as shift.
Conflict in state 279 between rule 199 and token '/' resolved as shift.
Conflict in state 279 between rule 199 and token '%' resolved as shift.
Conflict in state 280 between rule 200 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 280 between rule 200 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 280 between rule 200 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 280 between rule 200 and token '?' resolved as reduce.
Conflict in state 280 between rule 200 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 280 between rule 200 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 280 between rule 200 and token '|' resolved as reduce.
Conflict in state 280 between rule 200 and token '^' resolved as reduce.
Conflict in state 280 between rule 200 and token '&' resolved as reduce.
Conflict in state 280 between rule 200 and token T_IS_EQUAL resolved as an error.
Conflict in state 280 between rule 200 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 280 between rule 200 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 280 between rule 200 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 280 between rule 200 and token '<' resolved as shift.
Conflict in state 280 between rule 200 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 200 and token '>' resolved as shift.
Conflict in state 280 between rule 200 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 280 between rule 200 and token T_SL resolved as shift.
Conflict in state 280 between rule 200 and token T_SR resolved as shift.
Conflict in state 280 between rule 200 and token '+' resolved as shift.
Conflict in state 280 between rule 200 and token '-' resolved as shift.
Conflict in state 280 between rule 200 and token '.' resolved as shift.
Conflict in state 280 between rule 200 and token '*' resolved as shift.
Conflict in state 280 between rule 200 and token '/' resolved as shift.
Conflict in state 280 between rule 200 and token '%' resolved as shift.
Conflict in state 281 between rule 203 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 281 between rule 203 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 281 between rule 203 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 203 and token '?' resolved as reduce.
Conflict in state 281 between rule 203 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 281 between rule 203 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 281 between rule 203 and token '|' resolved as reduce.
Conflict in state 281 between rule 203 and token '^' resolved as reduce.
Conflict in state 281 between rule 203 and token '&' resolved as reduce.
Conflict in state 281 between rule 203 and token T_IS_EQUAL resolved as reduce.
Conflict in state 281 between rule 203 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 281 between rule 203 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 203 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 203 and token '<' resolved as an error.
Conflict in state 281 between rule 203 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 281 between rule 203 and token '>' resolved as an error.
Conflict in state 281 between rule 203 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 281 between rule 203 and token T_SL resolved as shift.
Conflict in state 281 between rule 203 and token T_SR resolved as shift.
Conflict in state 281 between rule 203 and token '+' resolved as shift.
Conflict in state 281 between rule 203 and token '-' resolved as shift.
Conflict in state 281 between rule 203 and token '.' resolved as shift.
Conflict in state 281 between rule 203 and token '*' resolved as shift.
Conflict in state 281 between rule 203 and token '/' resolved as shift.
Conflict in state 281 between rule 203 and token '%' resolved as shift.
Conflict in state 282 between rule 204 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 282 between rule 204 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 282 between rule 204 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 204 and token '?' resolved as reduce.
Conflict in state 282 between rule 204 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 282 between rule 204 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 282 between rule 204 and token '|' resolved as reduce.
Conflict in state 282 between rule 204 and token '^' resolved as reduce.
Conflict in state 282 between rule 204 and token '&' resolved as reduce.
Conflict in state 282 between rule 204 and token T_IS_EQUAL resolved as reduce.
Conflict in state 282 between rule 204 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 282 between rule 204 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 204 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 204 and token '<' resolved as an error.
Conflict in state 282 between rule 204 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 204 and token '>' resolved as an error.
Conflict in state 282 between rule 204 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 282 between rule 204 and token T_SL resolved as shift.
Conflict in state 282 between rule 204 and token T_SR resolved as shift.
Conflict in state 282 between rule 204 and token '+' resolved as shift.
Conflict in state 282 between rule 204 and token '-' resolved as shift.
Conflict in state 282 between rule 204 and token '.' resolved as shift.
Conflict in state 282 between rule 204 and token '*' resolved as shift.
Conflict in state 282 between rule 204 and token '/' resolved as shift.
Conflict in state 282 between rule 204 and token '%' resolved as shift.
Conflict in state 283 between rule 205 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 283 between rule 205 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 283 between rule 205 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 283 between rule 205 and token '?' resolved as reduce.
Conflict in state 283 between rule 205 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 283 between rule 205 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 283 between rule 205 and token '|' resolved as reduce.
Conflict in state 283 between rule 205 and token '^' resolved as reduce.
Conflict in state 283 between rule 205 and token '&' resolved as reduce.
Conflict in state 283 between rule 205 and token T_IS_EQUAL resolved as reduce.
Conflict in state 283 between rule 205 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 283 between rule 205 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 205 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 205 and token '<' resolved as an error.
Conflict in state 283 between rule 205 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 205 and token '>' resolved as an error.
Conflict in state 283 between rule 205 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 283 between rule 205 and token T_SL resolved as shift.
Conflict in state 283 between rule 205 and token T_SR resolved as shift.
Conflict in state 283 between rule 205 and token '+' resolved as shift.
Conflict in state 283 between rule 205 and token '-' resolved as shift.
Conflict in state 283 between rule 205 and token '.' resolved as shift.
Conflict in state 283 between rule 205 and token '*' resolved as shift.
Conflict in state 283 between rule 205 and token '/' resolved as shift.
Conflict in state 283 between rule 205 and token '%' resolved as shift.
Conflict in state 284 between rule 206 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 284 between rule 206 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 284 between rule 206 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 284 between rule 206 and token '?' resolved as reduce.
Conflict in state 284 between rule 206 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 284 between rule 206 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 284 between rule 206 and token '|' resolved as reduce.
Conflict in state 284 between rule 206 and token '^' resolved as reduce.
Conflict in state 284 between rule 206 and token '&' resolved as reduce.
Conflict in state 284 between rule 206 and token T_IS_EQUAL resolved as reduce.
Conflict in state 284 between rule 206 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 284 between rule 206 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 206 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 206 and token '<' resolved as an error.
Conflict in state 284 between rule 206 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 206 and token '>' resolved as an error.
Conflict in state 284 between rule 206 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 284 between rule 206 and token T_SL resolved as shift.
Conflict in state 284 between rule 206 and token T_SR resolved as shift.
Conflict in state 284 between rule 206 and token '+' resolved as shift.
Conflict in state 284 between rule 206 and token '-' resolved as shift.
Conflict in state 284 between rule 206 and token '.' resolved as shift.
Conflict in state 284 between rule 206 and token '*' resolved as shift.
Conflict in state 284 between rule 206 and token '/' resolved as shift.
Conflict in state 284 between rule 206 and token '%' resolved as shift.
Conflict in state 285 between rule 193 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 285 between rule 193 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 285 between rule 193 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 285 between rule 193 and token '?' resolved as reduce.
Conflict in state 285 between rule 193 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 285 between rule 193 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 285 between rule 193 and token '|' resolved as reduce.
Conflict in state 285 between rule 193 and token '^' resolved as reduce.
Conflict in state 285 between rule 193 and token '&' resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_EQUAL resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 193 and token '<' resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 193 and token '>' resolved as reduce.
Conflict in state 285 between rule 193 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 193 and token T_SL resolved as reduce.
Conflict in state 285 between rule 193 and token T_SR resolved as reduce.
Conflict in state 285 between rule 193 and token '+' resolved as shift.
Conflict in state 285 between rule 193 and token '-' resolved as shift.
Conflict in state 285 between rule 193 and token '.' resolved as shift.
Conflict in state 285 between rule 193 and token '*' resolved as shift.
Conflict in state 285 between rule 193 and token '/' resolved as shift.
Conflict in state 285 between rule 193 and token '%' resolved as shift.
Conflict in state 286 between rule 194 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 286 between rule 194 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 286 between rule 194 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 286 between rule 194 and token '?' resolved as reduce.
Conflict in state 286 between rule 194 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 286 between rule 194 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 286 between rule 194 and token '|' resolved as reduce.
Conflict in state 286 between rule 194 and token '^' resolved as reduce.
Conflict in state 286 between rule 194 and token '&' resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_EQUAL resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 194 and token '<' resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 194 and token '>' resolved as reduce.
Conflict in state 286 between rule 194 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 194 and token T_SL resolved as reduce.
Conflict in state 286 between rule 194 and token T_SR resolved as reduce.
Conflict in state 286 between rule 194 and token '+' resolved as shift.
Conflict in state 286 between rule 194 and token '-' resolved as shift.
Conflict in state 286 between rule 194 and token '.' resolved as shift.
Conflict in state 286 between rule 194 and token '*' resolved as shift.
Conflict in state 286 between rule 194 and token '/' resolved as shift.
Conflict in state 286 between rule 194 and token '%' resolved as shift.
Conflict in state 287 between rule 188 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 287 between rule 188 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 287 between rule 188 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 287 between rule 188 and token '?' resolved as reduce.
Conflict in state 287 between rule 188 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 287 between rule 188 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 287 between rule 188 and token '|' resolved as reduce.
Conflict in state 287 between rule 188 and token '^' resolved as reduce.
Conflict in state 287 between rule 188 and token '&' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 188 and token '<' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token '>' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_SL resolved as reduce.
Conflict in state 287 between rule 188 and token T_SR resolved as reduce.
Conflict in state 287 between rule 188 and token '+' resolved as reduce.
Conflict in state 287 between rule 188 and token '-' resolved as reduce.
Conflict in state 287 between rule 188 and token '.' resolved as reduce.
Conflict in state 287 between rule 188 and token '*' resolved as shift.
Conflict in state 287 between rule 188 and token '/' resolved as shift.
Conflict in state 287 between rule 188 and token '%' resolved as shift.
Conflict in state 288 between rule 189 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 288 between rule 189 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 288 between rule 189 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 189 and token '?' resolved as reduce.
Conflict in state 288 between rule 189 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 288 between rule 189 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 288 between rule 189 and token '|' resolved as reduce.
Conflict in state 288 between rule 189 and token '^' resolved as reduce.
Conflict in state 288 between rule 189 and token '&' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 189 and token '<' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token '>' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_SL resolved as reduce.
Conflict in state 288 between rule 189 and token T_SR resolved as reduce.
Conflict in state 288 between rule 189 and token '+' resolved as reduce.
Conflict in state 288 between rule 189 and token '-' resolved as reduce.
Conflict in state 288 between rule 189 and token '.' resolved as reduce.
Conflict in state 288 between rule 189 and token '*' resolved as shift.
Conflict in state 288 between rule 189 and token '/' resolved as shift.
Conflict in state 288 between rule 189 and token '%' resolved as shift.
Conflict in state 289 between rule 187 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 289 between rule 187 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 289 between rule 187 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 289 between rule 187 and token '?' resolved as reduce.
Conflict in state 289 between rule 187 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 289 between rule 187 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 289 between rule 187 and token '|' resolved as reduce.
Conflict in state 289 between rule 187 and token '^' resolved as reduce.
Conflict in state 289 between rule 187 and token '&' resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_EQUAL resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 289 between rule 187 and token '<' resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 187 and token '>' resolved as reduce.
Conflict in state 289 between rule 187 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 289 between rule 187 and token T_SL resolved as reduce.
Conflict in state 289 between rule 187 and token T_SR resolved as reduce.
Conflict in state 289 between rule 187 and token '+' resolved as reduce.
Conflict in state 289 between rule 187 and token '-' resolved as reduce.
Conflict in state 289 between rule 187 and token '.' resolved as reduce.
Conflict in state 289 between rule 187 and token '*' resolved as shift.
Conflict in state 289 between rule 187 and token '/' resolved as shift.
Conflict in state 289 between rule 187 and token '%' resolved as shift.
Conflict in state 290 between rule 190 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 290 between rule 190 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 290 between rule 190 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 290 between rule 190 and token '?' resolved as reduce.
Conflict in state 290 between rule 190 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 290 between rule 190 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 290 between rule 190 and token '|' resolved as reduce.
Conflict in state 290 between rule 190 and token '^' resolved as reduce.
Conflict in state 290 between rule 190 and token '&' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 290 between rule 190 and token '<' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token '>' resolved as reduce.
Conflict in state 290 between rule 190 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 290 between rule 190 and token T_SL resolved as reduce.
Conflict in state 290 between rule 190 and token T_SR resolved as reduce.
Conflict in state 290 between rule 190 and token '+' resolved as reduce.
Conflict in state 290 between rule 190 and token '-' resolved as reduce.
Conflict in state 290 between rule 190 and token '.' resolved as reduce.
Conflict in state 290 between rule 190 and token '*' resolved as reduce.
Conflict in state 290 between rule 190 and token '/' resolved as reduce.
Conflict in state 290 between rule 190 and token '%' resolved as reduce.
Conflict in state 291 between rule 191 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 291 between rule 191 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 291 between rule 191 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 191 and token '?' resolved as reduce.
Conflict in state 291 between rule 191 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 291 between rule 191 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 291 between rule 191 and token '|' resolved as reduce.
Conflict in state 291 between rule 191 and token '^' resolved as reduce.
Conflict in state 291 between rule 191 and token '&' resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_EQUAL resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 291 between rule 191 and token '<' resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 191 and token '>' resolved as reduce.
Conflict in state 291 between rule 191 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 291 between rule 191 and token T_SL resolved as reduce.
Conflict in state 291 between rule 191 and token T_SR resolved as reduce.
Conflict in state 291 between rule 191 and token '+' resolved as reduce.
Conflict in state 291 between rule 191 and token '-' resolved as reduce.
Conflict in state 291 between rule 191 and token '.' resolved as reduce.
Conflict in state 291 between rule 191 and token '*' resolved as reduce.
Conflict in state 291 between rule 191 and token '/' resolved as reduce.
Conflict in state 291 between rule 191 and token '%' resolved as reduce.
Conflict in state 292 between rule 192 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 292 between rule 192 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 292 between rule 192 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 292 between rule 192 and token '?' resolved as reduce.
Conflict in state 292 between rule 192 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 292 between rule 192 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 292 between rule 192 and token '|' resolved as reduce.
Conflict in state 292 between rule 192 and token '^' resolved as reduce.
Conflict in state 292 between rule 192 and token '&' resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_EQUAL resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 292 between rule 192 and token '<' resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 192 and token '>' resolved as reduce.
Conflict in state 292 between rule 192 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 292 between rule 192 and token T_SL resolved as reduce.
Conflict in state 292 between rule 192 and token T_SR resolved as reduce.
Conflict in state 292 between rule 192 and token '+' resolved as reduce.
Conflict in state 292 between rule 192 and token '-' resolved as reduce.
Conflict in state 292 between rule 192 and token '.' resolved as reduce.
Conflict in state 292 between rule 192 and token '*' resolved as reduce.
Conflict in state 292 between rule 192 and token '/' resolved as reduce.
Conflict in state 292 between rule 192 and token '%' resolved as reduce.
Conflict in state 295 between rule 155 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 295 between rule 155 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 295 between rule 155 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 295 between rule 155 and token '?' resolved as shift.
Conflict in state 295 between rule 155 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 295 between rule 155 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 295 between rule 155 and token '|' resolved as shift.
Conflict in state 295 between rule 155 and token '^' resolved as shift.
Conflict in state 295 between rule 155 and token '&' resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_EQUAL resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 295 between rule 155 and token '<' resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 155 and token '>' resolved as shift.
Conflict in state 295 between rule 155 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 155 and token T_SL resolved as shift.
Conflict in state 295 between rule 155 and token T_SR resolved as shift.
Conflict in state 295 between rule 155 and token '+' resolved as shift.
Conflict in state 295 between rule 155 and token '-' resolved as shift.
Conflict in state 295 between rule 155 and token '.' resolved as shift.
Conflict in state 295 between rule 155 and token '*' resolved as shift.
Conflict in state 295 between rule 155 and token '/' resolved as shift.
Conflict in state 295 between rule 155 and token '%' resolved as shift.
Conflict in state 296 between rule 160 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 296 between rule 160 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 296 between rule 160 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 160 and token '?' resolved as shift.
Conflict in state 296 between rule 160 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 296 between rule 160 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 296 between rule 160 and token '|' resolved as shift.
Conflict in state 296 between rule 160 and token '^' resolved as shift.
Conflict in state 296 between rule 160 and token '&' resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_EQUAL resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 296 between rule 160 and token '<' resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 160 and token '>' resolved as shift.
Conflict in state 296 between rule 160 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 160 and token T_SL resolved as shift.
Conflict in state 296 between rule 160 and token T_SR resolved as shift.
Conflict in state 296 between rule 160 and token '+' resolved as shift.
Conflict in state 296 between rule 160 and token '-' resolved as shift.
Conflict in state 296 between rule 160 and token '.' resolved as shift.
Conflict in state 296 between rule 160 and token '*' resolved as shift.
Conflict in state 296 between rule 160 and token '/' resolved as shift.
Conflict in state 296 between rule 160 and token '%' resolved as shift.
Conflict in state 297 between rule 161 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 297 between rule 161 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 297 between rule 161 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 161 and token '?' resolved as shift.
Conflict in state 297 between rule 161 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 297 between rule 161 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 297 between rule 161 and token '|' resolved as shift.
Conflict in state 297 between rule 161 and token '^' resolved as shift.
Conflict in state 297 between rule 161 and token '&' resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_EQUAL resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 297 between rule 161 and token '<' resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 161 and token '>' resolved as shift.
Conflict in state 297 between rule 161 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 161 and token T_SL resolved as shift.
Conflict in state 297 between rule 161 and token T_SR resolved as shift.
Conflict in state 297 between rule 161 and token '+' resolved as shift.
Conflict in state 297 between rule 161 and token '-' resolved as shift.
Conflict in state 297 between rule 161 and token '.' resolved as shift.
Conflict in state 297 between rule 161 and token '*' resolved as shift.
Conflict in state 297 between rule 161 and token '/' resolved as shift.
Conflict in state 297 between rule 161 and token '%' resolved as shift.
Conflict in state 298 between rule 162 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 298 between rule 162 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 298 between rule 162 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 298 between rule 162 and token '?' resolved as shift.
Conflict in state 298 between rule 162 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 298 between rule 162 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 298 between rule 162 and token '|' resolved as shift.
Conflict in state 298 between rule 162 and token '^' resolved as shift.
Conflict in state 298 between rule 162 and token '&' resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_EQUAL resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 298 between rule 162 and token '<' resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 162 and token '>' resolved as shift.
Conflict in state 298 between rule 162 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 162 and token T_SL resolved as shift.
Conflict in state 298 between rule 162 and token T_SR resolved as shift.
Conflict in state 298 between rule 162 and token '+' resolved as shift.
Conflict in state 298 between rule 162 and token '-' resolved as shift.
Conflict in state 298 between rule 162 and token '.' resolved as shift.
Conflict in state 298 between rule 162 and token '*' resolved as shift.
Conflict in state 298 between rule 162 and token '/' resolved as shift.
Conflict in state 298 between rule 162 and token '%' resolved as shift.
Conflict in state 299 between rule 163 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 299 between rule 163 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 299 between rule 163 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 299 between rule 163 and token '?' resolved as shift.
Conflict in state 299 between rule 163 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 299 between rule 163 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 299 between rule 163 and token '|' resolved as shift.
Conflict in state 299 between rule 163 and token '^' resolved as shift.
Conflict in state 299 between rule 163 and token '&' resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_EQUAL resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 299 between rule 163 and token '<' resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 163 and token '>' resolved as shift.
Conflict in state 299 between rule 163 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 163 and token T_SL resolved as shift.
Conflict in state 299 between rule 163 and token T_SR resolved as shift.
Conflict in state 299 between rule 163 and token '+' resolved as shift.
Conflict in state 299 between rule 163 and token '-' resolved as shift.
Conflict in state 299 between rule 163 and token '.' resolved as shift.
Conflict in state 299 between rule 163 and token '*' resolved as shift.
Conflict in state 299 between rule 163 and token '/' resolved as shift.
Conflict in state 299 between rule 163 and token '%' resolved as shift.
Conflict in state 300 between rule 164 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 300 between rule 164 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 300 between rule 164 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 300 between rule 164 and token '?' resolved as shift.
Conflict in state 300 between rule 164 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 300 between rule 164 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 300 between rule 164 and token '|' resolved as shift.
Conflict in state 300 between rule 164 and token '^' resolved as shift.
Conflict in state 300 between rule 164 and token '&' resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_EQUAL resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 300 between rule 164 and token '<' resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 164 and token '>' resolved as shift.
Conflict in state 300 between rule 164 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 164 and token T_SL resolved as shift.
Conflict in state 300 between rule 164 and token T_SR resolved as shift.
Conflict in state 300 between rule 164 and token '+' resolved as shift.
Conflict in state 300 between rule 164 and token '-' resolved as shift.
Conflict in state 300 between rule 164 and token '.' resolved as shift.
Conflict in state 300 between rule 164 and token '*' resolved as shift.
Conflict in state 300 between rule 164 and token '/' resolved as shift.
Conflict in state 300 between rule 164 and token '%' resolved as shift.
Conflict in state 301 between rule 165 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 301 between rule 165 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 301 between rule 165 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 301 between rule 165 and token '?' resolved as shift.
Conflict in state 301 between rule 165 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 301 between rule 165 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 301 between rule 165 and token '|' resolved as shift.
Conflict in state 301 between rule 165 and token '^' resolved as shift.
Conflict in state 301 between rule 165 and token '&' resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_EQUAL resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 301 between rule 165 and token '<' resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 165 and token '>' resolved as shift.
Conflict in state 301 between rule 165 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 165 and token T_SL resolved as shift.
Conflict in state 301 between rule 165 and token T_SR resolved as shift.
Conflict in state 301 between rule 165 and token '+' resolved as shift.
Conflict in state 301 between rule 165 and token '-' resolved as shift.
Conflict in state 301 between rule 165 and token '.' resolved as shift.
Conflict in state 301 between rule 165 and token '*' resolved as shift.
Conflict in state 301 between rule 165 and token '/' resolved as shift.
Conflict in state 301 between rule 165 and token '%' resolved as shift.
Conflict in state 302 between rule 166 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 166 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 302 between rule 166 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 166 and token '?' resolved as shift.
Conflict in state 302 between rule 166 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 302 between rule 166 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 302 between rule 166 and token '|' resolved as shift.
Conflict in state 302 between rule 166 and token '^' resolved as shift.
Conflict in state 302 between rule 166 and token '&' resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_EQUAL resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 302 between rule 166 and token '<' resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 166 and token '>' resolved as shift.
Conflict in state 302 between rule 166 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 166 and token T_SL resolved as shift.
Conflict in state 302 between rule 166 and token T_SR resolved as shift.
Conflict in state 302 between rule 166 and token '+' resolved as shift.
Conflict in state 302 between rule 166 and token '-' resolved as shift.
Conflict in state 302 between rule 166 and token '.' resolved as shift.
Conflict in state 302 between rule 166 and token '*' resolved as shift.
Conflict in state 302 between rule 166 and token '/' resolved as shift.
Conflict in state 302 between rule 166 and token '%' resolved as shift.
Conflict in state 303 between rule 167 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 303 between rule 167 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 303 between rule 167 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 303 between rule 167 and token '?' resolved as shift.
Conflict in state 303 between rule 167 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 303 between rule 167 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 303 between rule 167 and token '|' resolved as shift.
Conflict in state 303 between rule 167 and token '^' resolved as shift.
Conflict in state 303 between rule 167 and token '&' resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_EQUAL resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 303 between rule 167 and token '<' resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 167 and token '>' resolved as shift.
Conflict in state 303 between rule 167 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 303 between rule 167 and token T_SL resolved as shift.
Conflict in state 303 between rule 167 and token T_SR resolved as shift.
Conflict in state 303 between rule 167 and token '+' resolved as shift.
Conflict in state 303 between rule 167 and token '-' resolved as shift.
Conflict in state 303 between rule 167 and token '.' resolved as shift.
Conflict in state 303 between rule 167 and token '*' resolved as shift.
Conflict in state 303 between rule 167 and token '/' resolved as shift.
Conflict in state 303 between rule 167 and token '%' resolved as shift.
Conflict in state 304 between rule 168 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 304 between rule 168 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 304 between rule 168 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 304 between rule 168 and token '?' resolved as shift.
Conflict in state 304 between rule 168 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 304 between rule 168 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 304 between rule 168 and token '|' resolved as shift.
Conflict in state 304 between rule 168 and token '^' resolved as shift.
Conflict in state 304 between rule 168 and token '&' resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_EQUAL resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 304 between rule 168 and token '<' resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 168 and token '>' resolved as shift.
Conflict in state 304 between rule 168 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 304 between rule 168 and token T_SL resolved as shift.
Conflict in state 304 between rule 168 and token T_SR resolved as shift.
Conflict in state 304 between rule 168 and token '+' resolved as shift.
Conflict in state 304 between rule 168 and token '-' resolved as shift.
Conflict in state 304 between rule 168 and token '.' resolved as shift.
Conflict in state 304 between rule 168 and token '*' resolved as shift.
Conflict in state 304 between rule 168 and token '/' resolved as shift.
Conflict in state 304 between rule 168 and token '%' resolved as shift.
Conflict in state 305 between rule 169 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 305 between rule 169 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 305 between rule 169 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 169 and token '?' resolved as shift.
Conflict in state 305 between rule 169 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 305 between rule 169 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 305 between rule 169 and token '|' resolved as shift.
Conflict in state 305 between rule 169 and token '^' resolved as shift.
Conflict in state 305 between rule 169 and token '&' resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_EQUAL resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 305 between rule 169 and token '<' resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 169 and token '>' resolved as shift.
Conflict in state 305 between rule 169 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 305 between rule 169 and token T_SL resolved as shift.
Conflict in state 305 between rule 169 and token T_SR resolved as shift.
Conflict in state 305 between rule 169 and token '+' resolved as shift.
Conflict in state 305 between rule 169 and token '-' resolved as shift.
Conflict in state 305 between rule 169 and token '.' resolved as shift.
Conflict in state 305 between rule 169 and token '*' resolved as shift.
Conflict in state 305 between rule 169 and token '/' resolved as shift.
Conflict in state 305 between rule 169 and token '%' resolved as shift.
Conflict in state 306 between rule 170 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 306 between rule 170 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 306 between rule 170 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 170 and token '?' resolved as shift.
Conflict in state 306 between rule 170 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 306 between rule 170 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 306 between rule 170 and token '|' resolved as shift.
Conflict in state 306 between rule 170 and token '^' resolved as shift.
Conflict in state 306 between rule 170 and token '&' resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_EQUAL resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 306 between rule 170 and token '<' resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 306 between rule 170 and token '>' resolved as shift.
Conflict in state 306 between rule 170 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 306 between rule 170 and token T_SL resolved as shift.
Conflict in state 306 between rule 170 and token T_SR resolved as shift.
Conflict in state 306 between rule 170 and token '+' resolved as shift.
Conflict in state 306 between rule 170 and token '-' resolved as shift.
Conflict in state 306 between rule 170 and token '.' resolved as shift.
Conflict in state 306 between rule 170 and token '*' resolved as shift.
Conflict in state 306 between rule 170 and token '/' resolved as shift.
Conflict in state 306 between rule 170 and token '%' resolved as shift.
Conflict in state 368 between rule 180 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 368 between rule 180 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 368 between rule 180 and token T_LOGICAL_AND resolved as shift.
Conflict in state 368 between rule 180 and token '?' resolved as shift.
Conflict in state 368 between rule 180 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 368 between rule 180 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 368 between rule 180 and token '|' resolved as shift.
Conflict in state 368 between rule 180 and token '^' resolved as shift.
Conflict in state 368 between rule 180 and token '&' resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_EQUAL resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 368 between rule 180 and token '<' resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 368 between rule 180 and token '>' resolved as shift.
Conflict in state 368 between rule 180 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 368 between rule 180 and token T_SL resolved as shift.
Conflict in state 368 between rule 180 and token T_SR resolved as shift.
Conflict in state 368 between rule 180 and token '+' resolved as shift.
Conflict in state 368 between rule 180 and token '-' resolved as shift.
Conflict in state 368 between rule 180 and token '.' resolved as shift.
Conflict in state 368 between rule 180 and token '*' resolved as shift.
Conflict in state 368 between rule 180 and token '/' resolved as shift.
Conflict in state 368 between rule 180 and token '%' resolved as shift.
Conflict in state 369 between rule 182 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 369 between rule 182 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 369 between rule 182 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 369 between rule 182 and token '?' resolved as shift.
Conflict in state 369 between rule 182 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 369 between rule 182 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 369 between rule 182 and token '|' resolved as shift.
Conflict in state 369 between rule 182 and token '^' resolved as shift.
Conflict in state 369 between rule 182 and token '&' resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_EQUAL resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 369 between rule 182 and token '<' resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 369 between rule 182 and token '>' resolved as shift.
Conflict in state 369 between rule 182 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 369 between rule 182 and token T_SL resolved as shift.
Conflict in state 369 between rule 182 and token T_SR resolved as shift.
Conflict in state 369 between rule 182 and token '+' resolved as shift.
Conflict in state 369 between rule 182 and token '-' resolved as shift.
Conflict in state 369 between rule 182 and token '.' resolved as shift.
Conflict in state 369 between rule 182 and token '*' resolved as shift.
Conflict in state 369 between rule 182 and token '/' resolved as shift.
Conflict in state 369 between rule 182 and token '%' resolved as shift.
Conflict in state 371 between rule 176 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 371 between rule 176 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 371 between rule 176 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 371 between rule 176 and token '?' resolved as reduce.
Conflict in state 371 between rule 176 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 371 between rule 176 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 371 between rule 176 and token '|' resolved as shift.
Conflict in state 371 between rule 176 and token '^' resolved as shift.
Conflict in state 371 between rule 176 and token '&' resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_EQUAL resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 371 between rule 176 and token '<' resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 371 between rule 176 and token '>' resolved as shift.
Conflict in state 371 between rule 176 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 371 between rule 176 and token T_SL resolved as shift.
Conflict in state 371 between rule 176 and token T_SR resolved as shift.
Conflict in state 371 between rule 176 and token '+' resolved as shift.
Conflict in state 371 between rule 176 and token '-' resolved as shift.
Conflict in state 371 between rule 176 and token '.' resolved as shift.
Conflict in state 371 between rule 176 and token '*' resolved as shift.
Conflict in state 371 between rule 176 and token '/' resolved as shift.
Conflict in state 371 between rule 176 and token '%' resolved as shift.
Conflict in state 372 between rule 178 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 372 between rule 178 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 372 between rule 178 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 372 between rule 178 and token '?' resolved as reduce.
Conflict in state 372 between rule 178 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 372 between rule 178 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 372 between rule 178 and token '|' resolved as shift.
Conflict in state 372 between rule 178 and token '^' resolved as shift.
Conflict in state 372 between rule 178 and token '&' resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_EQUAL resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 372 between rule 178 and token '<' resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 178 and token '>' resolved as shift.
Conflict in state 372 between rule 178 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 372 between rule 178 and token T_SL resolved as shift.
Conflict in state 372 between rule 178 and token T_SR resolved as shift.
Conflict in state 372 between rule 178 and token '+' resolved as shift.
Conflict in state 372 between rule 178 and token '-' resolved as shift.
Conflict in state 372 between rule 178 and token '.' resolved as shift.
Conflict in state 372 between rule 178 and token '*' resolved as shift.
Conflict in state 372 between rule 178 and token '/' resolved as shift.
Conflict in state 372 between rule 178 and token '%' resolved as shift.
Conflict in state 519 between rule 154 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 519 between rule 154 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 519 between rule 154 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 519 between rule 154 and token '?' resolved as shift.
Conflict in state 519 between rule 154 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 519 between rule 154 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 519 between rule 154 and token '|' resolved as shift.
Conflict in state 519 between rule 154 and token '^' resolved as shift.
Conflict in state 519 between rule 154 and token '&' resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_EQUAL resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 519 between rule 154 and token '<' resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 519 between rule 154 and token '>' resolved as shift.
Conflict in state 519 between rule 154 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 519 between rule 154 and token T_SL resolved as shift.
Conflict in state 519 between rule 154 and token T_SR resolved as shift.
Conflict in state 519 between rule 154 and token '+' resolved as shift.
Conflict in state 519 between rule 154 and token '-' resolved as shift.
Conflict in state 519 between rule 154 and token '.' resolved as shift.
Conflict in state 519 between rule 154 and token '*' resolved as shift.
Conflict in state 519 between rule 154 and token '/' resolved as shift.
Conflict in state 519 between rule 154 and token '%' resolved as shift.
Conflict in state 524 between rule 210 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 524 between rule 210 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 524 between rule 210 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 524 between rule 210 and token '?' resolved as reduce.
Conflict in state 524 between rule 210 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 524 between rule 210 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 524 between rule 210 and token '|' resolved as shift.
Conflict in state 524 between rule 210 and token '^' resolved as shift.
Conflict in state 524 between rule 210 and token '&' resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_EQUAL resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 524 between rule 210 and token '<' resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 524 between rule 210 and token '>' resolved as shift.
Conflict in state 524 between rule 210 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 524 between rule 210 and token T_SL resolved as shift.
Conflict in state 524 between rule 210 and token T_SR resolved as shift.
Conflict in state 524 between rule 210 and token '+' resolved as shift.
Conflict in state 524 between rule 210 and token '-' resolved as shift.
Conflict in state 524 between rule 210 and token '.' resolved as shift.
Conflict in state 524 between rule 210 and token '*' resolved as shift.
Conflict in state 524 between rule 210 and token '/' resolved as shift.
Conflict in state 524 between rule 210 and token '%' resolved as shift.
State 248 contains 2 shift/reduce conflicts.
State 529 contains 2 shift/reduce conflicts.

Grammar
rule 1    start -> top_statement_list
rule 2    @1 ->		/* empty */
rule 3    top_statement_list -> top_statement_list @1 top_statement
rule 4    top_statement_list ->		/* empty */
rule 5    top_statement -> statement
rule 6    top_statement -> declaration_statement
rule 7    @2 ->		/* empty */
rule 8    inner_statement_list -> inner_statement_list @2 inner_statement
rule 9    inner_statement_list ->		/* empty */
rule 10   inner_statement -> statement
rule 11   inner_statement -> declaration_statement
rule 12   statement -> unticked_statement
rule 13   unticked_statement -> '{' inner_statement_list '}'
rule 14   @3 ->		/* empty */
rule 15   @4 ->		/* empty */
rule 16   unticked_statement -> T_IF '(' expr ')' @3 statement @4 elseif_list else_single
rule 17   @5 ->		/* empty */
rule 18   @6 ->		/* empty */
rule 19   unticked_statement -> T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'
rule 20   @7 ->		/* empty */
rule 21   @8 ->		/* empty */
rule 22   unticked_statement -> T_WHILE '(' @7 expr ')' @8 while_statement
rule 23   @9 ->		/* empty */
rule 24   @10 ->		/* empty */
rule 25   unticked_statement -> T_DO @9 statement T_WHILE '(' @10 expr ')' ';'
rule 26   @11 ->		/* empty */
rule 27   @12 ->		/* empty */
rule 28   @13 ->		/* empty */
rule 29   unticked_statement -> T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement
rule 30   @14 ->		/* empty */
rule 31   unticked_statement -> T_SWITCH '(' expr ')' @14 switch_case_list
rule 32   unticked_statement -> T_BREAK ';'
rule 33   unticked_statement -> T_BREAK expr ';'
rule 34   unticked_statement -> T_CONTINUE ';'
rule 35   unticked_statement -> T_CONTINUE expr ';'
rule 36   unticked_statement -> T_RETURN ';'
rule 37   unticked_statement -> T_RETURN expr_without_variable ';'
rule 38   unticked_statement -> T_RETURN cvar ';'
rule 39   unticked_statement -> T_GLOBAL global_var_list ';'
rule 40   unticked_statement -> T_STATIC static_var_list ';'
rule 41   unticked_statement -> T_ECHO echo_expr_list ';'
rule 42   unticked_statement -> T_INLINE_HTML
rule 43   unticked_statement -> expr ';'
rule 44   unticked_statement -> T_REQUIRE expr ';'
rule 45   unticked_statement -> T_REQUIRE_ONCE use_filename ';'
rule 46   unticked_statement -> T_USE use_filename ';'
rule 47   unticked_statement -> T_UNSET '(' unset_variables ')' ';'
rule 48   @15 ->		/* empty */
rule 49   @16 ->		/* empty */
rule 50   unticked_statement -> T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement
rule 51   @17 ->		/* empty */
rule 52   unticked_statement -> T_DECLARE @17 '(' declare_list ')' declare_statement
rule 53   unticked_statement -> ';'
rule 54   unset_variables -> unset_variable
rule 55   unset_variables -> unset_variables ',' unset_variable
rule 56   unset_variable -> cvar
rule 57   use_filename -> T_CONSTANT_ENCAPSED_STRING
rule 58   use_filename -> '(' T_CONSTANT_ENCAPSED_STRING ')'
rule 59   declaration_statement -> unticked_declaration_statement
rule 60   @18 ->		/* empty */
rule 61   @19 ->		/* empty */
rule 62   unticked_declaration_statement -> T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'
rule 63   @20 ->		/* empty */
rule 64   @21 ->		/* empty */
rule 65   unticked_declaration_statement -> T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'
rule 66   @22 ->		/* empty */
rule 67   unticked_declaration_statement -> T_CLASS T_STRING @22 '{' class_statement_list '}'
rule 68   @23 ->		/* empty */
rule 69   unticked_declaration_statement -> T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}'
rule 70   foreach_optional_arg ->		/* empty */
rule 71   foreach_optional_arg -> T_DOUBLE_ARROW w_cvar
rule 72   for_statement -> statement
rule 73   for_statement -> ':' inner_statement_list T_ENDFOR ';'
rule 74   foreach_statement -> statement
rule 75   foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';'
rule 76   declare_statement -> statement
rule 77   declare_statement -> ':' inner_statement_list T_ENDDECLARE ';'
rule 78   declare_list -> T_STRING '=' static_scalar
rule 79   declare_list -> declare_list ',' T_STRING '=' static_scalar
rule 80   switch_case_list -> '{' case_list '}'
rule 81   switch_case_list -> '{' ';' case_list '}'
rule 82   switch_case_list -> ':' case_list T_ENDSWITCH ';'
rule 83   switch_case_list -> ':' ';' case_list T_ENDSWITCH ';'
rule 84   case_list ->		/* empty */
rule 85   @24 ->		/* empty */
rule 86   case_list -> case_list T_CASE expr case_separator @24 inner_statement_list
rule 87   @25 ->		/* empty */
rule 88   case_list -> case_list T_DEFAULT case_separator @25 inner_statement_list
rule 89   case_separator -> ':'
rule 90   case_separator -> ';'
rule 91   while_statement -> statement
rule 92   while_statement -> ':' inner_statement_list T_ENDWHILE ';'
rule 93   elseif_list ->		/* empty */
rule 94   @26 ->		/* empty */
rule 95   elseif_list -> elseif_list T_ELSEIF '(' expr ')' @26 statement
rule 96   new_elseif_list ->		/* empty */
rule 97   @27 ->		/* empty */
rule 98   new_elseif_list -> new_elseif_list T_ELSEIF '(' expr ')' ':' @27 inner_statement_list
rule 99   else_single ->		/* empty */
rule 100  else_single -> T_ELSE statement
rule 101  new_else_single ->		/* empty */
rule 102  new_else_single -> T_ELSE ':' inner_statement_list
rule 103  parameter_list -> non_empty_parameter_list
rule 104  parameter_list ->		/* empty */
rule 105  non_empty_parameter_list -> T_VARIABLE
rule 106  non_empty_parameter_list -> '&' T_VARIABLE
rule 107  non_empty_parameter_list -> T_CONST T_VARIABLE
rule 108  non_empty_parameter_list -> T_VARIABLE '=' static_scalar
rule 109  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE
rule 110  non_empty_parameter_list -> non_empty_parameter_list ',' '&' T_VARIABLE
rule 111  non_empty_parameter_list -> non_empty_parameter_list ',' T_CONST T_VARIABLE
rule 112  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE '=' static_scalar
rule 113  function_call_parameter_list -> non_empty_function_call_parameter_list
rule 114  function_call_parameter_list ->		/* empty */
rule 115  non_empty_function_call_parameter_list -> expr_without_variable
rule 116  non_empty_function_call_parameter_list -> cvar
rule 117  non_empty_function_call_parameter_list -> '&' w_cvar
rule 118  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' expr_without_variable
rule 119  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' cvar
rule 120  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' '&' w_cvar
rule 121  global_var_list -> global_var_list ',' global_var
rule 122  global_var_list -> global_var
rule 123  global_var -> T_VARIABLE
rule 124  global_var -> '$' r_cvar
rule 125  global_var -> '$' '{' expr '}'
rule 126  static_var_list -> static_var_list ',' T_VARIABLE
rule 127  static_var_list -> static_var_list ',' T_VARIABLE '=' static_scalar
rule 128  static_var_list -> T_VARIABLE
rule 129  static_var_list -> T_VARIABLE '=' static_scalar
rule 130  class_statement_list -> class_statement_list class_statement
rule 131  class_statement_list ->		/* empty */
rule 132  class_statement -> T_VAR class_variable_decleration ';'
rule 133  @28 ->		/* empty */
rule 134  @29 ->		/* empty */
rule 135  class_statement -> T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
rule 136  @30 ->		/* empty */
rule 137  @31 ->		/* empty */
rule 138  class_statement -> T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'
rule 139  is_reference ->		/* empty */
rule 140  is_reference -> '&'
rule 141  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE
rule 142  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE '=' static_scalar
rule 143  class_variable_decleration -> T_VARIABLE
rule 144  class_variable_decleration -> T_VARIABLE '=' static_scalar
rule 145  echo_expr_list ->		/* empty */
rule 146  echo_expr_list -> echo_expr_list ',' expr
rule 147  echo_expr_list -> expr
rule 148  for_expr ->		/* empty */
rule 149  for_expr -> non_empty_for_expr
rule 150  @32 ->		/* empty */
rule 151  non_empty_for_expr -> non_empty_for_expr ',' @32 expr
rule 152  non_empty_for_expr -> expr
rule 153  @33 ->		/* empty */
rule 154  expr_without_variable -> T_LIST '(' @33 assignment_list ')' '=' expr
rule 155  expr_without_variable -> cvar '=' expr
rule 156  expr_without_variable -> cvar '=' '&' w_cvar
rule 157  expr_without_variable -> cvar '=' '&' function_call
rule 158  @34 ->		/* empty */
rule 159  expr_without_variable -> T_NEW class_name @34 ctor_arguments
rule 160  expr_without_variable -> cvar T_PLUS_EQUAL expr
rule 161  expr_without_variable -> cvar T_MINUS_EQUAL expr
rule 162  expr_without_variable -> cvar T_MUL_EQUAL expr
rule 163  expr_without_variable -> cvar T_DIV_EQUAL expr
rule 164  expr_without_variable -> cvar T_CONCAT_EQUAL expr
rule 165  expr_without_variable -> cvar T_MOD_EQUAL expr
rule 166  expr_without_variable -> cvar T_AND_EQUAL expr
rule 167  expr_without_variable -> cvar T_OR_EQUAL expr
rule 168  expr_without_variable -> cvar T_XOR_EQUAL expr
rule 169  expr_without_variable -> cvar T_SL_EQUAL expr
rule 170  expr_without_variable -> cvar T_SR_EQUAL expr
rule 171  expr_without_variable -> rw_cvar T_INC
rule 172  expr_without_variable -> T_INC rw_cvar
rule 173  expr_without_variable -> rw_cvar T_DEC
rule 174  expr_without_variable -> T_DEC rw_cvar
rule 175  @35 ->		/* empty */
rule 176  expr_without_variable -> expr T_BOOLEAN_OR @35 expr
rule 177  @36 ->		/* empty */
rule 178  expr_without_variable -> expr T_BOOLEAN_AND @36 expr
rule 179  @37 ->		/* empty */
rule 180  expr_without_variable -> expr T_LOGICAL_OR @37 expr
rule 181  @38 ->		/* empty */
rule 182  expr_without_variable -> expr T_LOGICAL_AND @38 expr
rule 183  expr_without_variable -> expr T_LOGICAL_XOR expr
rule 184  expr_without_variable -> expr '|' expr
rule 185  expr_without_variable -> expr '&' expr
rule 186  expr_without_variable -> expr '^' expr
rule 187  expr_without_variable -> expr '.' expr
rule 188  expr_without_variable -> expr '+' expr
rule 189  expr_without_variable -> expr '-' expr
rule 190  expr_without_variable -> expr '*' expr
rule 191  expr_without_variable -> expr '/' expr
rule 192  expr_without_variable -> expr '%' expr
rule 193  expr_without_variable -> expr T_SL expr
rule 194  expr_without_variable -> expr T_SR expr
rule 195  expr_without_variable -> '+' expr
rule 196  expr_without_variable -> '-' expr
rule 197  expr_without_variable -> '!' expr
rule 198  expr_without_variable -> '~' expr
rule 199  expr_without_variable -> expr T_IS_IDENTICAL expr
rule 200  expr_without_variable -> expr T_IS_NOT_IDENTICAL expr
rule 201  expr_without_variable -> expr T_IS_EQUAL expr
rule 202  expr_without_variable -> expr T_IS_NOT_EQUAL expr
rule 203  expr_without_variable -> expr '<' expr
rule 204  expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr
rule 205  expr_without_variable -> expr '>' expr
rule 206  expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr
rule 207  expr_without_variable -> '(' expr ')'
rule 208  @39 ->		/* empty */
rule 209  @40 ->		/* empty */
rule 210  expr_without_variable -> expr '?' @39 expr ':' @40 expr
rule 211  expr_without_variable -> function_call
rule 212  expr_without_variable -> internal_functions_in_yacc
rule 213  expr_without_variable -> T_INT_CAST expr
rule 214  expr_without_variable -> T_DOUBLE_CAST expr
rule 215  expr_without_variable -> T_STRING_CAST expr
rule 216  expr_without_variable -> T_ARRAY_CAST expr
rule 217  expr_without_variable -> T_OBJECT_CAST expr
rule 218  expr_without_variable -> T_BOOL_CAST expr
rule 219  expr_without_variable -> T_UNSET_CAST expr
rule 220  expr_without_variable -> T_EXIT exit_expr
rule 221  @41 ->		/* empty */
rule 222  expr_without_variable -> '@' @41 expr
rule 223  expr_without_variable -> scalar
rule 224  expr_without_variable -> T_ARRAY '(' array_pair_list ')'
rule 225  expr_without_variable -> '`' encaps_list '`'
rule 226  expr_without_variable -> T_PRINT expr
rule 227  @42 ->		/* empty */
rule 228  function_call -> T_STRING '(' @42 function_call_parameter_list ')'
rule 229  @43 ->		/* empty */
rule 230  function_call -> r_cvar '(' @43 function_call_parameter_list ')'
rule 231  @44 ->		/* empty */
rule 232  function_call -> T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'
rule 233  exit_expr ->		/* empty */
rule 234  exit_expr -> '(' ')'
rule 235  exit_expr -> '(' expr ')'
rule 236  ctor_arguments ->		/* empty */
rule 237  ctor_arguments -> '(' function_call_parameter_list ')'
rule 238  class_name -> T_STRING
rule 239  class_name -> r_cvar
rule 240  common_scalar -> T_LNUMBER
rule 241  common_scalar -> T_DNUMBER
rule 242  common_scalar -> T_CONSTANT_ENCAPSED_STRING
rule 243  common_scalar -> T_LINE
rule 244  common_scalar -> T_FILE
rule 245  static_scalar -> common_scalar
rule 246  static_scalar -> T_STRING
rule 247  static_scalar -> '+' static_scalar
rule 248  static_scalar -> '-' static_scalar
rule 249  static_scalar -> T_ARRAY '(' static_array_pair_list ')'
rule 250  scalar -> T_STRING
rule 251  scalar -> T_STRING_VARNAME
rule 252  scalar -> common_scalar
rule 253  scalar -> '\"' encaps_list '\"'
rule 254  scalar -> '\'' encaps_list '\''
rule 255  scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC
rule 256  static_array_pair_list ->		/* empty */
rule 257  static_array_pair_list -> non_empty_static_array_pair_list possible_comma
rule 258  possible_comma ->		/* empty */
rule 259  possible_comma -> ','
rule 260  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
rule 261  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar
rule 262  non_empty_static_array_pair_list -> static_scalar T_DOUBLE_ARROW static_scalar
rule 263  non_empty_static_array_pair_list -> static_scalar
rule 264  expr -> r_cvar
rule 265  expr -> expr_without_variable
rule 266  r_cvar -> cvar
rule 267  w_cvar -> cvar
rule 268  rw_cvar -> cvar
rule 269  cvar -> cvar_without_objects
rule 270  @45 ->		/* empty */
rule 271  cvar -> cvar_without_objects T_OBJECT_OPERATOR @45 ref_list
rule 272  cvar_without_objects -> reference_variable
rule 273  cvar_without_objects -> simple_indirect_reference reference_variable
rule 274  reference_variable -> reference_variable '[' dim_offset ']'
rule 275  reference_variable -> reference_variable '{' expr '}'
rule 276  reference_variable -> compound_variable
rule 277  compound_variable -> T_VARIABLE
rule 278  compound_variable -> '$' '{' expr '}'
rule 279  dim_offset ->		/* empty */
rule 280  dim_offset -> expr
rule 281  ref_list -> object_property
rule 282  @46 ->		/* empty */
rule 283  ref_list -> ref_list T_OBJECT_OPERATOR @46 object_property
rule 284  object_property -> object_dim_list
rule 285  @47 ->		/* empty */
rule 286  object_property -> cvar_without_objects @47
rule 287  object_dim_list -> object_dim_list '[' dim_offset ']'
rule 288  object_dim_list -> object_dim_list '{' expr '}'
rule 289  object_dim_list -> variable_name
rule 290  variable_name -> T_STRING
rule 291  variable_name -> '{' expr '}'
rule 292  simple_indirect_reference -> '$'
rule 293  simple_indirect_reference -> simple_indirect_reference '$'
rule 294  assignment_list -> assignment_list ',' assignment_list_element
rule 295  assignment_list -> assignment_list_element
rule 296  assignment_list_element -> cvar
rule 297  @48 ->		/* empty */
rule 298  assignment_list_element -> T_LIST '(' @48 assignment_list ')'
rule 299  assignment_list_element ->		/* empty */
rule 300  array_pair_list ->		/* empty */
rule 301  array_pair_list -> non_empty_array_pair_list possible_comma
rule 302  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
rule 303  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr
rule 304  non_empty_array_pair_list -> expr T_DOUBLE_ARROW expr
rule 305  non_empty_array_pair_list -> expr
rule 306  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar
rule 307  non_empty_array_pair_list -> non_empty_array_pair_list ',' '&' w_cvar
rule 308  non_empty_array_pair_list -> expr T_DOUBLE_ARROW '&' w_cvar
rule 309  non_empty_array_pair_list -> '&' w_cvar
rule 310  encaps_list -> encaps_list encaps_var
rule 311  encaps_list -> encaps_list T_STRING
rule 312  encaps_list -> encaps_list T_NUM_STRING
rule 313  encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE
rule 314  encaps_list -> encaps_list T_CHARACTER
rule 315  encaps_list -> encaps_list T_BAD_CHARACTER
rule 316  encaps_list -> encaps_list '['
rule 317  encaps_list -> encaps_list ']'
rule 318  encaps_list -> encaps_list '{'
rule 319  encaps_list -> encaps_list '}'
rule 320  encaps_list -> encaps_list T_OBJECT_OPERATOR
rule 321  encaps_list ->		/* empty */
rule 322  encaps_var -> T_VARIABLE
rule 323  @49 ->		/* empty */
rule 324  encaps_var -> T_VARIABLE '[' @49 encaps_var_offset ']'
rule 325  encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING
rule 326  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}'
rule 327  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
rule 328  encaps_var -> T_CURLY_OPEN cvar '}'
rule 329  encaps_var_offset -> T_STRING
rule 330  encaps_var_offset -> T_NUM_STRING
rule 331  encaps_var_offset -> T_VARIABLE
rule 332  internal_functions_in_yacc -> T_ISSET '(' cvar ')'
rule 333  internal_functions_in_yacc -> T_EMPTY '(' cvar ')'
rule 334  internal_functions_in_yacc -> T_INCLUDE expr
rule 335  internal_functions_in_yacc -> T_INCLUDE_ONCE expr
rule 336  internal_functions_in_yacc -> T_EVAL '(' expr ')'

Terminals, with rules where they appear

$ (-1)
'!' (33) 197
'\"' (34) 253
'$' (36) 124 125 278 292 293
'%' (37) 192
'&' (38) 106 110 117 120 140 156 157 185 306 307 308 309
'\'' (39) 254
'(' (40) 16 19 22 25 29 31 47 50 52 58 62 65 95 98 135 138 154 207
    224 228 230 232 234 235 237 249 298 332 333 336
')' (41) 16 19 22 25 29 31 47 50 52 58 62 65 95 98 135 138 154 207
    224 228 230 232 234 235 237 249 298 332 333 336
'*' (42) 190
'+' (43) 188 195 247
',' (44) 55 79 109 110 111 112 118 119 120 121 126 127 141 142 146
    151 259 260 261 294 302 303 306 307
'-' (45) 189 196 248
'.' (46) 187
'/' (47) 191
':' (58) 19 73 75 77 82 83 89 92 98 102 210
';' (59) 19 25 29 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 53 65
    73 75 77 81 82 83 90 92 132 138
'<' (60) 203
'=' (61) 78 79 108 112 127 129 142 144 154 155 156 157
'>' (62) 205
'?' (63) 210
'@' (64) 222
'[' (91) 274 287 316 324 327
']' (93) 274 287 317 324 327
'^' (94) 186
'`' (96) 225
'{' (123) 13 62 67 69 80 81 125 135 275 278 288 291 318
'|' (124) 184
'}' (125) 13 62 67 69 80 81 125 135 275 278 288 291 319 326 327 328
'~' (126) 198
error (256)
T_INCLUDE (257) 334
T_INCLUDE_ONCE (258) 335
T_EVAL (259) 336
T_LOGICAL_OR (260) 180
T_LOGICAL_XOR (261) 183
T_LOGICAL_AND (262) 182
T_PRINT (263) 226
T_PLUS_EQUAL (264) 160
T_MINUS_EQUAL (265) 161
T_MUL_EQUAL (266) 162
T_DIV_EQUAL (267) 163
T_CONCAT_EQUAL (268) 164
T_MOD_EQUAL (269) 165
T_AND_EQUAL (270) 166
T_OR_EQUAL (271) 167
T_XOR_EQUAL (272) 168
T_SL_EQUAL (273) 169
T_SR_EQUAL (274) 170
T_BOOLEAN_OR (275) 176
T_BOOLEAN_AND (276) 178
T_IS_EQUAL (277) 201
T_IS_NOT_EQUAL (278) 202
T_IS_IDENTICAL (279) 199
T_IS_NOT_IDENTICAL (280) 200
T_IS_SMALLER_OR_EQUAL (281) 204
T_IS_GREATER_OR_EQUAL (282) 206
T_SL (283) 193
T_SR (284) 194
T_INC (285) 171 172
T_DEC (286) 173 174
T_INT_CAST (287) 213
T_DOUBLE_CAST (288) 214
T_STRING_CAST (289) 215
T_ARRAY_CAST (290) 216
T_OBJECT_CAST (291) 217
T_BOOL_CAST (292) 218
T_UNSET_CAST (293) 219
T_NEW (294) 159
T_EXIT (295) 220
T_IF (296) 16 19
T_ELSEIF (297) 95 98
T_ELSE (298) 100 102
T_ENDIF (299) 19
T_LNUMBER (300) 240
T_DNUMBER (301) 241
T_STRING (302) 62 65 67 69 78 79 135 138 228 232 238 246 250 290 311
    325 329
T_STRING_VARNAME (303) 251 327
T_VARIABLE (304) 105 106 107 108 109 110 111 112 123 126 127 128 129
    141 142 143 144 277 322 324 325 331
T_NUM_STRING (305) 312 330
T_INLINE_HTML (306) 42
T_CHARACTER (307) 314
T_BAD_CHARACTER (308) 315
T_ENCAPSED_AND_WHITESPACE (309) 313
T_CONSTANT_ENCAPSED_STRING (310) 57 58 242
T_ECHO (311) 41
T_DO (312) 25
T_WHILE (313) 22 25
T_ENDWHILE (314) 92
T_FOR (315) 29
T_ENDFOR (316) 73
T_FOREACH (317) 50
T_ENDFOREACH (318) 75
T_DECLARE (319) 52
T_ENDDECLARE (320) 77
T_AS (321) 50
T_SWITCH (322) 31
T_ENDSWITCH (323) 82 83
T_CASE (324) 86
T_DEFAULT (325) 88
T_BREAK (326) 32 33
T_CONTINUE (327) 34 35
T_OLD_FUNCTION (328) 65 138
T_FUNCTION (329) 62 135
T_CONST (330) 107 111
T_RETURN (331) 36 37 38
T_REQUIRE (332) 44
T_REQUIRE_ONCE (333) 45
T_USE (334) 46
T_GLOBAL (335) 39
T_STATIC (336) 40
T_VAR (337) 132
T_UNSET (338) 47
T_ISSET (339) 332
T_EMPTY (340) 333
T_CLASS (341) 67 69
T_EXTENDS (342) 69
T_OBJECT_OPERATOR (343) 271 283 320 325
T_DOUBLE_ARROW (344) 71 260 262 302 304 306 308
T_LIST (345) 154 298
T_ARRAY (346) 224 249
T_LINE (347) 243
T_FILE (348) 244
T_COMMENT (349)
T_ML_COMMENT (350)
T_OPEN_TAG (351)
T_OPEN_TAG_WITH_ECHO (352)
T_CLOSE_TAG (353)
T_WHITESPACE (354)
T_START_HEREDOC (355) 255
T_END_HEREDOC (356) 255
T_DOLLAR_OPEN_CURLY_BRACES (357) 326 327
T_CURLY_OPEN (358) 328
T_PAAMAYIM_NEKUDOTAYIM (359) 232

Nonterminals, with rules where they appear

start (135)
    on left: 1
top_statement_list (136)
    on left: 3 4, on right: 1 3
@1 (137)
    on left: 2, on right: 3
top_statement (138)
    on left: 5 6, on right: 3
inner_statement_list (139)
    on left: 8 9, on right: 8 13 19 62 65 73 75 77 86 88 92 98 102
    135 138
@2 (140)
    on left: 7, on right: 8
inner_statement (141)
    on left: 10 11, on right: 8
statement (142)
    on left: 12, on right: 5 10 16 25 72 74 76 91 95 100
unticked_statement (143)
    on left: 13 16 19 22 25 29 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 50 52 53, on right: 12
@3 (144)
    on left: 14, on right: 16
@4 (145)
    on left: 15, on right: 16
@5 (146)
    on left: 17, on right: 19
@6 (147)
    on left: 18, on right: 19
@7 (148)
    on left: 20, on right: 22
@8 (149)
    on left: 21, on right: 22
@9 (150)
    on left: 23, on right: 25
@10 (151)
    on left: 24, on right: 25
@11 (152)
    on left: 26, on right: 29
@12 (153)
    on left: 27, on right: 29
@13 (154)
    on left: 28, on right: 29
@14 (155)
    on left: 30, on right: 31
@15 (156)
    on left: 48, on right: 50
@16 (157)
    on left: 49, on right: 50
@17 (158)
    on left: 51, on right: 52
unset_variables (159)
    on left: 54 55, on right: 47 55
unset_variable (160)
    on left: 56, on right: 54 55
use_filename (161)
    on left: 57 58, on right: 45 46
declaration_statement (162)
    on left: 59, on right: 6 11
unticked_declaration_statement (163)
    on left: 62 65 67 69, on right: 59
@18 (164)
    on left: 60, on right: 62
@19 (165)
    on left: 61, on right: 62
@20 (166)
    on left: 63, on right: 65
@21 (167)
    on left: 64, on right: 65
@22 (168)
    on left: 66, on right: 67
@23 (169)
    on left: 68, on right: 69
foreach_optional_arg (170)
    on left: 70 71, on right: 50
for_statement (171)
    on left: 72 73, on right: 29
foreach_statement (172)
    on left: 74 75, on right: 50
declare_statement (173)
    on left: 76 77, on right: 52
declare_list (174)
    on left: 78 79, on right: 52 79
switch_case_list (175)
    on left: 80 81 82 83, on right: 31
case_list (176)
    on left: 84 86 88, on right: 80 81 82 83 86 88
@24 (177)
    on left: 85, on right: 86
@25 (178)
    on left: 87, on right: 88
case_separator (179)
    on left: 89 90, on right: 86 88
while_statement (180)
    on left: 91 92, on right: 22
elseif_list (181)
    on left: 93 95, on right: 16 95
@26 (182)
    on left: 94, on right: 95
new_elseif_list (183)
    on left: 96 98, on right: 19 98
@27 (184)
    on left: 97, on right: 98
else_single (185)
    on left: 99 100, on right: 16
new_else_single (186)
    on left: 101 102, on right: 19
parameter_list (187)
    on left: 103 104, on right: 62 65 135 138
non_empty_parameter_list (188)
    on left: 105 106 107 108 109 110 111 112, on right: 103 109 110
    111 112
function_call_parameter_list (189)
    on left: 113 114, on right: 228 230 232 237
non_empty_function_call_parameter_list (190)
    on left: 115 116 117 118 119 120, on right: 113 118 119 120
global_var_list (191)
    on left: 121 122, on right: 39 121
global_var (192)
    on left: 123 124 125, on right: 121 122
static_var_list (193)
    on left: 126 127 128 129, on right: 40 126 127
class_statement_list (194)
    on left: 130 131, on right: 67 69 130
class_statement (195)
    on left: 132 135 138, on right: 130
@28 (196)
    on left: 133, on right: 135
@29 (197)
    on left: 134, on right: 135
@30 (198)
    on left: 136, on right: 138
@31 (199)
    on left: 137, on right: 138
is_reference (200)
    on left: 139 140, on right: 62 65 135 138
class_variable_decleration (201)
    on left: 141 142 143 144, on right: 132 141 142
echo_expr_list (202)
    on left: 145 146 147, on right: 41 146
for_expr (203)
    on left: 148 149, on right: 29
non_empty_for_expr (204)
    on left: 151 152, on right: 149 151
@32 (205)
    on left: 150, on right: 151
expr_without_variable (206)
    on left: 154 155 156 157 159 160 161 162 163 164 165 166 167 168
    169 170 171 172 173 174 176 178 180 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
    205 206 207 210 211 212 213 214 215 216 217 218 219 220 222 223
    224 225 226, on right: 37 115 118 265
@33 (207)
    on left: 153, on right: 154
@34 (208)
    on left: 158, on right: 159
@35 (209)
    on left: 175, on right: 176
@36 (210)
    on left: 177, on right: 178
@37 (211)
    on left: 179, on right: 180
@38 (212)
    on left: 181, on right: 182
@39 (213)
    on left: 208, on right: 210
@40 (214)
    on left: 209, on right: 210
@41 (215)
    on left: 221, on right: 222
function_call (216)
    on left: 228 230 232, on right: 157 211
@42 (217)
    on left: 227, on right: 228
@43 (218)
    on left: 229, on right: 230
@44 (219)
    on left: 231, on right: 232
exit_expr (220)
    on left: 233 234 235, on right: 220
ctor_arguments (221)
    on left: 236 237, on right: 159
class_name (222)
    on left: 238 239, on right: 159
common_scalar (223)
    on left: 240 241 242 243 244, on right: 245 252
static_scalar (224)
    on left: 245 246 247 248 249, on right: 78 79 108 112 127 129 142
    144 247 248 260 261 262 263
scalar (225)
    on left: 250 251 252 253 254 255, on right: 223
static_array_pair_list (226)
    on left: 256 257, on right: 249
possible_comma (227)
    on left: 258 259, on right: 257 301
non_empty_static_array_pair_list (228)
    on left: 260 261 262 263, on right: 257 260 261
expr (229)
    on left: 264 265, on right: 16 19 22 25 31 33 35 43 44 50 86 95
    98 125 146 147 151 152 154 155 160 161 162 163 164 165 166 167
    168 169 170 176 178 180 182 183 184 185 186 187 188 189 190 191
    192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207
    210 213 214 215 216 217 218 219 222 226 235 275 278 280 288 291
    302 303 304 305 306 308 326 327 334 335 336
r_cvar (230)
    on left: 266, on right: 124 230 239 264
w_cvar (231)
    on left: 267, on right: 50 71 117 120 156 306 307 308 309
rw_cvar (232)
    on left: 268, on right: 171 172 173 174
cvar (233)
    on left: 269 271, on right: 38 56 116 119 155 156 157 160 161 162
    163 164 165 166 167 168 169 170 266 267 268 296 328 332 333
@45 (234)
    on left: 270, on right: 271
cvar_without_objects (235)
    on left: 272 273, on right: 269 271 286
reference_variable (236)
    on left: 274 275 276, on right: 272 273 274 275
compound_variable (237)
    on left: 277 278, on right: 276
dim_offset (238)
    on left: 279 280, on right: 274 287
ref_list (239)
    on left: 281 283, on right: 271 283
@46 (240)
    on left: 282, on right: 283
object_property (241)
    on left: 284 286, on right: 281 283
@47 (242)
    on left: 285, on right: 286
object_dim_list (243)
    on left: 287 288 289, on right: 284 287 288
variable_name (244)
    on left: 290 291, on right: 289
simple_indirect_reference (245)
    on left: 292 293, on right: 273 293
assignment_list (246)
    on left: 294 295, on right: 154 294 298
assignment_list_element (247)
    on left: 296 298 299, on right: 294 295
@48 (248)
    on left: 297, on right: 298
array_pair_list (249)
    on left: 300 301, on right: 224
non_empty_array_pair_list (250)
    on left: 302 303 304 305 306 307 308 309, on right: 301 302 303
    306 307
encaps_list (251)
    on left: 310 311 312 313 314 315 316 317 318 319 320 321,
    on right: 225 253 254 255 310 311 312 313 314 315 316 317 318 319
    320
encaps_var (252)
    on left: 322 324 325 326 327 328, on right: 310
@49 (253)
    on left: 323, on right: 324
encaps_var_offset (254)
    on left: 329 330 331, on right: 324
internal_functions_in_yacc (255)
    on left: 332 333 334 335 336, on right: 212


state 0

    $default	reduce using rule 4 (top_statement_list)

    start	go to state 646
    top_statement_list	go to state 1



state 1

    start  ->  top_statement_list .   (rule 1)
    top_statement_list  ->  top_statement_list . @1 top_statement   (rule 3)

    $   	reduce using rule 1 (start)
    $default	reduce using rule 2 (@1)

    @1  	go to state 2



state 2

    top_statement_list  ->  top_statement_list @1 . top_statement   (rule 3)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_OLD_FUNCTION	shift, and go to state 40
    T_FUNCTION	shift, and go to state 41
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    top_statement	go to state 64
    statement	go to state 65
    unticked_statement	go to state 66
    declaration_statement	go to state 67
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 3

    internal_functions_in_yacc  ->  T_INCLUDE . expr   (rule 334)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 82
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 4

    internal_functions_in_yacc  ->  T_INCLUDE_ONCE . expr   (rule 335)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 83
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 5

    internal_functions_in_yacc  ->  T_EVAL . '(' expr ')'   (rule 336)

    '(' 	shift, and go to state 84



state 6

    expr_without_variable  ->  T_PRINT . expr   (rule 226)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 85
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 7

    expr_without_variable  ->  '+' . expr   (rule 195)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 86
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 8

    expr_without_variable  ->  '-' . expr   (rule 196)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 87
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 9

    expr_without_variable  ->  '!' . expr   (rule 197)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 88
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 10

    expr_without_variable  ->  '~' . expr   (rule 198)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 89
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 11

    expr_without_variable  ->  T_INC . rw_cvar   (rule 172)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    rw_cvar	go to state 90
    cvar	go to state 91
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 12

    expr_without_variable  ->  T_DEC . rw_cvar   (rule 174)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    rw_cvar	go to state 92
    cvar	go to state 91
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 13

    expr_without_variable  ->  T_INT_CAST . expr   (rule 213)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 93
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 14

    expr_without_variable  ->  T_DOUBLE_CAST . expr   (rule 214)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 94
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 15

    expr_without_variable  ->  T_STRING_CAST . expr   (rule 215)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 95
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 16

    expr_without_variable  ->  T_ARRAY_CAST . expr   (rule 216)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 96
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 17

    expr_without_variable  ->  T_OBJECT_CAST . expr   (rule 217)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 97
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 18

    expr_without_variable  ->  T_BOOL_CAST . expr   (rule 218)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 98
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 19

    expr_without_variable  ->  T_UNSET_CAST . expr   (rule 219)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 99
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 20

    expr_without_variable  ->  '@' . @41 expr   (rule 222)

    $default	reduce using rule 221 (@41)

    @41 	go to state 100



state 21

    expr_without_variable  ->  T_NEW . class_name @34 ctor_arguments   (rule 159)

    T_STRING	shift, and go to state 101
    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    class_name	go to state 102
    r_cvar	go to state 103
    cvar	go to state 104
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 22

    expr_without_variable  ->  T_EXIT . exit_expr   (rule 220)

    '(' 	shift, and go to state 105

    $default	reduce using rule 233 (exit_expr)

    exit_expr	go to state 106



state 23

    unticked_statement  ->  T_IF . '(' expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF . '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    '(' 	shift, and go to state 107



state 24

    common_scalar  ->  T_LNUMBER .   (rule 240)

    $default	reduce using rule 240 (common_scalar)



state 25

    common_scalar  ->  T_DNUMBER .   (rule 241)

    $default	reduce using rule 241 (common_scalar)



state 26

    function_call  ->  T_STRING . '(' @42 function_call_parameter_list ')'   (rule 228)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'   (rule 232)
    scalar  ->  T_STRING .   (rule 250)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 108
    '(' 	shift, and go to state 109

    $default	reduce using rule 250 (scalar)



state 27

    scalar  ->  T_STRING_VARNAME .   (rule 251)

    $default	reduce using rule 251 (scalar)



state 28

    compound_variable  ->  T_VARIABLE .   (rule 277)

    $default	reduce using rule 277 (compound_variable)



state 29

    unticked_statement  ->  T_INLINE_HTML .   (rule 42)

    $default	reduce using rule 42 (unticked_statement)



state 30

    common_scalar  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 242)

    $default	reduce using rule 242 (common_scalar)



state 31

    unticked_statement  ->  T_ECHO . echo_expr_list ';'   (rule 41)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 145 (echo_expr_list)

    echo_expr_list	go to state 110
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 111
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 32

    unticked_statement  ->  T_DO . @9 statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 23 (@9)

    @9  	go to state 112



state 33

    unticked_statement  ->  T_WHILE . '(' @7 expr ')' @8 while_statement   (rule 22)

    '(' 	shift, and go to state 113



state 34

    unticked_statement  ->  T_FOR . '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    '(' 	shift, and go to state 114



state 35

    unticked_statement  ->  T_FOREACH . '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    '(' 	shift, and go to state 115



state 36

    unticked_statement  ->  T_DECLARE . @17 '(' declare_list ')' declare_statement   (rule 52)

    $default	reduce using rule 51 (@17)

    @17 	go to state 116



state 37

    unticked_statement  ->  T_SWITCH . '(' expr ')' @14 switch_case_list   (rule 31)

    '(' 	shift, and go to state 117



state 38

    unticked_statement  ->  T_BREAK . ';'   (rule 32)
    unticked_statement  ->  T_BREAK . expr ';'   (rule 33)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 118
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 119
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 39

    unticked_statement  ->  T_CONTINUE . ';'   (rule 34)
    unticked_statement  ->  T_CONTINUE . expr ';'   (rule 35)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 120
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 121
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 40

    unticked_declaration_statement  ->  T_OLD_FUNCTION . @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 65)

    $default	reduce using rule 63 (@20)

    @20 	go to state 122



state 41

    unticked_declaration_statement  ->  T_FUNCTION . @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    $default	reduce using rule 60 (@18)

    @18 	go to state 123



state 42

    unticked_statement  ->  T_RETURN . ';'   (rule 36)
    unticked_statement  ->  T_RETURN . expr_without_variable ';'   (rule 37)
    unticked_statement  ->  T_RETURN . cvar ';'   (rule 38)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 124
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 125
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 127
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 43

    unticked_statement  ->  T_REQUIRE . expr ';'   (rule 44)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 44

    unticked_statement  ->  T_REQUIRE_ONCE . use_filename ';'   (rule 45)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 129
    '(' 	shift, and go to state 130

    use_filename	go to state 131



state 45

    unticked_statement  ->  T_USE . use_filename ';'   (rule 46)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 129
    '(' 	shift, and go to state 130

    use_filename	go to state 132



state 46

    unticked_statement  ->  T_GLOBAL . global_var_list ';'   (rule 39)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var_list	go to state 135
    global_var	go to state 136



state 47

    unticked_statement  ->  T_STATIC . static_var_list ';'   (rule 40)

    T_VARIABLE	shift, and go to state 137

    static_var_list	go to state 138



state 48

    unticked_statement  ->  T_UNSET . '(' unset_variables ')' ';'   (rule 47)

    '(' 	shift, and go to state 139



state 49

    internal_functions_in_yacc  ->  T_ISSET . '(' cvar ')'   (rule 332)

    '(' 	shift, and go to state 140



state 50

    internal_functions_in_yacc  ->  T_EMPTY . '(' cvar ')'   (rule 333)

    '(' 	shift, and go to state 141



state 51

    unticked_declaration_statement  ->  T_CLASS . T_STRING @22 '{' class_statement_list '}'   (rule 67)
    unticked_declaration_statement  ->  T_CLASS . T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}'   (rule 69)

    T_STRING	shift, and go to state 142



state 52

    expr_without_variable  ->  T_LIST . '(' @33 assignment_list ')' '=' expr   (rule 154)

    '(' 	shift, and go to state 143



state 53

    expr_without_variable  ->  T_ARRAY . '(' array_pair_list ')'   (rule 224)

    '(' 	shift, and go to state 144



state 54

    common_scalar  ->  T_LINE .   (rule 243)

    $default	reduce using rule 243 (common_scalar)



state 55

    common_scalar  ->  T_FILE .   (rule 244)

    $default	reduce using rule 244 (common_scalar)



state 56

    scalar  ->  T_START_HEREDOC . encaps_list T_END_HEREDOC   (rule 255)

    $default	reduce using rule 321 (encaps_list)

    encaps_list	go to state 145



state 57

    unticked_statement  ->  '{' . inner_statement_list '}'   (rule 13)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 146



state 58

    expr_without_variable  ->  '(' . expr ')'   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 147
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 59

    unticked_statement  ->  ';' .   (rule 53)

    $default	reduce using rule 53 (unticked_statement)



state 60

    compound_variable  ->  '$' . '{' expr '}'   (rule 278)
    simple_indirect_reference  ->  '$' .   (rule 292)

    '{' 	shift, and go to state 148

    $default	reduce using rule 292 (simple_indirect_reference)



state 61

    expr_without_variable  ->  '`' . encaps_list '`'   (rule 225)

    $default	reduce using rule 321 (encaps_list)

    encaps_list	go to state 149



state 62

    scalar  ->  '\"' . encaps_list '\"'   (rule 253)

    $default	reduce using rule 321 (encaps_list)

    encaps_list	go to state 150



state 63

    scalar  ->  '\'' . encaps_list '\''   (rule 254)

    $default	reduce using rule 321 (encaps_list)

    encaps_list	go to state 151



state 64

    top_statement_list  ->  top_statement_list @1 top_statement .   (rule 3)

    $default	reduce using rule 3 (top_statement_list)



state 65

    top_statement  ->  statement .   (rule 5)

    $default	reduce using rule 5 (top_statement)



state 66

    statement  ->  unticked_statement .   (rule 12)

    $default	reduce using rule 12 (statement)



state 67

    top_statement  ->  declaration_statement .   (rule 6)

    $default	reduce using rule 6 (top_statement)



state 68

    declaration_statement  ->  unticked_declaration_statement .   (rule 59)

    $default	reduce using rule 59 (declaration_statement)



state 69

    expr  ->  expr_without_variable .   (rule 265)

    $default	reduce using rule 265 (expr)



state 70

    expr_without_variable  ->  function_call .   (rule 211)

    $default	reduce using rule 211 (expr_without_variable)



state 71

    scalar  ->  common_scalar .   (rule 252)

    $default	reduce using rule 252 (scalar)



state 72

    expr_without_variable  ->  scalar .   (rule 223)

    $default	reduce using rule 223 (expr_without_variable)



state 73

    unticked_statement  ->  expr . ';'   (rule 43)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 177



state 74

    function_call  ->  r_cvar . '(' @43 function_call_parameter_list ')'   (rule 230)
    expr  ->  r_cvar .   (rule 264)

    '(' 	shift, and go to state 178

    $default	reduce using rule 264 (expr)



state 75

    expr_without_variable  ->  rw_cvar . T_INC   (rule 171)
    expr_without_variable  ->  rw_cvar . T_DEC   (rule 173)

    T_INC	shift, and go to state 179
    T_DEC	shift, and go to state 180



state 76

    expr_without_variable  ->  cvar . '=' expr   (rule 155)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 157)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 170)
    r_cvar  ->  cvar .   (rule 266)
    rw_cvar  ->  cvar .   (rule 268)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    T_XOR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    T_INC	reduce using rule 268 (rw_cvar)
    T_DEC	reduce using rule 268 (rw_cvar)
    $default	reduce using rule 266 (r_cvar)



state 77

    cvar  ->  cvar_without_objects .   (rule 269)
    cvar  ->  cvar_without_objects . T_OBJECT_OPERATOR @45 ref_list   (rule 271)

    T_OBJECT_OPERATOR	shift, and go to state 193

    $default	reduce using rule 269 (cvar)



state 78

    cvar_without_objects  ->  reference_variable .   (rule 272)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 274)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 275)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 272 (cvar_without_objects)



state 79

    reference_variable  ->  compound_variable .   (rule 276)

    $default	reduce using rule 276 (reference_variable)



state 80

    cvar_without_objects  ->  simple_indirect_reference . reference_variable   (rule 273)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 293)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 196

    reference_variable	go to state 197
    compound_variable	go to state 79



state 81

    expr_without_variable  ->  internal_functions_in_yacc .   (rule 212)

    $default	reduce using rule 212 (expr_without_variable)



state 82

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    internal_functions_in_yacc  ->  T_INCLUDE expr .   (rule 334)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 334 (internal_functions_in_yacc)



state 83

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    internal_functions_in_yacc  ->  T_INCLUDE_ONCE expr .   (rule 335)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 335 (internal_functions_in_yacc)



state 84

    internal_functions_in_yacc  ->  T_EVAL '(' . expr ')'   (rule 336)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 198
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 85

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_PRINT expr .   (rule 226)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 226 (expr_without_variable)



state 86

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  '+' expr .   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 195 (expr_without_variable)



state 87

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  '-' expr .   (rule 196)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 196 (expr_without_variable)



state 88

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  '!' expr .   (rule 197)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)


    $default	reduce using rule 197 (expr_without_variable)



state 89

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  '~' expr .   (rule 198)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)


    $default	reduce using rule 198 (expr_without_variable)



state 90

    expr_without_variable  ->  T_INC rw_cvar .   (rule 172)

    $default	reduce using rule 172 (expr_without_variable)



state 91

    rw_cvar  ->  cvar .   (rule 268)

    $default	reduce using rule 268 (rw_cvar)



state 92

    expr_without_variable  ->  T_DEC rw_cvar .   (rule 174)

    $default	reduce using rule 174 (expr_without_variable)



state 93

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_INT_CAST expr .   (rule 213)


    $default	reduce using rule 213 (expr_without_variable)



state 94

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_DOUBLE_CAST expr .   (rule 214)


    $default	reduce using rule 214 (expr_without_variable)



state 95

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_STRING_CAST expr .   (rule 215)


    $default	reduce using rule 215 (expr_without_variable)



state 96

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_ARRAY_CAST expr .   (rule 216)


    $default	reduce using rule 216 (expr_without_variable)



state 97

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_OBJECT_CAST expr .   (rule 217)


    $default	reduce using rule 217 (expr_without_variable)



state 98

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_BOOL_CAST expr .   (rule 218)


    $default	reduce using rule 218 (expr_without_variable)



state 99

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  T_UNSET_CAST expr .   (rule 219)


    $default	reduce using rule 219 (expr_without_variable)



state 100

    expr_without_variable  ->  '@' @41 . expr   (rule 222)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 199
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 101

    class_name  ->  T_STRING .   (rule 238)

    $default	reduce using rule 238 (class_name)



state 102

    expr_without_variable  ->  T_NEW class_name . @34 ctor_arguments   (rule 159)

    $default	reduce using rule 158 (@34)

    @34 	go to state 200



state 103

    class_name  ->  r_cvar .   (rule 239)

    $default	reduce using rule 239 (class_name)



state 104

    r_cvar  ->  cvar .   (rule 266)

    $default	reduce using rule 266 (r_cvar)



state 105

    exit_expr  ->  '(' . ')'   (rule 234)
    exit_expr  ->  '(' . expr ')'   (rule 235)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ')' 	shift, and go to state 201
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 202
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 106

    expr_without_variable  ->  T_EXIT exit_expr .   (rule 220)

    $default	reduce using rule 220 (expr_without_variable)



state 107

    unticked_statement  ->  T_IF '(' . expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' . expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 203
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 108

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @44 function_call_parameter_list ')'   (rule 232)

    T_STRING	shift, and go to state 204



state 109

    function_call  ->  T_STRING '(' . @42 function_call_parameter_list ')'   (rule 228)

    $default	reduce using rule 227 (@42)

    @42 	go to state 205



state 110

    unticked_statement  ->  T_ECHO echo_expr_list . ';'   (rule 41)
    echo_expr_list  ->  echo_expr_list . ',' expr   (rule 146)

    ',' 	shift, and go to state 206
    ';' 	shift, and go to state 207



state 111

    echo_expr_list  ->  expr .   (rule 147)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 147 (echo_expr_list)



state 112

    unticked_statement  ->  T_DO @9 . statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 208
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 113

    unticked_statement  ->  T_WHILE '(' . @7 expr ')' @8 while_statement   (rule 22)

    $default	reduce using rule 20 (@7)

    @7  	go to state 209



state 114

    unticked_statement  ->  T_FOR '(' . for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 148 (for_expr)

    for_expr	go to state 210
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 115

    unticked_statement  ->  T_FOREACH '(' . expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 213
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 116

    unticked_statement  ->  T_DECLARE @17 . '(' declare_list ')' declare_statement   (rule 52)

    '(' 	shift, and go to state 214



state 117

    unticked_statement  ->  T_SWITCH '(' . expr ')' @14 switch_case_list   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 215
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 118

    unticked_statement  ->  T_BREAK ';' .   (rule 32)

    $default	reduce using rule 32 (unticked_statement)



state 119

    unticked_statement  ->  T_BREAK expr . ';'   (rule 33)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 216



state 120

    unticked_statement  ->  T_CONTINUE ';' .   (rule 34)

    $default	reduce using rule 34 (unticked_statement)



state 121

    unticked_statement  ->  T_CONTINUE expr . ';'   (rule 35)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 217



state 122

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 . is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 65)

    '&' 	shift, and go to state 218

    $default	reduce using rule 139 (is_reference)

    is_reference	go to state 219



state 123

    unticked_declaration_statement  ->  T_FUNCTION @18 . is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    '&' 	shift, and go to state 218

    $default	reduce using rule 139 (is_reference)

    is_reference	go to state 220



state 124

    unticked_statement  ->  T_RETURN ';' .   (rule 36)

    $default	reduce using rule 36 (unticked_statement)



state 125

    unticked_statement  ->  T_RETURN expr_without_variable . ';'   (rule 37)
    expr  ->  expr_without_variable .   (rule 265)

    ';' 	shift, and go to state 221

    $default	reduce using rule 265 (expr)



state 126

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 127

    unticked_statement  ->  T_RETURN cvar . ';'   (rule 38)
    expr_without_variable  ->  cvar . '=' expr   (rule 155)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 157)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 170)
    r_cvar  ->  cvar .   (rule 266)
    rw_cvar  ->  cvar .   (rule 268)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    T_XOR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192
    ';' 	shift, and go to state 222

    T_INC	reduce using rule 268 (rw_cvar)
    T_DEC	reduce using rule 268 (rw_cvar)
    $default	reduce using rule 266 (r_cvar)



state 128

    unticked_statement  ->  T_REQUIRE expr . ';'   (rule 44)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 223



state 129

    use_filename  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 57)

    $default	reduce using rule 57 (use_filename)



state 130

    use_filename  ->  '(' . T_CONSTANT_ENCAPSED_STRING ')'   (rule 58)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 224



state 131

    unticked_statement  ->  T_REQUIRE_ONCE use_filename . ';'   (rule 45)

    ';' 	shift, and go to state 225



state 132

    unticked_statement  ->  T_USE use_filename . ';'   (rule 46)

    ';' 	shift, and go to state 226



state 133

    global_var  ->  T_VARIABLE .   (rule 123)

    $default	reduce using rule 123 (global_var)



state 134

    global_var  ->  '$' . r_cvar   (rule 124)
    global_var  ->  '$' . '{' expr '}'   (rule 125)

    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 227
    '$' 	shift, and go to state 60

    r_cvar	go to state 228
    cvar	go to state 104
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 135

    unticked_statement  ->  T_GLOBAL global_var_list . ';'   (rule 39)
    global_var_list  ->  global_var_list . ',' global_var   (rule 121)

    ',' 	shift, and go to state 229
    ';' 	shift, and go to state 230



state 136

    global_var_list  ->  global_var .   (rule 122)

    $default	reduce using rule 122 (global_var_list)



state 137

    static_var_list  ->  T_VARIABLE .   (rule 128)
    static_var_list  ->  T_VARIABLE . '=' static_scalar   (rule 129)

    '=' 	shift, and go to state 231

    $default	reduce using rule 128 (static_var_list)



state 138

    unticked_statement  ->  T_STATIC static_var_list . ';'   (rule 40)
    static_var_list  ->  static_var_list . ',' T_VARIABLE   (rule 126)
    static_var_list  ->  static_var_list . ',' T_VARIABLE '=' static_scalar   (rule 127)

    ',' 	shift, and go to state 232
    ';' 	shift, and go to state 233



state 139

    unticked_statement  ->  T_UNSET '(' . unset_variables ')' ';'   (rule 47)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    unset_variables	go to state 234
    unset_variable	go to state 235
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 140

    internal_functions_in_yacc  ->  T_ISSET '(' . cvar ')'   (rule 332)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 237
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 141

    internal_functions_in_yacc  ->  T_EMPTY '(' . cvar ')'   (rule 333)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 238
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 142

    unticked_declaration_statement  ->  T_CLASS T_STRING . @22 '{' class_statement_list '}'   (rule 67)
    unticked_declaration_statement  ->  T_CLASS T_STRING . T_EXTENDS T_STRING @23 '{' class_statement_list '}'   (rule 69)

    T_EXTENDS	shift, and go to state 239

    $default	reduce using rule 66 (@22)

    @22 	go to state 240



state 143

    expr_without_variable  ->  T_LIST '(' . @33 assignment_list ')' '=' expr   (rule 154)

    $default	reduce using rule 153 (@33)

    @33 	go to state 241



state 144

    expr_without_variable  ->  T_ARRAY '(' . array_pair_list ')'   (rule 224)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 242
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 300 (array_pair_list)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 243
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    array_pair_list	go to state 244
    non_empty_array_pair_list	go to state 245
    internal_functions_in_yacc	go to state 81



state 145

    scalar  ->  T_START_HEREDOC encaps_list . T_END_HEREDOC   (rule 255)
    encaps_list  ->  encaps_list . encaps_var   (rule 310)
    encaps_list  ->  encaps_list . T_STRING   (rule 311)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 313)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 314)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . '['   (rule 316)
    encaps_list  ->  encaps_list . ']'   (rule 317)
    encaps_list  ->  encaps_list . '{'   (rule 318)
    encaps_list  ->  encaps_list . '}'   (rule 319)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 320)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_END_HEREDOC	shift, and go to state 254
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 146

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  '{' inner_statement_list . '}'   (rule 13)

    '}' 	shift, and go to state 261

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 147

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  '(' expr . ')'   (rule 207)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 263



state 148

    compound_variable  ->  '$' '{' . expr '}'   (rule 278)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 264
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 149

    expr_without_variable  ->  '`' encaps_list . '`'   (rule 225)
    encaps_list  ->  encaps_list . encaps_var   (rule 310)
    encaps_list  ->  encaps_list . T_STRING   (rule 311)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 313)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 314)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . '['   (rule 316)
    encaps_list  ->  encaps_list . ']'   (rule 317)
    encaps_list  ->  encaps_list . '{'   (rule 318)
    encaps_list  ->  encaps_list . '}'   (rule 319)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 320)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '`' 	shift, and go to state 265
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 150

    scalar  ->  '\"' encaps_list . '\"'   (rule 253)
    encaps_list  ->  encaps_list . encaps_var   (rule 310)
    encaps_list  ->  encaps_list . T_STRING   (rule 311)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 313)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 314)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . '['   (rule 316)
    encaps_list  ->  encaps_list . ']'   (rule 317)
    encaps_list  ->  encaps_list . '{'   (rule 318)
    encaps_list  ->  encaps_list . '}'   (rule 319)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 320)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '\"'	shift, and go to state 266
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 151

    scalar  ->  '\'' encaps_list . '\''   (rule 254)
    encaps_list  ->  encaps_list . encaps_var   (rule 310)
    encaps_list  ->  encaps_list . T_STRING   (rule 311)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 312)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 313)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 314)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 315)
    encaps_list  ->  encaps_list . '['   (rule 316)
    encaps_list  ->  encaps_list . ']'   (rule 317)
    encaps_list  ->  encaps_list . '{'   (rule 318)
    encaps_list  ->  encaps_list . '}'   (rule 319)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 320)

    '[' 	shift, and go to state 246
    T_STRING	shift, and go to state 247
    T_VARIABLE	shift, and go to state 248
    T_NUM_STRING	shift, and go to state 249
    T_CHARACTER	shift, and go to state 250
    T_BAD_CHARACTER	shift, and go to state 251
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 252
    T_OBJECT_OPERATOR	shift, and go to state 253
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 255
    T_CURLY_OPEN	shift, and go to state 256
    '{' 	shift, and go to state 257
    '}' 	shift, and go to state 258
    '\''	shift, and go to state 267
    ']' 	shift, and go to state 259

    encaps_var	go to state 260



state 152

    expr_without_variable  ->  expr T_LOGICAL_OR . @37 expr   (rule 180)

    $default	reduce using rule 179 (@37)

    @37 	go to state 268



state 153

    expr_without_variable  ->  expr T_LOGICAL_XOR . expr   (rule 183)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 269
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 154

    expr_without_variable  ->  expr T_LOGICAL_AND . @38 expr   (rule 182)

    $default	reduce using rule 181 (@38)

    @38 	go to state 270



state 155

    expr_without_variable  ->  expr '?' . @39 expr ':' @40 expr   (rule 210)

    $default	reduce using rule 208 (@39)

    @39 	go to state 271



state 156

    expr_without_variable  ->  expr T_BOOLEAN_OR . @35 expr   (rule 176)

    $default	reduce using rule 175 (@35)

    @35 	go to state 272



state 157

    expr_without_variable  ->  expr T_BOOLEAN_AND . @36 expr   (rule 178)

    $default	reduce using rule 177 (@36)

    @36 	go to state 273



state 158

    expr_without_variable  ->  expr '|' . expr   (rule 184)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 274
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 159

    expr_without_variable  ->  expr '^' . expr   (rule 186)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 275
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 160

    expr_without_variable  ->  expr '&' . expr   (rule 185)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 276
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 161

    expr_without_variable  ->  expr T_IS_EQUAL . expr   (rule 201)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 277
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 162

    expr_without_variable  ->  expr T_IS_NOT_EQUAL . expr   (rule 202)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 278
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 163

    expr_without_variable  ->  expr T_IS_IDENTICAL . expr   (rule 199)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 279
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 164

    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL . expr   (rule 200)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 280
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 165

    expr_without_variable  ->  expr '<' . expr   (rule 203)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 281
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 166

    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL . expr   (rule 204)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 282
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 167

    expr_without_variable  ->  expr '>' . expr   (rule 205)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 283
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 168

    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL . expr   (rule 206)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 284
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 169

    expr_without_variable  ->  expr T_SL . expr   (rule 193)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 285
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 170

    expr_without_variable  ->  expr T_SR . expr   (rule 194)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 286
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 171

    expr_without_variable  ->  expr '+' . expr   (rule 188)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 287
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 172

    expr_without_variable  ->  expr '-' . expr   (rule 189)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 288
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 173

    expr_without_variable  ->  expr '.' . expr   (rule 187)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 289
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 174

    expr_without_variable  ->  expr '*' . expr   (rule 190)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 290
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 175

    expr_without_variable  ->  expr '/' . expr   (rule 191)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 291
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 176

    expr_without_variable  ->  expr '%' . expr   (rule 192)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 292
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 177

    unticked_statement  ->  expr ';' .   (rule 43)

    $default	reduce using rule 43 (unticked_statement)



state 178

    function_call  ->  r_cvar '(' . @43 function_call_parameter_list ')'   (rule 230)

    $default	reduce using rule 229 (@43)

    @43 	go to state 293



state 179

    expr_without_variable  ->  rw_cvar T_INC .   (rule 171)

    $default	reduce using rule 171 (expr_without_variable)



state 180

    expr_without_variable  ->  rw_cvar T_DEC .   (rule 173)

    $default	reduce using rule 173 (expr_without_variable)



state 181

    expr_without_variable  ->  cvar '=' . expr   (rule 155)
    expr_without_variable  ->  cvar '=' . '&' w_cvar   (rule 156)
    expr_without_variable  ->  cvar '=' . '&' function_call   (rule 157)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 294
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 295
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 182

    expr_without_variable  ->  cvar T_PLUS_EQUAL . expr   (rule 160)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 296
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 183

    expr_without_variable  ->  cvar T_MINUS_EQUAL . expr   (rule 161)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 297
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 184

    expr_without_variable  ->  cvar T_MUL_EQUAL . expr   (rule 162)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 298
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 185

    expr_without_variable  ->  cvar T_DIV_EQUAL . expr   (rule 163)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 299
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 186

    expr_without_variable  ->  cvar T_CONCAT_EQUAL . expr   (rule 164)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 300
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 187

    expr_without_variable  ->  cvar T_MOD_EQUAL . expr   (rule 165)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 301
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 188

    expr_without_variable  ->  cvar T_AND_EQUAL . expr   (rule 166)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 302
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 189

    expr_without_variable  ->  cvar T_OR_EQUAL . expr   (rule 167)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 303
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 190

    expr_without_variable  ->  cvar T_XOR_EQUAL . expr   (rule 168)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 304
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 191

    expr_without_variable  ->  cvar T_SL_EQUAL . expr   (rule 169)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 305
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 192

    expr_without_variable  ->  cvar T_SR_EQUAL . expr   (rule 170)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 306
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 193

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR . @45 ref_list   (rule 271)

    $default	reduce using rule 270 (@45)

    @45 	go to state 307



state 194

    reference_variable  ->  reference_variable '[' . dim_offset ']'   (rule 274)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 279 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 308
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 309
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 195

    reference_variable  ->  reference_variable '{' . expr '}'   (rule 275)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 310
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 196

    compound_variable  ->  '$' . '{' expr '}'   (rule 278)
    simple_indirect_reference  ->  simple_indirect_reference '$' .   (rule 293)

    '{' 	shift, and go to state 148

    $default	reduce using rule 293 (simple_indirect_reference)



state 197

    cvar_without_objects  ->  simple_indirect_reference reference_variable .   (rule 273)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 274)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 275)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    $default	reduce using rule 273 (cvar_without_objects)



state 198

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    internal_functions_in_yacc  ->  T_EVAL '(' expr . ')'   (rule 336)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 311



state 199

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  '@' @41 expr .   (rule 222)


    $default	reduce using rule 222 (expr_without_variable)



state 200

    expr_without_variable  ->  T_NEW class_name @34 . ctor_arguments   (rule 159)

    '(' 	shift, and go to state 312

    $default	reduce using rule 236 (ctor_arguments)

    ctor_arguments	go to state 313



state 201

    exit_expr  ->  '(' ')' .   (rule 234)

    $default	reduce using rule 234 (exit_expr)



state 202

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    exit_expr  ->  '(' expr . ')'   (rule 235)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 314



state 203

    unticked_statement  ->  T_IF '(' expr . ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr . ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 315



state 204

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @44 function_call_parameter_list ')'   (rule 232)

    '(' 	shift, and go to state 316



state 205

    function_call  ->  T_STRING '(' @42 . function_call_parameter_list ')'   (rule 228)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 317
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 114 (function_call_parameter_list)

    function_call_parameter_list	go to state 318
    non_empty_function_call_parameter_list	go to state 319
    expr_without_variable	go to state 320
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 321
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 206

    echo_expr_list  ->  echo_expr_list ',' . expr   (rule 146)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 322
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 207

    unticked_statement  ->  T_ECHO echo_expr_list ';' .   (rule 41)

    $default	reduce using rule 41 (unticked_statement)



state 208

    unticked_statement  ->  T_DO @9 statement . T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_WHILE	shift, and go to state 323



state 209

    unticked_statement  ->  T_WHILE '(' @7 . expr ')' @8 while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 324
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 210

    unticked_statement  ->  T_FOR '(' for_expr . ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 325



state 211

    for_expr  ->  non_empty_for_expr .   (rule 149)
    non_empty_for_expr  ->  non_empty_for_expr . ',' @32 expr   (rule 151)

    ',' 	shift, and go to state 326

    $default	reduce using rule 149 (for_expr)



state 212

    non_empty_for_expr  ->  expr .   (rule 152)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 152 (non_empty_for_expr)



state 213

    unticked_statement  ->  T_FOREACH '(' expr . T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_AS	shift, and go to state 327



state 214

    unticked_statement  ->  T_DECLARE @17 '(' . declare_list ')' declare_statement   (rule 52)

    T_STRING	shift, and go to state 328

    declare_list	go to state 329



state 215

    unticked_statement  ->  T_SWITCH '(' expr . ')' @14 switch_case_list   (rule 31)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 330



state 216

    unticked_statement  ->  T_BREAK expr ';' .   (rule 33)

    $default	reduce using rule 33 (unticked_statement)



state 217

    unticked_statement  ->  T_CONTINUE expr ';' .   (rule 35)

    $default	reduce using rule 35 (unticked_statement)



state 218

    is_reference  ->  '&' .   (rule 140)

    $default	reduce using rule 140 (is_reference)



state 219

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference . T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 65)

    T_STRING	shift, and go to state 331



state 220

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference . T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    T_STRING	shift, and go to state 332



state 221

    unticked_statement  ->  T_RETURN expr_without_variable ';' .   (rule 37)

    $default	reduce using rule 37 (unticked_statement)



state 222

    unticked_statement  ->  T_RETURN cvar ';' .   (rule 38)

    $default	reduce using rule 38 (unticked_statement)



state 223

    unticked_statement  ->  T_REQUIRE expr ';' .   (rule 44)

    $default	reduce using rule 44 (unticked_statement)



state 224

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING . ')'   (rule 58)

    ')' 	shift, and go to state 333



state 225

    unticked_statement  ->  T_REQUIRE_ONCE use_filename ';' .   (rule 45)

    $default	reduce using rule 45 (unticked_statement)



state 226

    unticked_statement  ->  T_USE use_filename ';' .   (rule 46)

    $default	reduce using rule 46 (unticked_statement)



state 227

    global_var  ->  '$' '{' . expr '}'   (rule 125)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 334
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 228

    global_var  ->  '$' r_cvar .   (rule 124)

    $default	reduce using rule 124 (global_var)



state 229

    global_var_list  ->  global_var_list ',' . global_var   (rule 121)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var	go to state 335



state 230

    unticked_statement  ->  T_GLOBAL global_var_list ';' .   (rule 39)

    $default	reduce using rule 39 (unticked_statement)



state 231

    static_var_list  ->  T_VARIABLE '=' . static_scalar   (rule 129)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 341



state 232

    static_var_list  ->  static_var_list ',' . T_VARIABLE   (rule 126)
    static_var_list  ->  static_var_list ',' . T_VARIABLE '=' static_scalar   (rule 127)

    T_VARIABLE	shift, and go to state 342



state 233

    unticked_statement  ->  T_STATIC static_var_list ';' .   (rule 40)

    $default	reduce using rule 40 (unticked_statement)



state 234

    unticked_statement  ->  T_UNSET '(' unset_variables . ')' ';'   (rule 47)
    unset_variables  ->  unset_variables . ',' unset_variable   (rule 55)

    ',' 	shift, and go to state 343
    ')' 	shift, and go to state 344



state 235

    unset_variables  ->  unset_variable .   (rule 54)

    $default	reduce using rule 54 (unset_variables)



state 236

    unset_variable  ->  cvar .   (rule 56)

    $default	reduce using rule 56 (unset_variable)



state 237

    internal_functions_in_yacc  ->  T_ISSET '(' cvar . ')'   (rule 332)

    ')' 	shift, and go to state 345



state 238

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar . ')'   (rule 333)

    ')' 	shift, and go to state 346



state 239

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS . T_STRING @23 '{' class_statement_list '}'   (rule 69)

    T_STRING	shift, and go to state 347



state 240

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 . '{' class_statement_list '}'   (rule 67)

    '{' 	shift, and go to state 348



state 241

    expr_without_variable  ->  T_LIST '(' @33 . assignment_list ')' '=' expr   (rule 154)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 349
    '$' 	shift, and go to state 60

    $default	reduce using rule 299 (assignment_list_element)

    cvar	go to state 350
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 351
    assignment_list_element	go to state 352



state 242

    non_empty_array_pair_list  ->  '&' . w_cvar   (rule 309)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 353
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 243

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW expr   (rule 304)
    non_empty_array_pair_list  ->  expr .   (rule 305)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW '&' w_cvar   (rule 308)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 355

    $default	reduce using rule 305 (non_empty_array_pair_list)



state 244

    expr_without_variable  ->  T_ARRAY '(' array_pair_list . ')'   (rule 224)

    ')' 	shift, and go to state 356



state 245

    array_pair_list  ->  non_empty_array_pair_list . possible_comma   (rule 301)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr   (rule 302)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_cvar   (rule 306)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' '&' w_cvar   (rule 307)

    ',' 	shift, and go to state 357

    $default	reduce using rule 258 (possible_comma)

    possible_comma	go to state 358



state 246

    encaps_list  ->  encaps_list '[' .   (rule 316)

    $default	reduce using rule 316 (encaps_list)



state 247

    encaps_list  ->  encaps_list T_STRING .   (rule 311)

    $default	reduce using rule 311 (encaps_list)



state 248

    encaps_var  ->  T_VARIABLE .   (rule 322)
    encaps_var  ->  T_VARIABLE . '[' @49 encaps_var_offset ']'   (rule 324)
    encaps_var  ->  T_VARIABLE . T_OBJECT_OPERATOR T_STRING   (rule 325)

    '[' 	shift, and go to state 359
    T_OBJECT_OPERATOR	shift, and go to state 360

    '[' 	[reduce using rule 322 (encaps_var)]
    T_OBJECT_OPERATOR	[reduce using rule 322 (encaps_var)]
    $default	reduce using rule 322 (encaps_var)



state 249

    encaps_list  ->  encaps_list T_NUM_STRING .   (rule 312)

    $default	reduce using rule 312 (encaps_list)



state 250

    encaps_list  ->  encaps_list T_CHARACTER .   (rule 314)

    $default	reduce using rule 314 (encaps_list)



state 251

    encaps_list  ->  encaps_list T_BAD_CHARACTER .   (rule 315)

    $default	reduce using rule 315 (encaps_list)



state 252

    encaps_list  ->  encaps_list T_ENCAPSED_AND_WHITESPACE .   (rule 313)

    $default	reduce using rule 313 (encaps_list)



state 253

    encaps_list  ->  encaps_list T_OBJECT_OPERATOR .   (rule 320)

    $default	reduce using rule 320 (encaps_list)



state 254

    scalar  ->  T_START_HEREDOC encaps_list T_END_HEREDOC .   (rule 255)

    $default	reduce using rule 255 (scalar)



state 255

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . expr '}'   (rule 326)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'   (rule 327)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 361
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 362
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 256

    encaps_var  ->  T_CURLY_OPEN . cvar '}'   (rule 328)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 363
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 257

    encaps_list  ->  encaps_list '{' .   (rule 318)

    $default	reduce using rule 318 (encaps_list)



state 258

    encaps_list  ->  encaps_list '}' .   (rule 319)

    $default	reduce using rule 319 (encaps_list)



state 259

    encaps_list  ->  encaps_list ']' .   (rule 317)

    $default	reduce using rule 317 (encaps_list)



state 260

    encaps_list  ->  encaps_list encaps_var .   (rule 310)

    $default	reduce using rule 310 (encaps_list)



state 261

    unticked_statement  ->  '{' inner_statement_list '}' .   (rule 13)

    $default	reduce using rule 13 (unticked_statement)



state 262

    inner_statement_list  ->  inner_statement_list @2 . inner_statement   (rule 8)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_OLD_FUNCTION	shift, and go to state 40
    T_FUNCTION	shift, and go to state 41
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    inner_statement	go to state 364
    statement	go to state 365
    unticked_statement	go to state 66
    declaration_statement	go to state 366
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 263

    expr_without_variable  ->  '(' expr ')' .   (rule 207)

    $default	reduce using rule 207 (expr_without_variable)



state 264

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    compound_variable  ->  '$' '{' expr . '}'   (rule 278)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 367



state 265

    expr_without_variable  ->  '`' encaps_list '`' .   (rule 225)

    $default	reduce using rule 225 (expr_without_variable)



state 266

    scalar  ->  '\"' encaps_list '\"' .   (rule 253)

    $default	reduce using rule 253 (scalar)



state 267

    scalar  ->  '\'' encaps_list '\'' .   (rule 254)

    $default	reduce using rule 254 (scalar)



state 268

    expr_without_variable  ->  expr T_LOGICAL_OR @37 . expr   (rule 180)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 368
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 269

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr T_LOGICAL_XOR expr .   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 183 (expr_without_variable)



state 270

    expr_without_variable  ->  expr T_LOGICAL_AND @38 . expr   (rule 182)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 369
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 271

    expr_without_variable  ->  expr '?' @39 . expr ':' @40 expr   (rule 210)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 370
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 272

    expr_without_variable  ->  expr T_BOOLEAN_OR @35 . expr   (rule 176)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 371
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 273

    expr_without_variable  ->  expr T_BOOLEAN_AND @36 . expr   (rule 178)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 372
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 274

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr '|' expr .   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 184 (expr_without_variable)



state 275

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr '^' expr .   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 186 (expr_without_variable)



state 276

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr '&' expr .   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 185 (expr_without_variable)



state 277

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr T_IS_EQUAL expr .   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 201 (expr_without_variable)



state 278

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr T_IS_NOT_EQUAL expr .   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 202 (expr_without_variable)



state 279

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr T_IS_IDENTICAL expr .   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 199 (expr_without_variable)



state 280

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL expr .   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 200 (expr_without_variable)



state 281

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr '<' expr .   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 203 (expr_without_variable)



state 282

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL expr .   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 204 (expr_without_variable)



state 283

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr '>' expr .   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 205 (expr_without_variable)



state 284

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL expr .   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 206 (expr_without_variable)



state 285

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr T_SL expr .   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 193 (expr_without_variable)



state 286

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr T_SR expr .   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 194 (expr_without_variable)



state 287

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr '+' expr .   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 188 (expr_without_variable)



state 288

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr '-' expr .   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 189 (expr_without_variable)



state 289

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr '.' expr .   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 187 (expr_without_variable)



state 290

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr '*' expr .   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)


    $default	reduce using rule 190 (expr_without_variable)



state 291

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr '/' expr .   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)


    $default	reduce using rule 191 (expr_without_variable)



state 292

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr '%' expr .   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)


    $default	reduce using rule 192 (expr_without_variable)



state 293

    function_call  ->  r_cvar '(' @43 . function_call_parameter_list ')'   (rule 230)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 317
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 114 (function_call_parameter_list)

    function_call_parameter_list	go to state 373
    non_empty_function_call_parameter_list	go to state 319
    expr_without_variable	go to state 320
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 321
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 294

    expr_without_variable  ->  cvar '=' '&' . w_cvar   (rule 156)
    expr_without_variable  ->  cvar '=' '&' . function_call   (rule 157)

    T_STRING	shift, and go to state 374
    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    function_call	go to state 375
    r_cvar	go to state 376
    w_cvar	go to state 377
    cvar	go to state 378
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 295

    expr_without_variable  ->  cvar '=' expr .   (rule 155)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 155 (expr_without_variable)



state 296

    expr_without_variable  ->  cvar T_PLUS_EQUAL expr .   (rule 160)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 160 (expr_without_variable)



state 297

    expr_without_variable  ->  cvar T_MINUS_EQUAL expr .   (rule 161)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 161 (expr_without_variable)



state 298

    expr_without_variable  ->  cvar T_MUL_EQUAL expr .   (rule 162)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 162 (expr_without_variable)



state 299

    expr_without_variable  ->  cvar T_DIV_EQUAL expr .   (rule 163)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 163 (expr_without_variable)



state 300

    expr_without_variable  ->  cvar T_CONCAT_EQUAL expr .   (rule 164)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 164 (expr_without_variable)



state 301

    expr_without_variable  ->  cvar T_MOD_EQUAL expr .   (rule 165)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 165 (expr_without_variable)



state 302

    expr_without_variable  ->  cvar T_AND_EQUAL expr .   (rule 166)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 166 (expr_without_variable)



state 303

    expr_without_variable  ->  cvar T_OR_EQUAL expr .   (rule 167)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 167 (expr_without_variable)



state 304

    expr_without_variable  ->  cvar T_XOR_EQUAL expr .   (rule 168)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 168 (expr_without_variable)



state 305

    expr_without_variable  ->  cvar T_SL_EQUAL expr .   (rule 169)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 169 (expr_without_variable)



state 306

    expr_without_variable  ->  cvar T_SR_EQUAL expr .   (rule 170)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 170 (expr_without_variable)



state 307

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @45 . ref_list   (rule 271)

    T_STRING	shift, and go to state 379
    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 380
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 381
    reference_variable	go to state 78
    compound_variable	go to state 79
    ref_list	go to state 382
    object_property	go to state 383
    object_dim_list	go to state 384
    variable_name	go to state 385
    simple_indirect_reference	go to state 80



state 308

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    dim_offset  ->  expr .   (rule 280)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 280 (dim_offset)



state 309

    reference_variable  ->  reference_variable '[' dim_offset . ']'   (rule 274)

    ']' 	shift, and go to state 386



state 310

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    reference_variable  ->  reference_variable '{' expr . '}'   (rule 275)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 387



state 311

    internal_functions_in_yacc  ->  T_EVAL '(' expr ')' .   (rule 336)

    $default	reduce using rule 336 (internal_functions_in_yacc)



state 312

    ctor_arguments  ->  '(' . function_call_parameter_list ')'   (rule 237)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 317
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 114 (function_call_parameter_list)

    function_call_parameter_list	go to state 388
    non_empty_function_call_parameter_list	go to state 319
    expr_without_variable	go to state 320
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 321
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 313

    expr_without_variable  ->  T_NEW class_name @34 ctor_arguments .   (rule 159)

    $default	reduce using rule 159 (expr_without_variable)



state 314

    exit_expr  ->  '(' expr ')' .   (rule 235)

    $default	reduce using rule 235 (exit_expr)



state 315

    unticked_statement  ->  T_IF '(' expr ')' . @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr ')' . ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    ':' 	shift, and go to state 389

    $default	reduce using rule 14 (@3)

    @3  	go to state 390



state 316

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @44 function_call_parameter_list ')'   (rule 232)

    $default	reduce using rule 231 (@44)

    @44 	go to state 391



state 317

    non_empty_function_call_parameter_list  ->  '&' . w_cvar   (rule 117)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 392
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 318

    function_call  ->  T_STRING '(' @42 function_call_parameter_list . ')'   (rule 228)

    ')' 	shift, and go to state 393



state 319

    function_call_parameter_list  ->  non_empty_function_call_parameter_list .   (rule 113)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' expr_without_variable   (rule 118)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' cvar   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' '&' w_cvar   (rule 120)

    ',' 	shift, and go to state 394

    $default	reduce using rule 113 (function_call_parameter_list)



state 320

    non_empty_function_call_parameter_list  ->  expr_without_variable .   (rule 115)
    expr  ->  expr_without_variable .   (rule 265)

    ',' 	reduce using rule 115 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 115 (non_empty_function_call_parameter_list)
    $default	reduce using rule 265 (expr)



state 321

    non_empty_function_call_parameter_list  ->  cvar .   (rule 116)
    expr_without_variable  ->  cvar . '=' expr   (rule 155)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 157)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 170)
    r_cvar  ->  cvar .   (rule 266)
    rw_cvar  ->  cvar .   (rule 268)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    T_XOR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    ',' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 268 (rw_cvar)
    T_DEC	reduce using rule 268 (rw_cvar)
    ')' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    $default	reduce using rule 266 (r_cvar)



state 322

    echo_expr_list  ->  echo_expr_list ',' expr .   (rule 146)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 146 (echo_expr_list)



state 323

    unticked_statement  ->  T_DO @9 statement T_WHILE . '(' @10 expr ')' ';'   (rule 25)

    '(' 	shift, and go to state 395



state 324

    unticked_statement  ->  T_WHILE '(' @7 expr . ')' @8 while_statement   (rule 22)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 396



state 325

    unticked_statement  ->  T_FOR '(' for_expr ';' . @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 26 (@11)

    @11 	go to state 397



state 326

    non_empty_for_expr  ->  non_empty_for_expr ',' . @32 expr   (rule 151)

    $default	reduce using rule 150 (@32)

    @32 	go to state 398



state 327

    unticked_statement  ->  T_FOREACH '(' expr T_AS . @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    $default	reduce using rule 48 (@15)

    @15 	go to state 399



state 328

    declare_list  ->  T_STRING . '=' static_scalar   (rule 78)

    '=' 	shift, and go to state 400



state 329

    unticked_statement  ->  T_DECLARE @17 '(' declare_list . ')' declare_statement   (rule 52)
    declare_list  ->  declare_list . ',' T_STRING '=' static_scalar   (rule 79)

    ',' 	shift, and go to state 401
    ')' 	shift, and go to state 402



state 330

    unticked_statement  ->  T_SWITCH '(' expr ')' . @14 switch_case_list   (rule 31)

    $default	reduce using rule 30 (@14)

    @14 	go to state 403



state 331

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING . @21 parameter_list '(' inner_statement_list ')' ';'   (rule 65)

    $default	reduce using rule 64 (@21)

    @21 	go to state 404



state 332

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING . @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    $default	reduce using rule 61 (@19)

    @19 	go to state 405



state 333

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING ')' .   (rule 58)

    $default	reduce using rule 58 (use_filename)



state 334

    global_var  ->  '$' '{' expr . '}'   (rule 125)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 406



state 335

    global_var_list  ->  global_var_list ',' global_var .   (rule 121)

    $default	reduce using rule 121 (global_var_list)



state 336

    static_scalar  ->  '+' . static_scalar   (rule 247)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 407



state 337

    static_scalar  ->  '-' . static_scalar   (rule 248)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 408



state 338

    static_scalar  ->  T_STRING .   (rule 246)

    $default	reduce using rule 246 (static_scalar)



state 339

    static_scalar  ->  T_ARRAY . '(' static_array_pair_list ')'   (rule 249)

    '(' 	shift, and go to state 409



state 340

    static_scalar  ->  common_scalar .   (rule 245)

    $default	reduce using rule 245 (static_scalar)



state 341

    static_var_list  ->  T_VARIABLE '=' static_scalar .   (rule 129)

    $default	reduce using rule 129 (static_var_list)



state 342

    static_var_list  ->  static_var_list ',' T_VARIABLE .   (rule 126)
    static_var_list  ->  static_var_list ',' T_VARIABLE . '=' static_scalar   (rule 127)

    '=' 	shift, and go to state 410

    $default	reduce using rule 126 (static_var_list)



state 343

    unset_variables  ->  unset_variables ',' . unset_variable   (rule 55)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    unset_variable	go to state 411
    cvar	go to state 236
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 344

    unticked_statement  ->  T_UNSET '(' unset_variables ')' . ';'   (rule 47)

    ';' 	shift, and go to state 412



state 345

    internal_functions_in_yacc  ->  T_ISSET '(' cvar ')' .   (rule 332)

    $default	reduce using rule 332 (internal_functions_in_yacc)



state 346

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar ')' .   (rule 333)

    $default	reduce using rule 333 (internal_functions_in_yacc)



state 347

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING . @23 '{' class_statement_list '}'   (rule 69)

    $default	reduce using rule 68 (@23)

    @23 	go to state 413



state 348

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' . class_statement_list '}'   (rule 67)

    $default	reduce using rule 131 (class_statement_list)

    class_statement_list	go to state 414



state 349

    assignment_list_element  ->  T_LIST . '(' @48 assignment_list ')'   (rule 298)

    '(' 	shift, and go to state 415



state 350

    assignment_list_element  ->  cvar .   (rule 296)

    $default	reduce using rule 296 (assignment_list_element)



state 351

    expr_without_variable  ->  T_LIST '(' @33 assignment_list . ')' '=' expr   (rule 154)
    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 294)

    ',' 	shift, and go to state 416
    ')' 	shift, and go to state 417



state 352

    assignment_list  ->  assignment_list_element .   (rule 295)

    $default	reduce using rule 295 (assignment_list)



state 353

    non_empty_array_pair_list  ->  '&' w_cvar .   (rule 309)

    $default	reduce using rule 309 (non_empty_array_pair_list)



state 354

    w_cvar  ->  cvar .   (rule 267)

    $default	reduce using rule 267 (w_cvar)



state 355

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . expr   (rule 304)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . '&' w_cvar   (rule 308)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 418
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 419
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 356

    expr_without_variable  ->  T_ARRAY '(' array_pair_list ')' .   (rule 224)

    $default	reduce using rule 224 (expr_without_variable)



state 357

    possible_comma  ->  ',' .   (rule 259)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr   (rule 302)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_cvar   (rule 306)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . '&' w_cvar   (rule 307)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 420
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 259 (possible_comma)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 421
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 358

    array_pair_list  ->  non_empty_array_pair_list possible_comma .   (rule 301)

    $default	reduce using rule 301 (array_pair_list)



state 359

    encaps_var  ->  T_VARIABLE '[' . @49 encaps_var_offset ']'   (rule 324)

    $default	reduce using rule 323 (@49)

    @49 	go to state 422



state 360

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR . T_STRING   (rule 325)

    T_STRING	shift, and go to state 423



state 361

    scalar  ->  T_STRING_VARNAME .   (rule 251)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'   (rule 327)

    '[' 	shift, and go to state 424

    $default	reduce using rule 251 (scalar)



state 362

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr . '}'   (rule 326)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 425



state 363

    encaps_var  ->  T_CURLY_OPEN cvar . '}'   (rule 328)

    '}' 	shift, and go to state 426



state 364

    inner_statement_list  ->  inner_statement_list @2 inner_statement .   (rule 8)

    $default	reduce using rule 8 (inner_statement_list)



state 365

    inner_statement  ->  statement .   (rule 10)

    $default	reduce using rule 10 (inner_statement)



state 366

    inner_statement  ->  declaration_statement .   (rule 11)

    $default	reduce using rule 11 (inner_statement)



state 367

    compound_variable  ->  '$' '{' expr '}' .   (rule 278)

    $default	reduce using rule 278 (compound_variable)



state 368

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr T_LOGICAL_OR @37 expr .   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 180 (expr_without_variable)



state 369

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr T_LOGICAL_AND @38 expr .   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 182 (expr_without_variable)



state 370

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  expr '?' @39 expr . ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 427
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 371

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr T_BOOLEAN_OR @35 expr .   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 176 (expr_without_variable)



state 372

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr T_BOOLEAN_AND @36 expr .   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 178 (expr_without_variable)



state 373

    function_call  ->  r_cvar '(' @43 function_call_parameter_list . ')'   (rule 230)

    ')' 	shift, and go to state 428



state 374

    function_call  ->  T_STRING . '(' @42 function_call_parameter_list ')'   (rule 228)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'   (rule 232)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 108
    '(' 	shift, and go to state 109



state 375

    expr_without_variable  ->  cvar '=' '&' function_call .   (rule 157)

    $default	reduce using rule 157 (expr_without_variable)



state 376

    function_call  ->  r_cvar . '(' @43 function_call_parameter_list ')'   (rule 230)

    '(' 	shift, and go to state 178



state 377

    expr_without_variable  ->  cvar '=' '&' w_cvar .   (rule 156)

    $default	reduce using rule 156 (expr_without_variable)



state 378

    r_cvar  ->  cvar .   (rule 266)
    w_cvar  ->  cvar .   (rule 267)

    '(' 	reduce using rule 266 (r_cvar)
    $default	reduce using rule 267 (w_cvar)



state 379

    variable_name  ->  T_STRING .   (rule 290)

    $default	reduce using rule 290 (variable_name)



state 380

    variable_name  ->  '{' . expr '}'   (rule 291)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 429
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 381

    object_property  ->  cvar_without_objects . @47   (rule 286)

    $default	reduce using rule 285 (@47)

    @47 	go to state 430



state 382

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @45 ref_list .   (rule 271)
    ref_list  ->  ref_list . T_OBJECT_OPERATOR @46 object_property   (rule 283)

    T_OBJECT_OPERATOR	shift, and go to state 431

    $default	reduce using rule 271 (cvar)



state 383

    ref_list  ->  object_property .   (rule 281)

    $default	reduce using rule 281 (ref_list)



state 384

    object_property  ->  object_dim_list .   (rule 284)
    object_dim_list  ->  object_dim_list . '[' dim_offset ']'   (rule 287)
    object_dim_list  ->  object_dim_list . '{' expr '}'   (rule 288)

    '[' 	shift, and go to state 432
    '{' 	shift, and go to state 433

    $default	reduce using rule 284 (object_property)



state 385

    object_dim_list  ->  variable_name .   (rule 289)

    $default	reduce using rule 289 (object_dim_list)



state 386

    reference_variable  ->  reference_variable '[' dim_offset ']' .   (rule 274)

    $default	reduce using rule 274 (reference_variable)



state 387

    reference_variable  ->  reference_variable '{' expr '}' .   (rule 275)

    $default	reduce using rule 275 (reference_variable)



state 388

    ctor_arguments  ->  '(' function_call_parameter_list . ')'   (rule 237)

    ')' 	shift, and go to state 434



state 389

    unticked_statement  ->  T_IF '(' expr ')' ':' . @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 17 (@5)

    @5  	go to state 435



state 390

    unticked_statement  ->  T_IF '(' expr ')' @3 . statement @4 elseif_list else_single   (rule 16)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 436
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 391

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 . function_call_parameter_list ')'   (rule 232)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 317
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 114 (function_call_parameter_list)

    function_call_parameter_list	go to state 437
    non_empty_function_call_parameter_list	go to state 319
    expr_without_variable	go to state 320
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 321
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 392

    non_empty_function_call_parameter_list  ->  '&' w_cvar .   (rule 117)

    $default	reduce using rule 117 (non_empty_function_call_parameter_list)



state 393

    function_call  ->  T_STRING '(' @42 function_call_parameter_list ')' .   (rule 228)

    $default	reduce using rule 228 (function_call)



state 394

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . expr_without_variable   (rule 118)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . cvar   (rule 119)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . '&' w_cvar   (rule 120)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 438
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 439
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 440
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 395

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' . @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 24 (@10)

    @10 	go to state 441



state 396

    unticked_statement  ->  T_WHILE '(' @7 expr ')' . @8 while_statement   (rule 22)

    $default	reduce using rule 21 (@8)

    @8  	go to state 442



state 397

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 . for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 148 (for_expr)

    for_expr	go to state 443
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 398

    non_empty_for_expr  ->  non_empty_for_expr ',' @32 . expr   (rule 151)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 444
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 399

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 . w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 445
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 400

    declare_list  ->  T_STRING '=' . static_scalar   (rule 78)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 446



state 401

    declare_list  ->  declare_list ',' . T_STRING '=' static_scalar   (rule 79)

    T_STRING	shift, and go to state 447



state 402

    unticked_statement  ->  T_DECLARE @17 '(' declare_list ')' . declare_statement   (rule 52)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 448
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 449
    unticked_statement	go to state 66
    declare_statement	go to state 450
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 403

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 . switch_case_list   (rule 31)

    ':' 	shift, and go to state 451
    '{' 	shift, and go to state 452

    switch_case_list	go to state 453



state 404

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 . parameter_list '(' inner_statement_list ')' ';'   (rule 65)

    '&' 	shift, and go to state 454
    T_VARIABLE	shift, and go to state 455
    T_CONST	shift, and go to state 456

    $default	reduce using rule 104 (parameter_list)

    parameter_list	go to state 457
    non_empty_parameter_list	go to state 458



state 405

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    '(' 	shift, and go to state 459



state 406

    global_var  ->  '$' '{' expr '}' .   (rule 125)

    $default	reduce using rule 125 (global_var)



state 407

    static_scalar  ->  '+' static_scalar .   (rule 247)

    $default	reduce using rule 247 (static_scalar)



state 408

    static_scalar  ->  '-' static_scalar .   (rule 248)

    $default	reduce using rule 248 (static_scalar)



state 409

    static_scalar  ->  T_ARRAY '(' . static_array_pair_list ')'   (rule 249)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 256 (static_array_pair_list)

    common_scalar	go to state 340
    static_scalar	go to state 460
    static_array_pair_list	go to state 461
    non_empty_static_array_pair_list	go to state 462



state 410

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' . static_scalar   (rule 127)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 463



state 411

    unset_variables  ->  unset_variables ',' unset_variable .   (rule 55)

    $default	reduce using rule 55 (unset_variables)



state 412

    unticked_statement  ->  T_UNSET '(' unset_variables ')' ';' .   (rule 47)

    $default	reduce using rule 47 (unticked_statement)



state 413

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 . '{' class_statement_list '}'   (rule 69)

    '{' 	shift, and go to state 464



state 414

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' class_statement_list . '}'   (rule 67)
    class_statement_list  ->  class_statement_list . class_statement   (rule 130)

    T_OLD_FUNCTION	shift, and go to state 465
    T_FUNCTION	shift, and go to state 466
    T_VAR	shift, and go to state 467
    '}' 	shift, and go to state 468

    class_statement	go to state 469



state 415

    assignment_list_element  ->  T_LIST '(' . @48 assignment_list ')'   (rule 298)

    $default	reduce using rule 297 (@48)

    @48 	go to state 470



state 416

    assignment_list  ->  assignment_list ',' . assignment_list_element   (rule 294)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 349
    '$' 	shift, and go to state 60

    $default	reduce using rule 299 (assignment_list_element)

    cvar	go to state 350
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list_element	go to state 471



state 417

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' . '=' expr   (rule 154)

    '=' 	shift, and go to state 472



state 418

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' . w_cvar   (rule 308)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 473
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 419

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW expr .   (rule 304)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 304 (non_empty_array_pair_list)



state 420

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' . w_cvar   (rule 307)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 474
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 421

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr   (rule 302)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr .   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_cvar   (rule 306)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 475

    $default	reduce using rule 303 (non_empty_array_pair_list)



state 422

    encaps_var  ->  T_VARIABLE '[' @49 . encaps_var_offset ']'   (rule 324)

    T_STRING	shift, and go to state 476
    T_VARIABLE	shift, and go to state 477
    T_NUM_STRING	shift, and go to state 478

    encaps_var_offset	go to state 479



state 423

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR T_STRING .   (rule 325)

    $default	reduce using rule 325 (encaps_var)



state 424

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'   (rule 327)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 480
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 425

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr '}' .   (rule 326)

    $default	reduce using rule 326 (encaps_var)



state 426

    encaps_var  ->  T_CURLY_OPEN cvar '}' .   (rule 328)

    $default	reduce using rule 328 (encaps_var)



state 427

    expr_without_variable  ->  expr '?' @39 expr ':' . @40 expr   (rule 210)

    $default	reduce using rule 209 (@40)

    @40 	go to state 481



state 428

    function_call  ->  r_cvar '(' @43 function_call_parameter_list ')' .   (rule 230)

    $default	reduce using rule 230 (function_call)



state 429

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    variable_name  ->  '{' expr . '}'   (rule 291)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 482



state 430

    object_property  ->  cvar_without_objects @47 .   (rule 286)

    $default	reduce using rule 286 (object_property)



state 431

    ref_list  ->  ref_list T_OBJECT_OPERATOR . @46 object_property   (rule 283)

    $default	reduce using rule 282 (@46)

    @46 	go to state 483



state 432

    object_dim_list  ->  object_dim_list '[' . dim_offset ']'   (rule 287)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 279 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 308
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 484
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 433

    object_dim_list  ->  object_dim_list '{' . expr '}'   (rule 288)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 485
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 434

    ctor_arguments  ->  '(' function_call_parameter_list ')' .   (rule 237)

    $default	reduce using rule 237 (ctor_arguments)



state 435

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 . inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 486



state 436

    unticked_statement  ->  T_IF '(' expr ')' @3 statement . @4 elseif_list else_single   (rule 16)

    $default	reduce using rule 15 (@4)

    @4  	go to state 487



state 437

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list . ')'   (rule 232)

    ')' 	shift, and go to state 488



state 438

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' . w_cvar   (rule 120)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 489
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 439

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' expr_without_variable .   (rule 118)
    expr  ->  expr_without_variable .   (rule 265)

    ',' 	reduce using rule 118 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 118 (non_empty_function_call_parameter_list)
    $default	reduce using rule 265 (expr)



state 440

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' cvar .   (rule 119)
    expr_without_variable  ->  cvar . '=' expr   (rule 155)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 156)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 157)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 167)
    expr_without_variable  ->  cvar . T_XOR_EQUAL expr   (rule 168)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 169)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 170)
    r_cvar  ->  cvar .   (rule 266)
    rw_cvar  ->  cvar .   (rule 268)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    T_XOR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    ',' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 268 (rw_cvar)
    T_DEC	reduce using rule 268 (rw_cvar)
    ')' 	reduce using rule 119 (non_empty_function_call_parameter_list)
    $default	reduce using rule 266 (r_cvar)



state 441

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 . expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 490
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 442

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 . while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 491
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 492
    unticked_statement	go to state 66
    while_statement	go to state 493
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 443

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr . ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 494



state 444

    non_empty_for_expr  ->  non_empty_for_expr ',' @32 expr .   (rule 151)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 151 (non_empty_for_expr)



state 445

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar . foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_DOUBLE_ARROW	shift, and go to state 495

    $default	reduce using rule 70 (foreach_optional_arg)

    foreach_optional_arg	go to state 496



state 446

    declare_list  ->  T_STRING '=' static_scalar .   (rule 78)

    $default	reduce using rule 78 (declare_list)



state 447

    declare_list  ->  declare_list ',' T_STRING . '=' static_scalar   (rule 79)

    '=' 	shift, and go to state 497



state 448

    declare_statement  ->  ':' . inner_statement_list T_ENDDECLARE ';'   (rule 77)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 498



state 449

    declare_statement  ->  statement .   (rule 76)

    $default	reduce using rule 76 (declare_statement)



state 450

    unticked_statement  ->  T_DECLARE @17 '(' declare_list ')' declare_statement .   (rule 52)

    $default	reduce using rule 52 (unticked_statement)



state 451

    switch_case_list  ->  ':' . case_list T_ENDSWITCH ';'   (rule 82)
    switch_case_list  ->  ':' . ';' case_list T_ENDSWITCH ';'   (rule 83)

    ';' 	shift, and go to state 499

    $default	reduce using rule 84 (case_list)

    case_list	go to state 500



state 452

    switch_case_list  ->  '{' . case_list '}'   (rule 80)
    switch_case_list  ->  '{' . ';' case_list '}'   (rule 81)

    ';' 	shift, and go to state 501

    $default	reduce using rule 84 (case_list)

    case_list	go to state 502



state 453

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 switch_case_list .   (rule 31)

    $default	reduce using rule 31 (unticked_statement)



state 454

    non_empty_parameter_list  ->  '&' . T_VARIABLE   (rule 106)

    T_VARIABLE	shift, and go to state 503



state 455

    non_empty_parameter_list  ->  T_VARIABLE .   (rule 105)
    non_empty_parameter_list  ->  T_VARIABLE . '=' static_scalar   (rule 108)

    '=' 	shift, and go to state 504

    $default	reduce using rule 105 (non_empty_parameter_list)



state 456

    non_empty_parameter_list  ->  T_CONST . T_VARIABLE   (rule 107)

    T_VARIABLE	shift, and go to state 505



state 457

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list . '(' inner_statement_list ')' ';'   (rule 65)

    '(' 	shift, and go to state 506



state 458

    parameter_list  ->  non_empty_parameter_list .   (rule 103)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE   (rule 109)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' '&' T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_CONST T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE '=' static_scalar   (rule 112)

    ',' 	shift, and go to state 507

    $default	reduce using rule 103 (parameter_list)



state 459

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 62)

    '&' 	shift, and go to state 454
    T_VARIABLE	shift, and go to state 455
    T_CONST	shift, and go to state 456

    $default	reduce using rule 104 (parameter_list)

    parameter_list	go to state 508
    non_empty_parameter_list	go to state 458



state 460

    non_empty_static_array_pair_list  ->  static_scalar . T_DOUBLE_ARROW static_scalar   (rule 262)
    non_empty_static_array_pair_list  ->  static_scalar .   (rule 263)

    T_DOUBLE_ARROW	shift, and go to state 509

    $default	reduce using rule 263 (non_empty_static_array_pair_list)



state 461

    static_scalar  ->  T_ARRAY '(' static_array_pair_list . ')'   (rule 249)

    ')' 	shift, and go to state 510



state 462

    static_array_pair_list  ->  non_empty_static_array_pair_list . possible_comma   (rule 257)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar   (rule 260)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar   (rule 261)

    ',' 	shift, and go to state 511

    $default	reduce using rule 258 (possible_comma)

    possible_comma	go to state 512



state 463

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' static_scalar .   (rule 127)

    $default	reduce using rule 127 (static_var_list)



state 464

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' . class_statement_list '}'   (rule 69)

    $default	reduce using rule 131 (class_statement_list)

    class_statement_list	go to state 513



state 465

    class_statement  ->  T_OLD_FUNCTION . @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 138)

    $default	reduce using rule 136 (@30)

    @30 	go to state 514



state 466

    class_statement  ->  T_FUNCTION . @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    $default	reduce using rule 133 (@28)

    @28 	go to state 515



state 467

    class_statement  ->  T_VAR . class_variable_decleration ';'   (rule 132)

    T_VARIABLE	shift, and go to state 516

    class_variable_decleration	go to state 517



state 468

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' class_statement_list '}' .   (rule 67)

    $default	reduce using rule 67 (unticked_declaration_statement)



state 469

    class_statement_list  ->  class_statement_list class_statement .   (rule 130)

    $default	reduce using rule 130 (class_statement_list)



state 470

    assignment_list_element  ->  T_LIST '(' @48 . assignment_list ')'   (rule 298)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 349
    '$' 	shift, and go to state 60

    $default	reduce using rule 299 (assignment_list_element)

    cvar	go to state 350
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 518
    assignment_list_element	go to state 352



state 471

    assignment_list  ->  assignment_list ',' assignment_list_element .   (rule 294)

    $default	reduce using rule 294 (assignment_list)



state 472

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' '=' . expr   (rule 154)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 519
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 473

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' w_cvar .   (rule 308)

    $default	reduce using rule 308 (non_empty_array_pair_list)



state 474

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' w_cvar .   (rule 307)

    $default	reduce using rule 307 (non_empty_array_pair_list)



state 475

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr   (rule 302)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_cvar   (rule 306)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 520
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 521
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 476

    encaps_var_offset  ->  T_STRING .   (rule 329)

    $default	reduce using rule 329 (encaps_var_offset)



state 477

    encaps_var_offset  ->  T_VARIABLE .   (rule 331)

    $default	reduce using rule 331 (encaps_var_offset)



state 478

    encaps_var_offset  ->  T_NUM_STRING .   (rule 330)

    $default	reduce using rule 330 (encaps_var_offset)



state 479

    encaps_var  ->  T_VARIABLE '[' @49 encaps_var_offset . ']'   (rule 324)

    ']' 	shift, and go to state 522



state 480

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'   (rule 327)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ']' 	shift, and go to state 523



state 481

    expr_without_variable  ->  expr '?' @39 expr ':' @40 . expr   (rule 210)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 524
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 482

    variable_name  ->  '{' expr '}' .   (rule 291)

    $default	reduce using rule 291 (variable_name)



state 483

    ref_list  ->  ref_list T_OBJECT_OPERATOR @46 . object_property   (rule 283)

    T_STRING	shift, and go to state 379
    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 380
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 381
    reference_variable	go to state 78
    compound_variable	go to state 79
    object_property	go to state 525
    object_dim_list	go to state 384
    variable_name	go to state 385
    simple_indirect_reference	go to state 80



state 484

    object_dim_list  ->  object_dim_list '[' dim_offset . ']'   (rule 287)

    ']' 	shift, and go to state 526



state 485

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    object_dim_list  ->  object_dim_list '{' expr . '}'   (rule 288)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 527



state 486

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list . @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_ELSEIF	reduce using rule 18 (@6)
    T_ELSE	reduce using rule 18 (@6)
    T_ENDIF	reduce using rule 18 (@6)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262
    @6  	go to state 528



state 487

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 . elseif_list else_single   (rule 16)

    $default	reduce using rule 93 (elseif_list)

    elseif_list	go to state 529



state 488

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')' .   (rule 232)

    $default	reduce using rule 232 (function_call)



state 489

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' w_cvar .   (rule 120)

    $default	reduce using rule 120 (non_empty_function_call_parameter_list)



state 490

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr . ')' ';'   (rule 25)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 530



state 491

    while_statement  ->  ':' . inner_statement_list T_ENDWHILE ';'   (rule 92)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 531



state 492

    while_statement  ->  statement .   (rule 91)

    $default	reduce using rule 91 (while_statement)



state 493

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 while_statement .   (rule 22)

    $default	reduce using rule 22 (unticked_statement)



state 494

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' . @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 27 (@12)

    @12 	go to state 532



state 495

    foreach_optional_arg  ->  T_DOUBLE_ARROW . w_cvar   (rule 71)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 533
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 496

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg . ')' @16 foreach_statement   (rule 50)

    ')' 	shift, and go to state 534



state 497

    declare_list  ->  declare_list ',' T_STRING '=' . static_scalar   (rule 79)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 535



state 498

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    declare_statement  ->  ':' inner_statement_list . T_ENDDECLARE ';'   (rule 77)

    T_ENDDECLARE	shift, and go to state 536

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 499

    switch_case_list  ->  ':' ';' . case_list T_ENDSWITCH ';'   (rule 83)

    $default	reduce using rule 84 (case_list)

    case_list	go to state 537



state 500

    switch_case_list  ->  ':' case_list . T_ENDSWITCH ';'   (rule 82)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 86)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 88)

    T_ENDSWITCH	shift, and go to state 538
    T_CASE	shift, and go to state 539
    T_DEFAULT	shift, and go to state 540



state 501

    switch_case_list  ->  '{' ';' . case_list '}'   (rule 81)

    $default	reduce using rule 84 (case_list)

    case_list	go to state 541



state 502

    switch_case_list  ->  '{' case_list . '}'   (rule 80)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 86)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 88)

    T_CASE	shift, and go to state 539
    T_DEFAULT	shift, and go to state 540
    '}' 	shift, and go to state 542



state 503

    non_empty_parameter_list  ->  '&' T_VARIABLE .   (rule 106)

    $default	reduce using rule 106 (non_empty_parameter_list)



state 504

    non_empty_parameter_list  ->  T_VARIABLE '=' . static_scalar   (rule 108)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 543



state 505

    non_empty_parameter_list  ->  T_CONST T_VARIABLE .   (rule 107)

    $default	reduce using rule 107 (non_empty_parameter_list)



state 506

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' . inner_statement_list ')' ';'   (rule 65)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 544



state 507

    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE   (rule 109)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . '&' T_VARIABLE   (rule 110)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_CONST T_VARIABLE   (rule 111)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE '=' static_scalar   (rule 112)

    '&' 	shift, and go to state 545
    T_VARIABLE	shift, and go to state 546
    T_CONST	shift, and go to state 547



state 508

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 62)

    ')' 	shift, and go to state 548



state 509

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW . static_scalar   (rule 262)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 549



state 510

    static_scalar  ->  T_ARRAY '(' static_array_pair_list ')' .   (rule 249)

    $default	reduce using rule 249 (static_scalar)



state 511

    possible_comma  ->  ',' .   (rule 259)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar   (rule 260)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar   (rule 261)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 259 (possible_comma)

    common_scalar	go to state 340
    static_scalar	go to state 550



state 512

    static_array_pair_list  ->  non_empty_static_array_pair_list possible_comma .   (rule 257)

    $default	reduce using rule 257 (static_array_pair_list)



state 513

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list . '}'   (rule 69)
    class_statement_list  ->  class_statement_list . class_statement   (rule 130)

    T_OLD_FUNCTION	shift, and go to state 465
    T_FUNCTION	shift, and go to state 466
    T_VAR	shift, and go to state 467
    '}' 	shift, and go to state 551

    class_statement	go to state 469



state 514

    class_statement  ->  T_OLD_FUNCTION @30 . is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 138)

    '&' 	shift, and go to state 218

    $default	reduce using rule 139 (is_reference)

    is_reference	go to state 552



state 515

    class_statement  ->  T_FUNCTION @28 . is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    '&' 	shift, and go to state 218

    $default	reduce using rule 139 (is_reference)

    is_reference	go to state 553



state 516

    class_variable_decleration  ->  T_VARIABLE .   (rule 143)
    class_variable_decleration  ->  T_VARIABLE . '=' static_scalar   (rule 144)

    '=' 	shift, and go to state 554

    $default	reduce using rule 143 (class_variable_decleration)



state 517

    class_statement  ->  T_VAR class_variable_decleration . ';'   (rule 132)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE   (rule 141)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE '=' static_scalar   (rule 142)

    ',' 	shift, and go to state 555
    ';' 	shift, and go to state 556



state 518

    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 294)
    assignment_list_element  ->  T_LIST '(' @48 assignment_list . ')'   (rule 298)

    ',' 	shift, and go to state 416
    ')' 	shift, and go to state 557



state 519

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' '=' expr .   (rule 154)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 154 (expr_without_variable)



state 520

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_cvar   (rule 306)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 558
    cvar	go to state 354
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 521

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .   (rule 302)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 302 (non_empty_array_pair_list)



state 522

    encaps_var  ->  T_VARIABLE '[' @49 encaps_var_offset ']' .   (rule 324)

    $default	reduce using rule 324 (encaps_var)



state 523

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'   (rule 327)

    '}' 	shift, and go to state 559



state 524

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)
    expr_without_variable  ->  expr '?' @39 expr ':' @40 expr .   (rule 210)

    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 210 (expr_without_variable)



state 525

    ref_list  ->  ref_list T_OBJECT_OPERATOR @46 object_property .   (rule 283)

    $default	reduce using rule 283 (ref_list)



state 526

    object_dim_list  ->  object_dim_list '[' dim_offset ']' .   (rule 287)

    $default	reduce using rule 287 (object_dim_list)



state 527

    object_dim_list  ->  object_dim_list '{' expr '}' .   (rule 288)

    $default	reduce using rule 288 (object_dim_list)



state 528

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 . new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 96 (new_elseif_list)

    new_elseif_list	go to state 560



state 529

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list . else_single   (rule 16)
    elseif_list  ->  elseif_list . T_ELSEIF '(' expr ')' @26 statement   (rule 95)

    T_ELSEIF	shift, and go to state 561
    T_ELSE	shift, and go to state 562

    T_ELSEIF	[reduce using rule 99 (else_single)]
    T_ELSE	[reduce using rule 99 (else_single)]
    $default	reduce using rule 99 (else_single)

    else_single	go to state 563



state 530

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' . ';'   (rule 25)

    ';' 	shift, and go to state 564



state 531

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    while_statement  ->  ':' inner_statement_list . T_ENDWHILE ';'   (rule 92)

    T_ENDWHILE	shift, and go to state 565

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 532

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 . for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    $default	reduce using rule 148 (for_expr)

    for_expr	go to state 566
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 533

    foreach_optional_arg  ->  T_DOUBLE_ARROW w_cvar .   (rule 71)

    $default	reduce using rule 71 (foreach_optional_arg)



state 534

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' . @16 foreach_statement   (rule 50)

    $default	reduce using rule 49 (@16)

    @16 	go to state 567



state 535

    declare_list  ->  declare_list ',' T_STRING '=' static_scalar .   (rule 79)

    $default	reduce using rule 79 (declare_list)



state 536

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE . ';'   (rule 77)

    ';' 	shift, and go to state 568



state 537

    switch_case_list  ->  ':' ';' case_list . T_ENDSWITCH ';'   (rule 83)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 86)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 88)

    T_ENDSWITCH	shift, and go to state 569
    T_CASE	shift, and go to state 539
    T_DEFAULT	shift, and go to state 540



state 538

    switch_case_list  ->  ':' case_list T_ENDSWITCH . ';'   (rule 82)

    ';' 	shift, and go to state 570



state 539

    case_list  ->  case_list T_CASE . expr case_separator @24 inner_statement_list   (rule 86)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 571
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 540

    case_list  ->  case_list T_DEFAULT . case_separator @25 inner_statement_list   (rule 88)

    ':' 	shift, and go to state 572
    ';' 	shift, and go to state 573

    case_separator	go to state 574



state 541

    switch_case_list  ->  '{' ';' case_list . '}'   (rule 81)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 86)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 88)

    T_CASE	shift, and go to state 539
    T_DEFAULT	shift, and go to state 540
    '}' 	shift, and go to state 575



state 542

    switch_case_list  ->  '{' case_list '}' .   (rule 80)

    $default	reduce using rule 80 (switch_case_list)



state 543

    non_empty_parameter_list  ->  T_VARIABLE '=' static_scalar .   (rule 108)

    $default	reduce using rule 108 (non_empty_parameter_list)



state 544

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list . ')' ';'   (rule 65)

    ')' 	shift, and go to state 576

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 545

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' . T_VARIABLE   (rule 110)

    T_VARIABLE	shift, and go to state 577



state 546

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE .   (rule 109)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE . '=' static_scalar   (rule 112)

    '=' 	shift, and go to state 578

    $default	reduce using rule 109 (non_empty_parameter_list)



state 547

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST . T_VARIABLE   (rule 111)

    T_VARIABLE	shift, and go to state 579



state 548

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 62)

    '{' 	shift, and go to state 580



state 549

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW static_scalar .   (rule 262)

    $default	reduce using rule 262 (non_empty_static_array_pair_list)



state 550

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar   (rule 260)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar .   (rule 261)

    T_DOUBLE_ARROW	shift, and go to state 581

    $default	reduce using rule 261 (non_empty_static_array_pair_list)



state 551

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}' .   (rule 69)

    $default	reduce using rule 69 (unticked_declaration_statement)



state 552

    class_statement  ->  T_OLD_FUNCTION @30 is_reference . T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 138)

    T_STRING	shift, and go to state 582



state 553

    class_statement  ->  T_FUNCTION @28 is_reference . T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    T_STRING	shift, and go to state 583



state 554

    class_variable_decleration  ->  T_VARIABLE '=' . static_scalar   (rule 144)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 584



state 555

    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE   (rule 141)
    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE '=' static_scalar   (rule 142)

    T_VARIABLE	shift, and go to state 585



state 556

    class_statement  ->  T_VAR class_variable_decleration ';' .   (rule 132)

    $default	reduce using rule 132 (class_statement)



state 557

    assignment_list_element  ->  T_LIST '(' @48 assignment_list ')' .   (rule 298)

    $default	reduce using rule 298 (assignment_list_element)



state 558

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar .   (rule 306)

    $default	reduce using rule 306 (non_empty_array_pair_list)



state 559

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .   (rule 327)

    $default	reduce using rule 327 (encaps_var)



state 560

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list . new_else_single T_ENDIF ';'   (rule 19)
    new_elseif_list  ->  new_elseif_list . T_ELSEIF '(' expr ')' ':' @27 inner_statement_list   (rule 98)

    T_ELSEIF	shift, and go to state 586
    T_ELSE	shift, and go to state 587

    $default	reduce using rule 101 (new_else_single)

    new_else_single	go to state 588



state 561

    elseif_list  ->  elseif_list T_ELSEIF . '(' expr ')' @26 statement   (rule 95)

    '(' 	shift, and go to state 589



state 562

    else_single  ->  T_ELSE . statement   (rule 100)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 590
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 563

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list else_single .   (rule 16)

    $default	reduce using rule 16 (unticked_statement)



state 564

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' ';' .   (rule 25)

    $default	reduce using rule 25 (unticked_statement)



state 565

    while_statement  ->  ':' inner_statement_list T_ENDWHILE . ';'   (rule 92)

    ';' 	shift, and go to state 591



state 566

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr . ')' @13 for_statement   (rule 29)

    ')' 	shift, and go to state 592



state 567

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 . foreach_statement   (rule 50)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 593
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 594
    unticked_statement	go to state 66
    foreach_statement	go to state 595
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 568

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE ';' .   (rule 77)

    $default	reduce using rule 77 (declare_statement)



state 569

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH . ';'   (rule 83)

    ';' 	shift, and go to state 596



state 570

    switch_case_list  ->  ':' case_list T_ENDSWITCH ';' .   (rule 82)

    $default	reduce using rule 82 (switch_case_list)



state 571

    case_list  ->  case_list T_CASE expr . case_separator @24 inner_statement_list   (rule 86)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 572
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 573

    case_separator	go to state 597



state 572

    case_separator  ->  ':' .   (rule 89)

    $default	reduce using rule 89 (case_separator)



state 573

    case_separator  ->  ';' .   (rule 90)

    $default	reduce using rule 90 (case_separator)



state 574

    case_list  ->  case_list T_DEFAULT case_separator . @25 inner_statement_list   (rule 88)

    $default	reduce using rule 87 (@25)

    @25 	go to state 598



state 575

    switch_case_list  ->  '{' ';' case_list '}' .   (rule 81)

    $default	reduce using rule 81 (switch_case_list)



state 576

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' . ';'   (rule 65)

    ';' 	shift, and go to state 599



state 577

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' T_VARIABLE .   (rule 110)

    $default	reduce using rule 110 (non_empty_parameter_list)



state 578

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' . static_scalar   (rule 112)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 600



state 579

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST T_VARIABLE .   (rule 111)

    $default	reduce using rule 111 (non_empty_parameter_list)



state 580

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 62)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 601



state 581

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar   (rule 260)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 602



state 582

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING . @31 parameter_list '(' inner_statement_list ')' ';'   (rule 138)

    $default	reduce using rule 137 (@31)

    @31 	go to state 603



state 583

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING . @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    $default	reduce using rule 134 (@29)

    @29 	go to state 604



state 584

    class_variable_decleration  ->  T_VARIABLE '=' static_scalar .   (rule 144)

    $default	reduce using rule 144 (class_variable_decleration)



state 585

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE .   (rule 141)
    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE . '=' static_scalar   (rule 142)

    '=' 	shift, and go to state 605

    $default	reduce using rule 141 (class_variable_decleration)



state 586

    new_elseif_list  ->  new_elseif_list T_ELSEIF . '(' expr ')' ':' @27 inner_statement_list   (rule 98)

    '(' 	shift, and go to state 606



state 587

    new_else_single  ->  T_ELSE . ':' inner_statement_list   (rule 102)

    ':' 	shift, and go to state 607



state 588

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single . T_ENDIF ';'   (rule 19)

    T_ENDIF	shift, and go to state 608



state 589

    elseif_list  ->  elseif_list T_ELSEIF '(' . expr ')' @26 statement   (rule 95)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 609
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 590

    else_single  ->  T_ELSE statement .   (rule 100)

    $default	reduce using rule 100 (else_single)



state 591

    while_statement  ->  ':' inner_statement_list T_ENDWHILE ';' .   (rule 92)

    $default	reduce using rule 92 (while_statement)



state 592

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' . @13 for_statement   (rule 29)

    $default	reduce using rule 28 (@13)

    @13 	go to state 610



state 593

    foreach_statement  ->  ':' . inner_statement_list T_ENDFOREACH ';'   (rule 75)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 611



state 594

    foreach_statement  ->  statement .   (rule 74)

    $default	reduce using rule 74 (foreach_statement)



state 595

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement .   (rule 50)

    $default	reduce using rule 50 (unticked_statement)



state 596

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH ';' .   (rule 83)

    $default	reduce using rule 83 (switch_case_list)



state 597

    case_list  ->  case_list T_CASE expr case_separator . @24 inner_statement_list   (rule 86)

    $default	reduce using rule 85 (@24)

    @24 	go to state 612



state 598

    case_list  ->  case_list T_DEFAULT case_separator @25 . inner_statement_list   (rule 88)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 613



state 599

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';' .   (rule 65)

    $default	reduce using rule 65 (unticked_declaration_statement)



state 600

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' static_scalar .   (rule 112)

    $default	reduce using rule 112 (non_empty_parameter_list)



state 601

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 62)

    '}' 	shift, and go to state 614

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 602

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .   (rule 260)

    $default	reduce using rule 260 (non_empty_static_array_pair_list)



state 603

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 . parameter_list '(' inner_statement_list ')' ';'   (rule 138)

    '&' 	shift, and go to state 454
    T_VARIABLE	shift, and go to state 455
    T_CONST	shift, and go to state 456

    $default	reduce using rule 104 (parameter_list)

    parameter_list	go to state 615
    non_empty_parameter_list	go to state 458



state 604

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    '(' 	shift, and go to state 616



state 605

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' . static_scalar   (rule 142)

    '+' 	shift, and go to state 336
    '-' 	shift, and go to state 337
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 338
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 339
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 340
    static_scalar	go to state 617



state 606

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' . expr ')' ':' @27 inner_statement_list   (rule 98)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 618
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 607

    new_else_single  ->  T_ELSE ':' . inner_statement_list   (rule 102)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 619



state 608

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF . ';'   (rule 19)

    ';' 	shift, and go to state 620



state 609

    elseif_list  ->  elseif_list T_ELSEIF '(' expr . ')' @26 statement   (rule 95)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 621



state 610

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 . for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 622
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 623
    unticked_statement	go to state 66
    for_statement	go to state 624
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 611

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    foreach_statement  ->  ':' inner_statement_list . T_ENDFOREACH ';'   (rule 75)

    T_ENDFOREACH	shift, and go to state 625

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 612

    case_list  ->  case_list T_CASE expr case_separator @24 . inner_statement_list   (rule 86)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 626



state 613

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_DEFAULT case_separator @25 inner_statement_list .   (rule 88)

    T_ENDSWITCH	reduce using rule 88 (case_list)
    T_CASE	reduce using rule 88 (case_list)
    T_DEFAULT	reduce using rule 88 (case_list)
    '}' 	reduce using rule 88 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 614

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 62)

    $default	reduce using rule 62 (unticked_declaration_statement)



state 615

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list . '(' inner_statement_list ')' ';'   (rule 138)

    '(' 	shift, and go to state 627



state 616

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 135)

    '&' 	shift, and go to state 454
    T_VARIABLE	shift, and go to state 455
    T_CONST	shift, and go to state 456

    $default	reduce using rule 104 (parameter_list)

    parameter_list	go to state 628
    non_empty_parameter_list	go to state 458



state 617

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' static_scalar .   (rule 142)

    $default	reduce using rule 142 (class_variable_decleration)



state 618

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr . ')' ':' @27 inner_statement_list   (rule 98)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 176)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 178)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 180)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 182)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 183)
    expr_without_variable  ->  expr . '|' expr   (rule 184)
    expr_without_variable  ->  expr . '&' expr   (rule 185)
    expr_without_variable  ->  expr . '^' expr   (rule 186)
    expr_without_variable  ->  expr . '.' expr   (rule 187)
    expr_without_variable  ->  expr . '+' expr   (rule 188)
    expr_without_variable  ->  expr . '-' expr   (rule 189)
    expr_without_variable  ->  expr . '*' expr   (rule 190)
    expr_without_variable  ->  expr . '/' expr   (rule 191)
    expr_without_variable  ->  expr . '%' expr   (rule 192)
    expr_without_variable  ->  expr . T_SL expr   (rule 193)
    expr_without_variable  ->  expr . T_SR expr   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 199)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 202)
    expr_without_variable  ->  expr . '<' expr   (rule 203)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 204)
    expr_without_variable  ->  expr . '>' expr   (rule 205)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 206)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 210)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 629



state 619

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_else_single  ->  T_ELSE ':' inner_statement_list .   (rule 102)

    T_ENDIF	reduce using rule 102 (new_else_single)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 620

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';' .   (rule 19)

    $default	reduce using rule 19 (unticked_statement)



state 621

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' . @26 statement   (rule 95)

    $default	reduce using rule 94 (@26)

    @26 	go to state 630



state 622

    for_statement  ->  ':' . inner_statement_list T_ENDFOR ';'   (rule 73)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 631



state 623

    for_statement  ->  statement .   (rule 72)

    $default	reduce using rule 72 (for_statement)



state 624

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement .   (rule 29)

    $default	reduce using rule 29 (unticked_statement)



state 625

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH . ';'   (rule 75)

    ';' 	shift, and go to state 632



state 626

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_CASE expr case_separator @24 inner_statement_list .   (rule 86)

    T_ENDSWITCH	reduce using rule 86 (case_list)
    T_CASE	reduce using rule 86 (case_list)
    T_DEFAULT	reduce using rule 86 (case_list)
    '}' 	reduce using rule 86 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 627

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' . inner_statement_list ')' ';'   (rule 138)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 633



state 628

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 135)

    ')' 	shift, and go to state 634



state 629

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' . ':' @27 inner_statement_list   (rule 98)

    ':' 	shift, and go to state 635



state 630

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @26 . statement   (rule 95)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '\"'	shift, and go to state 62
    '\''	shift, and go to state 63

    statement	go to state 636
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 631

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    for_statement  ->  ':' inner_statement_list . T_ENDFOR ';'   (rule 73)

    T_ENDFOR	shift, and go to state 637

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 632

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH ';' .   (rule 75)

    $default	reduce using rule 75 (foreach_statement)



state 633

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list . ')' ';'   (rule 138)

    ')' 	shift, and go to state 638

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 634

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 135)

    '{' 	shift, and go to state 639



state 635

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' . @27 inner_statement_list   (rule 98)

    $default	reduce using rule 97 (@27)

    @27 	go to state 640



state 636

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @26 statement .   (rule 95)

    $default	reduce using rule 95 (elseif_list)



state 637

    for_statement  ->  ':' inner_statement_list T_ENDFOR . ';'   (rule 73)

    ';' 	shift, and go to state 641



state 638

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' . ';'   (rule 138)

    ';' 	shift, and go to state 642



state 639

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 135)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 643



state 640

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @27 . inner_statement_list   (rule 98)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 644



state 641

    for_statement  ->  ':' inner_statement_list T_ENDFOR ';' .   (rule 73)

    $default	reduce using rule 73 (for_statement)



state 642

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';' .   (rule 138)

    $default	reduce using rule 138 (class_statement)



state 643

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 135)

    '}' 	shift, and go to state 645

    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 644

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @27 inner_statement_list .   (rule 98)

    T_ELSEIF	reduce using rule 98 (new_elseif_list)
    T_ELSE	reduce using rule 98 (new_elseif_list)
    T_ENDIF	reduce using rule 98 (new_elseif_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 262



state 645

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 135)

    $default	reduce using rule 135 (class_statement)



state 646

    $   	go to state 647



state 647

    $   	go to state 648



state 648

    $default	accept
