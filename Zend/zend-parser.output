

Terminals which are not used:

   T_COMMENT
   T_ML_COMMENT
   T_OPEN_TAG
   T_OPEN_TAG_WITH_ECHO
   T_CLOSE_TAG
   T_WHITESPACE
   T_PHP_TRACK_VARS


Conflict in state 82 between rule 331 and token T_LOGICAL_OR resolved as shift.
Conflict in state 82 between rule 331 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 82 between rule 331 and token T_LOGICAL_AND resolved as shift.
Conflict in state 82 between rule 331 and token '?' resolved as shift.
Conflict in state 82 between rule 331 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 82 between rule 331 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 82 between rule 331 and token '|' resolved as shift.
Conflict in state 82 between rule 331 and token '^' resolved as shift.
Conflict in state 82 between rule 331 and token '&' resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_EQUAL resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 82 between rule 331 and token '<' resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 331 and token '>' resolved as shift.
Conflict in state 82 between rule 331 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 82 between rule 331 and token T_SL resolved as shift.
Conflict in state 82 between rule 331 and token T_SR resolved as shift.
Conflict in state 82 between rule 331 and token '+' resolved as shift.
Conflict in state 82 between rule 331 and token '-' resolved as shift.
Conflict in state 82 between rule 331 and token '.' resolved as shift.
Conflict in state 82 between rule 331 and token '*' resolved as shift.
Conflict in state 82 between rule 331 and token '/' resolved as shift.
Conflict in state 82 between rule 331 and token '%' resolved as shift.
Conflict in state 83 between rule 332 and token T_LOGICAL_OR resolved as shift.
Conflict in state 83 between rule 332 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 83 between rule 332 and token T_LOGICAL_AND resolved as shift.
Conflict in state 83 between rule 332 and token '?' resolved as shift.
Conflict in state 83 between rule 332 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 83 between rule 332 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 83 between rule 332 and token '|' resolved as shift.
Conflict in state 83 between rule 332 and token '^' resolved as shift.
Conflict in state 83 between rule 332 and token '&' resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_EQUAL resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 83 between rule 332 and token '<' resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 332 and token '>' resolved as shift.
Conflict in state 83 between rule 332 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 83 between rule 332 and token T_SL resolved as shift.
Conflict in state 83 between rule 332 and token T_SR resolved as shift.
Conflict in state 83 between rule 332 and token '+' resolved as shift.
Conflict in state 83 between rule 332 and token '-' resolved as shift.
Conflict in state 83 between rule 332 and token '.' resolved as shift.
Conflict in state 83 between rule 332 and token '*' resolved as shift.
Conflict in state 83 between rule 332 and token '/' resolved as shift.
Conflict in state 83 between rule 332 and token '%' resolved as shift.
Conflict in state 85 between rule 223 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 85 between rule 223 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 85 between rule 223 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 85 between rule 223 and token '?' resolved as shift.
Conflict in state 85 between rule 223 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 85 between rule 223 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 85 between rule 223 and token '|' resolved as shift.
Conflict in state 85 between rule 223 and token '^' resolved as shift.
Conflict in state 85 between rule 223 and token '&' resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_EQUAL resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 85 between rule 223 and token '<' resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 223 and token '>' resolved as shift.
Conflict in state 85 between rule 223 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 85 between rule 223 and token T_SL resolved as shift.
Conflict in state 85 between rule 223 and token T_SR resolved as shift.
Conflict in state 85 between rule 223 and token '+' resolved as shift.
Conflict in state 85 between rule 223 and token '-' resolved as shift.
Conflict in state 85 between rule 223 and token '.' resolved as shift.
Conflict in state 85 between rule 223 and token '*' resolved as shift.
Conflict in state 85 between rule 223 and token '/' resolved as shift.
Conflict in state 85 between rule 223 and token '%' resolved as shift.
Conflict in state 86 between rule 192 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 86 between rule 192 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 86 between rule 192 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 86 between rule 192 and token '?' resolved as reduce.
Conflict in state 86 between rule 192 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 86 between rule 192 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 86 between rule 192 and token '|' resolved as reduce.
Conflict in state 86 between rule 192 and token '^' resolved as reduce.
Conflict in state 86 between rule 192 and token '&' resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_EQUAL resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 86 between rule 192 and token '<' resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 86 between rule 192 and token '>' resolved as reduce.
Conflict in state 86 between rule 192 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 86 between rule 192 and token T_SL resolved as reduce.
Conflict in state 86 between rule 192 and token T_SR resolved as reduce.
Conflict in state 86 between rule 192 and token '+' resolved as reduce.
Conflict in state 86 between rule 192 and token '-' resolved as reduce.
Conflict in state 86 between rule 192 and token '.' resolved as reduce.
Conflict in state 86 between rule 192 and token '*' resolved as shift.
Conflict in state 86 between rule 192 and token '/' resolved as shift.
Conflict in state 86 between rule 192 and token '%' resolved as shift.
Conflict in state 87 between rule 193 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 87 between rule 193 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 87 between rule 193 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 87 between rule 193 and token '?' resolved as reduce.
Conflict in state 87 between rule 193 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 87 between rule 193 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 87 between rule 193 and token '|' resolved as reduce.
Conflict in state 87 between rule 193 and token '^' resolved as reduce.
Conflict in state 87 between rule 193 and token '&' resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_EQUAL resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 87 between rule 193 and token '<' resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 87 between rule 193 and token '>' resolved as reduce.
Conflict in state 87 between rule 193 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 87 between rule 193 and token T_SL resolved as reduce.
Conflict in state 87 between rule 193 and token T_SR resolved as reduce.
Conflict in state 87 between rule 193 and token '+' resolved as reduce.
Conflict in state 87 between rule 193 and token '-' resolved as reduce.
Conflict in state 87 between rule 193 and token '.' resolved as reduce.
Conflict in state 87 between rule 193 and token '*' resolved as shift.
Conflict in state 87 between rule 193 and token '/' resolved as shift.
Conflict in state 87 between rule 193 and token '%' resolved as shift.
Conflict in state 88 between rule 194 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 88 between rule 194 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 88 between rule 194 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 88 between rule 194 and token '?' resolved as reduce.
Conflict in state 88 between rule 194 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 88 between rule 194 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 88 between rule 194 and token '|' resolved as reduce.
Conflict in state 88 between rule 194 and token '^' resolved as reduce.
Conflict in state 88 between rule 194 and token '&' resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_EQUAL resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 88 between rule 194 and token '<' resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 194 and token '>' resolved as reduce.
Conflict in state 88 between rule 194 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 88 between rule 194 and token T_SL resolved as reduce.
Conflict in state 88 between rule 194 and token T_SR resolved as reduce.
Conflict in state 88 between rule 194 and token '+' resolved as reduce.
Conflict in state 88 between rule 194 and token '-' resolved as reduce.
Conflict in state 88 between rule 194 and token '.' resolved as reduce.
Conflict in state 88 between rule 194 and token '*' resolved as reduce.
Conflict in state 88 between rule 194 and token '/' resolved as reduce.
Conflict in state 88 between rule 194 and token '%' resolved as reduce.
Conflict in state 89 between rule 195 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 89 between rule 195 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 89 between rule 195 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 89 between rule 195 and token '?' resolved as reduce.
Conflict in state 89 between rule 195 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 89 between rule 195 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 89 between rule 195 and token '|' resolved as reduce.
Conflict in state 89 between rule 195 and token '^' resolved as reduce.
Conflict in state 89 between rule 195 and token '&' resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_EQUAL resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 89 between rule 195 and token '<' resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 195 and token '>' resolved as reduce.
Conflict in state 89 between rule 195 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 89 between rule 195 and token T_SL resolved as reduce.
Conflict in state 89 between rule 195 and token T_SR resolved as reduce.
Conflict in state 89 between rule 195 and token '+' resolved as reduce.
Conflict in state 89 between rule 195 and token '-' resolved as reduce.
Conflict in state 89 between rule 195 and token '.' resolved as reduce.
Conflict in state 89 between rule 195 and token '*' resolved as reduce.
Conflict in state 89 between rule 195 and token '/' resolved as reduce.
Conflict in state 89 between rule 195 and token '%' resolved as reduce.
Conflict in state 93 between rule 210 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 93 between rule 210 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 93 between rule 210 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 93 between rule 210 and token '?' resolved as reduce.
Conflict in state 93 between rule 210 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 93 between rule 210 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 93 between rule 210 and token '|' resolved as reduce.
Conflict in state 93 between rule 210 and token '^' resolved as reduce.
Conflict in state 93 between rule 210 and token '&' resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_EQUAL resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 93 between rule 210 and token '<' resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 210 and token '>' resolved as reduce.
Conflict in state 93 between rule 210 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 93 between rule 210 and token T_SL resolved as reduce.
Conflict in state 93 between rule 210 and token T_SR resolved as reduce.
Conflict in state 93 between rule 210 and token '+' resolved as reduce.
Conflict in state 93 between rule 210 and token '-' resolved as reduce.
Conflict in state 93 between rule 210 and token '.' resolved as reduce.
Conflict in state 93 between rule 210 and token '*' resolved as reduce.
Conflict in state 93 between rule 210 and token '/' resolved as reduce.
Conflict in state 93 between rule 210 and token '%' resolved as reduce.
Conflict in state 94 between rule 211 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 94 between rule 211 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 94 between rule 211 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 94 between rule 211 and token '?' resolved as reduce.
Conflict in state 94 between rule 211 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 94 between rule 211 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 94 between rule 211 and token '|' resolved as reduce.
Conflict in state 94 between rule 211 and token '^' resolved as reduce.
Conflict in state 94 between rule 211 and token '&' resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_EQUAL resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 94 between rule 211 and token '<' resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 94 between rule 211 and token '>' resolved as reduce.
Conflict in state 94 between rule 211 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 94 between rule 211 and token T_SL resolved as reduce.
Conflict in state 94 between rule 211 and token T_SR resolved as reduce.
Conflict in state 94 between rule 211 and token '+' resolved as reduce.
Conflict in state 94 between rule 211 and token '-' resolved as reduce.
Conflict in state 94 between rule 211 and token '.' resolved as reduce.
Conflict in state 94 between rule 211 and token '*' resolved as reduce.
Conflict in state 94 between rule 211 and token '/' resolved as reduce.
Conflict in state 94 between rule 211 and token '%' resolved as reduce.
Conflict in state 95 between rule 212 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 95 between rule 212 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 95 between rule 212 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 95 between rule 212 and token '?' resolved as reduce.
Conflict in state 95 between rule 212 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 95 between rule 212 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 95 between rule 212 and token '|' resolved as reduce.
Conflict in state 95 between rule 212 and token '^' resolved as reduce.
Conflict in state 95 between rule 212 and token '&' resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_EQUAL resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 95 between rule 212 and token '<' resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 212 and token '>' resolved as reduce.
Conflict in state 95 between rule 212 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 95 between rule 212 and token T_SL resolved as reduce.
Conflict in state 95 between rule 212 and token T_SR resolved as reduce.
Conflict in state 95 between rule 212 and token '+' resolved as reduce.
Conflict in state 95 between rule 212 and token '-' resolved as reduce.
Conflict in state 95 between rule 212 and token '.' resolved as reduce.
Conflict in state 95 between rule 212 and token '*' resolved as reduce.
Conflict in state 95 between rule 212 and token '/' resolved as reduce.
Conflict in state 95 between rule 212 and token '%' resolved as reduce.
Conflict in state 96 between rule 213 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 96 between rule 213 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 96 between rule 213 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 96 between rule 213 and token '?' resolved as reduce.
Conflict in state 96 between rule 213 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 96 between rule 213 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 96 between rule 213 and token '|' resolved as reduce.
Conflict in state 96 between rule 213 and token '^' resolved as reduce.
Conflict in state 96 between rule 213 and token '&' resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_EQUAL resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 96 between rule 213 and token '<' resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 213 and token '>' resolved as reduce.
Conflict in state 96 between rule 213 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 96 between rule 213 and token T_SL resolved as reduce.
Conflict in state 96 between rule 213 and token T_SR resolved as reduce.
Conflict in state 96 between rule 213 and token '+' resolved as reduce.
Conflict in state 96 between rule 213 and token '-' resolved as reduce.
Conflict in state 96 between rule 213 and token '.' resolved as reduce.
Conflict in state 96 between rule 213 and token '*' resolved as reduce.
Conflict in state 96 between rule 213 and token '/' resolved as reduce.
Conflict in state 96 between rule 213 and token '%' resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 97 between rule 214 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 97 between rule 214 and token '?' resolved as reduce.
Conflict in state 97 between rule 214 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 97 between rule 214 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 97 between rule 214 and token '|' resolved as reduce.
Conflict in state 97 between rule 214 and token '^' resolved as reduce.
Conflict in state 97 between rule 214 and token '&' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 97 between rule 214 and token '<' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token '>' resolved as reduce.
Conflict in state 97 between rule 214 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 97 between rule 214 and token T_SL resolved as reduce.
Conflict in state 97 between rule 214 and token T_SR resolved as reduce.
Conflict in state 97 between rule 214 and token '+' resolved as reduce.
Conflict in state 97 between rule 214 and token '-' resolved as reduce.
Conflict in state 97 between rule 214 and token '.' resolved as reduce.
Conflict in state 97 between rule 214 and token '*' resolved as reduce.
Conflict in state 97 between rule 214 and token '/' resolved as reduce.
Conflict in state 97 between rule 214 and token '%' resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 98 between rule 215 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 98 between rule 215 and token '?' resolved as reduce.
Conflict in state 98 between rule 215 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 98 between rule 215 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 98 between rule 215 and token '|' resolved as reduce.
Conflict in state 98 between rule 215 and token '^' resolved as reduce.
Conflict in state 98 between rule 215 and token '&' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 98 between rule 215 and token '<' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token '>' resolved as reduce.
Conflict in state 98 between rule 215 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 98 between rule 215 and token T_SL resolved as reduce.
Conflict in state 98 between rule 215 and token T_SR resolved as reduce.
Conflict in state 98 between rule 215 and token '+' resolved as reduce.
Conflict in state 98 between rule 215 and token '-' resolved as reduce.
Conflict in state 98 between rule 215 and token '.' resolved as reduce.
Conflict in state 98 between rule 215 and token '*' resolved as reduce.
Conflict in state 98 between rule 215 and token '/' resolved as reduce.
Conflict in state 98 between rule 215 and token '%' resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 99 between rule 216 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 99 between rule 216 and token '?' resolved as reduce.
Conflict in state 99 between rule 216 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 99 between rule 216 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 99 between rule 216 and token '|' resolved as reduce.
Conflict in state 99 between rule 216 and token '^' resolved as reduce.
Conflict in state 99 between rule 216 and token '&' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 99 between rule 216 and token '<' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token '>' resolved as reduce.
Conflict in state 99 between rule 216 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 99 between rule 216 and token T_SL resolved as reduce.
Conflict in state 99 between rule 216 and token T_SR resolved as reduce.
Conflict in state 99 between rule 216 and token '+' resolved as reduce.
Conflict in state 99 between rule 216 and token '-' resolved as reduce.
Conflict in state 99 between rule 216 and token '.' resolved as reduce.
Conflict in state 99 between rule 216 and token '*' resolved as reduce.
Conflict in state 99 between rule 216 and token '/' resolved as reduce.
Conflict in state 99 between rule 216 and token '%' resolved as reduce.
Conflict in state 199 between rule 219 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 199 between rule 219 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 199 between rule 219 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 199 between rule 219 and token '?' resolved as reduce.
Conflict in state 199 between rule 219 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 199 between rule 219 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 199 between rule 219 and token '|' resolved as reduce.
Conflict in state 199 between rule 219 and token '^' resolved as reduce.
Conflict in state 199 between rule 219 and token '&' resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_EQUAL resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 199 between rule 219 and token '<' resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 219 and token '>' resolved as reduce.
Conflict in state 199 between rule 219 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 199 between rule 219 and token T_SL resolved as reduce.
Conflict in state 199 between rule 219 and token T_SR resolved as reduce.
Conflict in state 199 between rule 219 and token '+' resolved as reduce.
Conflict in state 199 between rule 219 and token '-' resolved as reduce.
Conflict in state 199 between rule 219 and token '.' resolved as reduce.
Conflict in state 199 between rule 219 and token '*' resolved as reduce.
Conflict in state 199 between rule 219 and token '/' resolved as reduce.
Conflict in state 199 between rule 219 and token '%' resolved as reduce.
Conflict in state 265 between rule 180 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 265 between rule 180 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 265 between rule 180 and token T_LOGICAL_AND resolved as shift.
Conflict in state 265 between rule 180 and token '?' resolved as shift.
Conflict in state 265 between rule 180 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 265 between rule 180 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 265 between rule 180 and token '|' resolved as shift.
Conflict in state 265 between rule 180 and token '^' resolved as shift.
Conflict in state 265 between rule 180 and token '&' resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_EQUAL resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 265 between rule 180 and token '<' resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 265 between rule 180 and token '>' resolved as shift.
Conflict in state 265 between rule 180 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 265 between rule 180 and token T_SL resolved as shift.
Conflict in state 265 between rule 180 and token T_SR resolved as shift.
Conflict in state 265 between rule 180 and token '+' resolved as shift.
Conflict in state 265 between rule 180 and token '-' resolved as shift.
Conflict in state 265 between rule 180 and token '.' resolved as shift.
Conflict in state 265 between rule 180 and token '*' resolved as shift.
Conflict in state 265 between rule 180 and token '/' resolved as shift.
Conflict in state 265 between rule 180 and token '%' resolved as shift.
Conflict in state 270 between rule 181 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 181 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 270 between rule 181 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 181 and token '?' resolved as reduce.
Conflict in state 270 between rule 181 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 270 between rule 181 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 270 between rule 181 and token '|' resolved as reduce.
Conflict in state 270 between rule 181 and token '^' resolved as shift.
Conflict in state 270 between rule 181 and token '&' resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_EQUAL resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 270 between rule 181 and token '<' resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 270 between rule 181 and token '>' resolved as shift.
Conflict in state 270 between rule 181 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 270 between rule 181 and token T_SL resolved as shift.
Conflict in state 270 between rule 181 and token T_SR resolved as shift.
Conflict in state 270 between rule 181 and token '+' resolved as shift.
Conflict in state 270 between rule 181 and token '-' resolved as shift.
Conflict in state 270 between rule 181 and token '.' resolved as shift.
Conflict in state 270 between rule 181 and token '*' resolved as shift.
Conflict in state 270 between rule 181 and token '/' resolved as shift.
Conflict in state 270 between rule 181 and token '%' resolved as shift.
Conflict in state 271 between rule 183 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 271 between rule 183 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 271 between rule 183 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 271 between rule 183 and token '?' resolved as reduce.
Conflict in state 271 between rule 183 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 271 between rule 183 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 271 between rule 183 and token '|' resolved as reduce.
Conflict in state 271 between rule 183 and token '^' resolved as reduce.
Conflict in state 271 between rule 183 and token '&' resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_EQUAL resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 271 between rule 183 and token '<' resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 271 between rule 183 and token '>' resolved as shift.
Conflict in state 271 between rule 183 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 271 between rule 183 and token T_SL resolved as shift.
Conflict in state 271 between rule 183 and token T_SR resolved as shift.
Conflict in state 271 between rule 183 and token '+' resolved as shift.
Conflict in state 271 between rule 183 and token '-' resolved as shift.
Conflict in state 271 between rule 183 and token '.' resolved as shift.
Conflict in state 271 between rule 183 and token '*' resolved as shift.
Conflict in state 271 between rule 183 and token '/' resolved as shift.
Conflict in state 271 between rule 183 and token '%' resolved as shift.
Conflict in state 272 between rule 182 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 272 between rule 182 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 272 between rule 182 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 272 between rule 182 and token '?' resolved as reduce.
Conflict in state 272 between rule 182 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 272 between rule 182 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 272 between rule 182 and token '|' resolved as reduce.
Conflict in state 272 between rule 182 and token '^' resolved as reduce.
Conflict in state 272 between rule 182 and token '&' resolved as reduce.
Conflict in state 272 between rule 182 and token T_IS_EQUAL resolved as shift.
Conflict in state 272 between rule 182 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 272 between rule 182 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 272 between rule 182 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 272 between rule 182 and token '<' resolved as shift.
Conflict in state 272 between rule 182 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 272 between rule 182 and token '>' resolved as shift.
Conflict in state 272 between rule 182 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 272 between rule 182 and token T_SL resolved as shift.
Conflict in state 272 between rule 182 and token T_SR resolved as shift.
Conflict in state 272 between rule 182 and token '+' resolved as shift.
Conflict in state 272 between rule 182 and token '-' resolved as shift.
Conflict in state 272 between rule 182 and token '.' resolved as shift.
Conflict in state 272 between rule 182 and token '*' resolved as shift.
Conflict in state 272 between rule 182 and token '/' resolved as shift.
Conflict in state 272 between rule 182 and token '%' resolved as shift.
Conflict in state 273 between rule 198 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 273 between rule 198 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 273 between rule 198 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 273 between rule 198 and token '?' resolved as reduce.
Conflict in state 273 between rule 198 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 273 between rule 198 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 273 between rule 198 and token '|' resolved as reduce.
Conflict in state 273 between rule 198 and token '^' resolved as reduce.
Conflict in state 273 between rule 198 and token '&' resolved as reduce.
Conflict in state 273 between rule 198 and token T_IS_EQUAL resolved as an error.
Conflict in state 273 between rule 198 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 273 between rule 198 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 273 between rule 198 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 273 between rule 198 and token '<' resolved as shift.
Conflict in state 273 between rule 198 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 273 between rule 198 and token '>' resolved as shift.
Conflict in state 273 between rule 198 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 273 between rule 198 and token T_SL resolved as shift.
Conflict in state 273 between rule 198 and token T_SR resolved as shift.
Conflict in state 273 between rule 198 and token '+' resolved as shift.
Conflict in state 273 between rule 198 and token '-' resolved as shift.
Conflict in state 273 between rule 198 and token '.' resolved as shift.
Conflict in state 273 between rule 198 and token '*' resolved as shift.
Conflict in state 273 between rule 198 and token '/' resolved as shift.
Conflict in state 273 between rule 198 and token '%' resolved as shift.
Conflict in state 274 between rule 199 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 274 between rule 199 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 274 between rule 199 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 274 between rule 199 and token '?' resolved as reduce.
Conflict in state 274 between rule 199 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 274 between rule 199 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 274 between rule 199 and token '|' resolved as reduce.
Conflict in state 274 between rule 199 and token '^' resolved as reduce.
Conflict in state 274 between rule 199 and token '&' resolved as reduce.
Conflict in state 274 between rule 199 and token T_IS_EQUAL resolved as an error.
Conflict in state 274 between rule 199 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 274 between rule 199 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 274 between rule 199 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 274 between rule 199 and token '<' resolved as shift.
Conflict in state 274 between rule 199 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 199 and token '>' resolved as shift.
Conflict in state 274 between rule 199 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 274 between rule 199 and token T_SL resolved as shift.
Conflict in state 274 between rule 199 and token T_SR resolved as shift.
Conflict in state 274 between rule 199 and token '+' resolved as shift.
Conflict in state 274 between rule 199 and token '-' resolved as shift.
Conflict in state 274 between rule 199 and token '.' resolved as shift.
Conflict in state 274 between rule 199 and token '*' resolved as shift.
Conflict in state 274 between rule 199 and token '/' resolved as shift.
Conflict in state 274 between rule 199 and token '%' resolved as shift.
Conflict in state 275 between rule 196 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 275 between rule 196 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 275 between rule 196 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 275 between rule 196 and token '?' resolved as reduce.
Conflict in state 275 between rule 196 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 275 between rule 196 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 275 between rule 196 and token '|' resolved as reduce.
Conflict in state 275 between rule 196 and token '^' resolved as reduce.
Conflict in state 275 between rule 196 and token '&' resolved as reduce.
Conflict in state 275 between rule 196 and token T_IS_EQUAL resolved as an error.
Conflict in state 275 between rule 196 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 275 between rule 196 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 275 between rule 196 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 275 between rule 196 and token '<' resolved as shift.
Conflict in state 275 between rule 196 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 196 and token '>' resolved as shift.
Conflict in state 275 between rule 196 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 275 between rule 196 and token T_SL resolved as shift.
Conflict in state 275 between rule 196 and token T_SR resolved as shift.
Conflict in state 275 between rule 196 and token '+' resolved as shift.
Conflict in state 275 between rule 196 and token '-' resolved as shift.
Conflict in state 275 between rule 196 and token '.' resolved as shift.
Conflict in state 275 between rule 196 and token '*' resolved as shift.
Conflict in state 275 between rule 196 and token '/' resolved as shift.
Conflict in state 275 between rule 196 and token '%' resolved as shift.
Conflict in state 276 between rule 197 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 276 between rule 197 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 276 between rule 197 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 276 between rule 197 and token '?' resolved as reduce.
Conflict in state 276 between rule 197 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 276 between rule 197 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 276 between rule 197 and token '|' resolved as reduce.
Conflict in state 276 between rule 197 and token '^' resolved as reduce.
Conflict in state 276 between rule 197 and token '&' resolved as reduce.
Conflict in state 276 between rule 197 and token T_IS_EQUAL resolved as an error.
Conflict in state 276 between rule 197 and token T_IS_NOT_EQUAL resolved as an error.
Conflict in state 276 between rule 197 and token T_IS_IDENTICAL resolved as an error.
Conflict in state 276 between rule 197 and token T_IS_NOT_IDENTICAL resolved as an error.
Conflict in state 276 between rule 197 and token '<' resolved as shift.
Conflict in state 276 between rule 197 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 197 and token '>' resolved as shift.
Conflict in state 276 between rule 197 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 276 between rule 197 and token T_SL resolved as shift.
Conflict in state 276 between rule 197 and token T_SR resolved as shift.
Conflict in state 276 between rule 197 and token '+' resolved as shift.
Conflict in state 276 between rule 197 and token '-' resolved as shift.
Conflict in state 276 between rule 197 and token '.' resolved as shift.
Conflict in state 276 between rule 197 and token '*' resolved as shift.
Conflict in state 276 between rule 197 and token '/' resolved as shift.
Conflict in state 276 between rule 197 and token '%' resolved as shift.
Conflict in state 277 between rule 200 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 277 between rule 200 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 277 between rule 200 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 277 between rule 200 and token '?' resolved as reduce.
Conflict in state 277 between rule 200 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 277 between rule 200 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 277 between rule 200 and token '|' resolved as reduce.
Conflict in state 277 between rule 200 and token '^' resolved as reduce.
Conflict in state 277 between rule 200 and token '&' resolved as reduce.
Conflict in state 277 between rule 200 and token T_IS_EQUAL resolved as reduce.
Conflict in state 277 between rule 200 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 277 between rule 200 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 277 between rule 200 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 277 between rule 200 and token '<' resolved as an error.
Conflict in state 277 between rule 200 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 277 between rule 200 and token '>' resolved as an error.
Conflict in state 277 between rule 200 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 277 between rule 200 and token T_SL resolved as shift.
Conflict in state 277 between rule 200 and token T_SR resolved as shift.
Conflict in state 277 between rule 200 and token '+' resolved as shift.
Conflict in state 277 between rule 200 and token '-' resolved as shift.
Conflict in state 277 between rule 200 and token '.' resolved as shift.
Conflict in state 277 between rule 200 and token '*' resolved as shift.
Conflict in state 277 between rule 200 and token '/' resolved as shift.
Conflict in state 277 between rule 200 and token '%' resolved as shift.
Conflict in state 278 between rule 201 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 278 between rule 201 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 278 between rule 201 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 278 between rule 201 and token '?' resolved as reduce.
Conflict in state 278 between rule 201 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 278 between rule 201 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 278 between rule 201 and token '|' resolved as reduce.
Conflict in state 278 between rule 201 and token '^' resolved as reduce.
Conflict in state 278 between rule 201 and token '&' resolved as reduce.
Conflict in state 278 between rule 201 and token T_IS_EQUAL resolved as reduce.
Conflict in state 278 between rule 201 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 278 between rule 201 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 278 between rule 201 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 278 between rule 201 and token '<' resolved as an error.
Conflict in state 278 between rule 201 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 278 between rule 201 and token '>' resolved as an error.
Conflict in state 278 between rule 201 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 278 between rule 201 and token T_SL resolved as shift.
Conflict in state 278 between rule 201 and token T_SR resolved as shift.
Conflict in state 278 between rule 201 and token '+' resolved as shift.
Conflict in state 278 between rule 201 and token '-' resolved as shift.
Conflict in state 278 between rule 201 and token '.' resolved as shift.
Conflict in state 278 between rule 201 and token '*' resolved as shift.
Conflict in state 278 between rule 201 and token '/' resolved as shift.
Conflict in state 278 between rule 201 and token '%' resolved as shift.
Conflict in state 279 between rule 202 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 279 between rule 202 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 279 between rule 202 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 279 between rule 202 and token '?' resolved as reduce.
Conflict in state 279 between rule 202 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 279 between rule 202 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 279 between rule 202 and token '|' resolved as reduce.
Conflict in state 279 between rule 202 and token '^' resolved as reduce.
Conflict in state 279 between rule 202 and token '&' resolved as reduce.
Conflict in state 279 between rule 202 and token T_IS_EQUAL resolved as reduce.
Conflict in state 279 between rule 202 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 279 between rule 202 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 279 between rule 202 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 279 between rule 202 and token '<' resolved as an error.
Conflict in state 279 between rule 202 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 279 between rule 202 and token '>' resolved as an error.
Conflict in state 279 between rule 202 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 279 between rule 202 and token T_SL resolved as shift.
Conflict in state 279 between rule 202 and token T_SR resolved as shift.
Conflict in state 279 between rule 202 and token '+' resolved as shift.
Conflict in state 279 between rule 202 and token '-' resolved as shift.
Conflict in state 279 between rule 202 and token '.' resolved as shift.
Conflict in state 279 between rule 202 and token '*' resolved as shift.
Conflict in state 279 between rule 202 and token '/' resolved as shift.
Conflict in state 279 between rule 202 and token '%' resolved as shift.
Conflict in state 280 between rule 203 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 280 between rule 203 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 280 between rule 203 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 280 between rule 203 and token '?' resolved as reduce.
Conflict in state 280 between rule 203 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 280 between rule 203 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 280 between rule 203 and token '|' resolved as reduce.
Conflict in state 280 between rule 203 and token '^' resolved as reduce.
Conflict in state 280 between rule 203 and token '&' resolved as reduce.
Conflict in state 280 between rule 203 and token T_IS_EQUAL resolved as reduce.
Conflict in state 280 between rule 203 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 280 between rule 203 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 280 between rule 203 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 280 between rule 203 and token '<' resolved as an error.
Conflict in state 280 between rule 203 and token T_IS_SMALLER_OR_EQUAL resolved as an error.
Conflict in state 280 between rule 203 and token '>' resolved as an error.
Conflict in state 280 between rule 203 and token T_IS_GREATER_OR_EQUAL resolved as an error.
Conflict in state 280 between rule 203 and token T_SL resolved as shift.
Conflict in state 280 between rule 203 and token T_SR resolved as shift.
Conflict in state 280 between rule 203 and token '+' resolved as shift.
Conflict in state 280 between rule 203 and token '-' resolved as shift.
Conflict in state 280 between rule 203 and token '.' resolved as shift.
Conflict in state 280 between rule 203 and token '*' resolved as shift.
Conflict in state 280 between rule 203 and token '/' resolved as shift.
Conflict in state 280 between rule 203 and token '%' resolved as shift.
Conflict in state 281 between rule 190 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 281 between rule 190 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 281 between rule 190 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 281 between rule 190 and token '?' resolved as reduce.
Conflict in state 281 between rule 190 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 281 between rule 190 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 281 between rule 190 and token '|' resolved as reduce.
Conflict in state 281 between rule 190 and token '^' resolved as reduce.
Conflict in state 281 between rule 190 and token '&' resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_EQUAL resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 281 between rule 190 and token '<' resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 281 between rule 190 and token '>' resolved as reduce.
Conflict in state 281 between rule 190 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 281 between rule 190 and token T_SL resolved as reduce.
Conflict in state 281 between rule 190 and token T_SR resolved as reduce.
Conflict in state 281 between rule 190 and token '+' resolved as shift.
Conflict in state 281 between rule 190 and token '-' resolved as shift.
Conflict in state 281 between rule 190 and token '.' resolved as shift.
Conflict in state 281 between rule 190 and token '*' resolved as shift.
Conflict in state 281 between rule 190 and token '/' resolved as shift.
Conflict in state 281 between rule 190 and token '%' resolved as shift.
Conflict in state 282 between rule 191 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 282 between rule 191 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 282 between rule 191 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 282 between rule 191 and token '?' resolved as reduce.
Conflict in state 282 between rule 191 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 282 between rule 191 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 282 between rule 191 and token '|' resolved as reduce.
Conflict in state 282 between rule 191 and token '^' resolved as reduce.
Conflict in state 282 between rule 191 and token '&' resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_EQUAL resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 282 between rule 191 and token '<' resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 282 between rule 191 and token '>' resolved as reduce.
Conflict in state 282 between rule 191 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 282 between rule 191 and token T_SL resolved as reduce.
Conflict in state 282 between rule 191 and token T_SR resolved as reduce.
Conflict in state 282 between rule 191 and token '+' resolved as shift.
Conflict in state 282 between rule 191 and token '-' resolved as shift.
Conflict in state 282 between rule 191 and token '.' resolved as shift.
Conflict in state 282 between rule 191 and token '*' resolved as shift.
Conflict in state 282 between rule 191 and token '/' resolved as shift.
Conflict in state 282 between rule 191 and token '%' resolved as shift.
Conflict in state 283 between rule 185 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 283 between rule 185 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 283 between rule 185 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 283 between rule 185 and token '?' resolved as reduce.
Conflict in state 283 between rule 185 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 283 between rule 185 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 283 between rule 185 and token '|' resolved as reduce.
Conflict in state 283 between rule 185 and token '^' resolved as reduce.
Conflict in state 283 between rule 185 and token '&' resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_EQUAL resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 283 between rule 185 and token '<' resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 283 between rule 185 and token '>' resolved as reduce.
Conflict in state 283 between rule 185 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 283 between rule 185 and token T_SL resolved as reduce.
Conflict in state 283 between rule 185 and token T_SR resolved as reduce.
Conflict in state 283 between rule 185 and token '+' resolved as reduce.
Conflict in state 283 between rule 185 and token '-' resolved as reduce.
Conflict in state 283 between rule 185 and token '.' resolved as reduce.
Conflict in state 283 between rule 185 and token '*' resolved as shift.
Conflict in state 283 between rule 185 and token '/' resolved as shift.
Conflict in state 283 between rule 185 and token '%' resolved as shift.
Conflict in state 284 between rule 186 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 284 between rule 186 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 284 between rule 186 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 284 between rule 186 and token '?' resolved as reduce.
Conflict in state 284 between rule 186 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 284 between rule 186 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 284 between rule 186 and token '|' resolved as reduce.
Conflict in state 284 between rule 186 and token '^' resolved as reduce.
Conflict in state 284 between rule 186 and token '&' resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_EQUAL resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 284 between rule 186 and token '<' resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 284 between rule 186 and token '>' resolved as reduce.
Conflict in state 284 between rule 186 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 284 between rule 186 and token T_SL resolved as reduce.
Conflict in state 284 between rule 186 and token T_SR resolved as reduce.
Conflict in state 284 between rule 186 and token '+' resolved as reduce.
Conflict in state 284 between rule 186 and token '-' resolved as reduce.
Conflict in state 284 between rule 186 and token '.' resolved as reduce.
Conflict in state 284 between rule 186 and token '*' resolved as shift.
Conflict in state 284 between rule 186 and token '/' resolved as shift.
Conflict in state 284 between rule 186 and token '%' resolved as shift.
Conflict in state 285 between rule 184 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 285 between rule 184 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 285 between rule 184 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 285 between rule 184 and token '?' resolved as reduce.
Conflict in state 285 between rule 184 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 285 between rule 184 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 285 between rule 184 and token '|' resolved as reduce.
Conflict in state 285 between rule 184 and token '^' resolved as reduce.
Conflict in state 285 between rule 184 and token '&' resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_EQUAL resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 285 between rule 184 and token '<' resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 184 and token '>' resolved as reduce.
Conflict in state 285 between rule 184 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 285 between rule 184 and token T_SL resolved as reduce.
Conflict in state 285 between rule 184 and token T_SR resolved as reduce.
Conflict in state 285 between rule 184 and token '+' resolved as reduce.
Conflict in state 285 between rule 184 and token '-' resolved as reduce.
Conflict in state 285 between rule 184 and token '.' resolved as reduce.
Conflict in state 285 between rule 184 and token '*' resolved as shift.
Conflict in state 285 between rule 184 and token '/' resolved as shift.
Conflict in state 285 between rule 184 and token '%' resolved as shift.
Conflict in state 286 between rule 187 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 286 between rule 187 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 286 between rule 187 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 286 between rule 187 and token '?' resolved as reduce.
Conflict in state 286 between rule 187 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 286 between rule 187 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 286 between rule 187 and token '|' resolved as reduce.
Conflict in state 286 between rule 187 and token '^' resolved as reduce.
Conflict in state 286 between rule 187 and token '&' resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_EQUAL resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 286 between rule 187 and token '<' resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 187 and token '>' resolved as reduce.
Conflict in state 286 between rule 187 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 286 between rule 187 and token T_SL resolved as reduce.
Conflict in state 286 between rule 187 and token T_SR resolved as reduce.
Conflict in state 286 between rule 187 and token '+' resolved as reduce.
Conflict in state 286 between rule 187 and token '-' resolved as reduce.
Conflict in state 286 between rule 187 and token '.' resolved as reduce.
Conflict in state 286 between rule 187 and token '*' resolved as reduce.
Conflict in state 286 between rule 187 and token '/' resolved as reduce.
Conflict in state 286 between rule 187 and token '%' resolved as reduce.
Conflict in state 287 between rule 188 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 287 between rule 188 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 287 between rule 188 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 287 between rule 188 and token '?' resolved as reduce.
Conflict in state 287 between rule 188 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 287 between rule 188 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 287 between rule 188 and token '|' resolved as reduce.
Conflict in state 287 between rule 188 and token '^' resolved as reduce.
Conflict in state 287 between rule 188 and token '&' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 287 between rule 188 and token '<' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token '>' resolved as reduce.
Conflict in state 287 between rule 188 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 287 between rule 188 and token T_SL resolved as reduce.
Conflict in state 287 between rule 188 and token T_SR resolved as reduce.
Conflict in state 287 between rule 188 and token '+' resolved as reduce.
Conflict in state 287 between rule 188 and token '-' resolved as reduce.
Conflict in state 287 between rule 188 and token '.' resolved as reduce.
Conflict in state 287 between rule 188 and token '*' resolved as reduce.
Conflict in state 287 between rule 188 and token '/' resolved as reduce.
Conflict in state 287 between rule 188 and token '%' resolved as reduce.
Conflict in state 288 between rule 189 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 288 between rule 189 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 288 between rule 189 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 288 between rule 189 and token '?' resolved as reduce.
Conflict in state 288 between rule 189 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 288 between rule 189 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 288 between rule 189 and token '|' resolved as reduce.
Conflict in state 288 between rule 189 and token '^' resolved as reduce.
Conflict in state 288 between rule 189 and token '&' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_NOT_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_NOT_IDENTICAL resolved as reduce.
Conflict in state 288 between rule 189 and token '<' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_SMALLER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token '>' resolved as reduce.
Conflict in state 288 between rule 189 and token T_IS_GREATER_OR_EQUAL resolved as reduce.
Conflict in state 288 between rule 189 and token T_SL resolved as reduce.
Conflict in state 288 between rule 189 and token T_SR resolved as reduce.
Conflict in state 288 between rule 189 and token '+' resolved as reduce.
Conflict in state 288 between rule 189 and token '-' resolved as reduce.
Conflict in state 288 between rule 189 and token '.' resolved as reduce.
Conflict in state 288 between rule 189 and token '*' resolved as reduce.
Conflict in state 288 between rule 189 and token '/' resolved as reduce.
Conflict in state 288 between rule 189 and token '%' resolved as reduce.
Conflict in state 291 between rule 152 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 291 between rule 152 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 291 between rule 152 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 291 between rule 152 and token '?' resolved as shift.
Conflict in state 291 between rule 152 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 291 between rule 152 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 291 between rule 152 and token '|' resolved as shift.
Conflict in state 291 between rule 152 and token '^' resolved as shift.
Conflict in state 291 between rule 152 and token '&' resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_EQUAL resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 291 between rule 152 and token '<' resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 291 between rule 152 and token '>' resolved as shift.
Conflict in state 291 between rule 152 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 291 between rule 152 and token T_SL resolved as shift.
Conflict in state 291 between rule 152 and token T_SR resolved as shift.
Conflict in state 291 between rule 152 and token '+' resolved as shift.
Conflict in state 291 between rule 152 and token '-' resolved as shift.
Conflict in state 291 between rule 152 and token '.' resolved as shift.
Conflict in state 291 between rule 152 and token '*' resolved as shift.
Conflict in state 291 between rule 152 and token '/' resolved as shift.
Conflict in state 291 between rule 152 and token '%' resolved as shift.
Conflict in state 292 between rule 157 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 292 between rule 157 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 292 between rule 157 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 292 between rule 157 and token '?' resolved as shift.
Conflict in state 292 between rule 157 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 292 between rule 157 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 292 between rule 157 and token '|' resolved as shift.
Conflict in state 292 between rule 157 and token '^' resolved as shift.
Conflict in state 292 between rule 157 and token '&' resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_EQUAL resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 292 between rule 157 and token '<' resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 292 between rule 157 and token '>' resolved as shift.
Conflict in state 292 between rule 157 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 292 between rule 157 and token T_SL resolved as shift.
Conflict in state 292 between rule 157 and token T_SR resolved as shift.
Conflict in state 292 between rule 157 and token '+' resolved as shift.
Conflict in state 292 between rule 157 and token '-' resolved as shift.
Conflict in state 292 between rule 157 and token '.' resolved as shift.
Conflict in state 292 between rule 157 and token '*' resolved as shift.
Conflict in state 292 between rule 157 and token '/' resolved as shift.
Conflict in state 292 between rule 157 and token '%' resolved as shift.
Conflict in state 293 between rule 158 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 293 between rule 158 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 293 between rule 158 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 293 between rule 158 and token '?' resolved as shift.
Conflict in state 293 between rule 158 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 293 between rule 158 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 293 between rule 158 and token '|' resolved as shift.
Conflict in state 293 between rule 158 and token '^' resolved as shift.
Conflict in state 293 between rule 158 and token '&' resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_EQUAL resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 293 between rule 158 and token '<' resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 293 between rule 158 and token '>' resolved as shift.
Conflict in state 293 between rule 158 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 293 between rule 158 and token T_SL resolved as shift.
Conflict in state 293 between rule 158 and token T_SR resolved as shift.
Conflict in state 293 between rule 158 and token '+' resolved as shift.
Conflict in state 293 between rule 158 and token '-' resolved as shift.
Conflict in state 293 between rule 158 and token '.' resolved as shift.
Conflict in state 293 between rule 158 and token '*' resolved as shift.
Conflict in state 293 between rule 158 and token '/' resolved as shift.
Conflict in state 293 between rule 158 and token '%' resolved as shift.
Conflict in state 294 between rule 159 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 294 between rule 159 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 294 between rule 159 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 294 between rule 159 and token '?' resolved as shift.
Conflict in state 294 between rule 159 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 294 between rule 159 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 294 between rule 159 and token '|' resolved as shift.
Conflict in state 294 between rule 159 and token '^' resolved as shift.
Conflict in state 294 between rule 159 and token '&' resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_EQUAL resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 294 between rule 159 and token '<' resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 294 between rule 159 and token '>' resolved as shift.
Conflict in state 294 between rule 159 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 294 between rule 159 and token T_SL resolved as shift.
Conflict in state 294 between rule 159 and token T_SR resolved as shift.
Conflict in state 294 between rule 159 and token '+' resolved as shift.
Conflict in state 294 between rule 159 and token '-' resolved as shift.
Conflict in state 294 between rule 159 and token '.' resolved as shift.
Conflict in state 294 between rule 159 and token '*' resolved as shift.
Conflict in state 294 between rule 159 and token '/' resolved as shift.
Conflict in state 294 between rule 159 and token '%' resolved as shift.
Conflict in state 295 between rule 160 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 295 between rule 160 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 295 between rule 160 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 295 between rule 160 and token '?' resolved as shift.
Conflict in state 295 between rule 160 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 295 between rule 160 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 295 between rule 160 and token '|' resolved as shift.
Conflict in state 295 between rule 160 and token '^' resolved as shift.
Conflict in state 295 between rule 160 and token '&' resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_EQUAL resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 295 between rule 160 and token '<' resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 160 and token '>' resolved as shift.
Conflict in state 295 between rule 160 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 295 between rule 160 and token T_SL resolved as shift.
Conflict in state 295 between rule 160 and token T_SR resolved as shift.
Conflict in state 295 between rule 160 and token '+' resolved as shift.
Conflict in state 295 between rule 160 and token '-' resolved as shift.
Conflict in state 295 between rule 160 and token '.' resolved as shift.
Conflict in state 295 between rule 160 and token '*' resolved as shift.
Conflict in state 295 between rule 160 and token '/' resolved as shift.
Conflict in state 295 between rule 160 and token '%' resolved as shift.
Conflict in state 296 between rule 161 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 296 between rule 161 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 296 between rule 161 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 296 between rule 161 and token '?' resolved as shift.
Conflict in state 296 between rule 161 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 296 between rule 161 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 296 between rule 161 and token '|' resolved as shift.
Conflict in state 296 between rule 161 and token '^' resolved as shift.
Conflict in state 296 between rule 161 and token '&' resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_EQUAL resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 296 between rule 161 and token '<' resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 161 and token '>' resolved as shift.
Conflict in state 296 between rule 161 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 296 between rule 161 and token T_SL resolved as shift.
Conflict in state 296 between rule 161 and token T_SR resolved as shift.
Conflict in state 296 between rule 161 and token '+' resolved as shift.
Conflict in state 296 between rule 161 and token '-' resolved as shift.
Conflict in state 296 between rule 161 and token '.' resolved as shift.
Conflict in state 296 between rule 161 and token '*' resolved as shift.
Conflict in state 296 between rule 161 and token '/' resolved as shift.
Conflict in state 296 between rule 161 and token '%' resolved as shift.
Conflict in state 297 between rule 162 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 297 between rule 162 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 297 between rule 162 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 297 between rule 162 and token '?' resolved as shift.
Conflict in state 297 between rule 162 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 297 between rule 162 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 297 between rule 162 and token '|' resolved as shift.
Conflict in state 297 between rule 162 and token '^' resolved as shift.
Conflict in state 297 between rule 162 and token '&' resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_EQUAL resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 297 between rule 162 and token '<' resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 162 and token '>' resolved as shift.
Conflict in state 297 between rule 162 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 297 between rule 162 and token T_SL resolved as shift.
Conflict in state 297 between rule 162 and token T_SR resolved as shift.
Conflict in state 297 between rule 162 and token '+' resolved as shift.
Conflict in state 297 between rule 162 and token '-' resolved as shift.
Conflict in state 297 between rule 162 and token '.' resolved as shift.
Conflict in state 297 between rule 162 and token '*' resolved as shift.
Conflict in state 297 between rule 162 and token '/' resolved as shift.
Conflict in state 297 between rule 162 and token '%' resolved as shift.
Conflict in state 298 between rule 163 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 298 between rule 163 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 298 between rule 163 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 298 between rule 163 and token '?' resolved as shift.
Conflict in state 298 between rule 163 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 298 between rule 163 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 298 between rule 163 and token '|' resolved as shift.
Conflict in state 298 between rule 163 and token '^' resolved as shift.
Conflict in state 298 between rule 163 and token '&' resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_EQUAL resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 298 between rule 163 and token '<' resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 163 and token '>' resolved as shift.
Conflict in state 298 between rule 163 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 298 between rule 163 and token T_SL resolved as shift.
Conflict in state 298 between rule 163 and token T_SR resolved as shift.
Conflict in state 298 between rule 163 and token '+' resolved as shift.
Conflict in state 298 between rule 163 and token '-' resolved as shift.
Conflict in state 298 between rule 163 and token '.' resolved as shift.
Conflict in state 298 between rule 163 and token '*' resolved as shift.
Conflict in state 298 between rule 163 and token '/' resolved as shift.
Conflict in state 298 between rule 163 and token '%' resolved as shift.
Conflict in state 299 between rule 164 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 299 between rule 164 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 299 between rule 164 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 299 between rule 164 and token '?' resolved as shift.
Conflict in state 299 between rule 164 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 299 between rule 164 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 299 between rule 164 and token '|' resolved as shift.
Conflict in state 299 between rule 164 and token '^' resolved as shift.
Conflict in state 299 between rule 164 and token '&' resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_EQUAL resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 299 between rule 164 and token '<' resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 164 and token '>' resolved as shift.
Conflict in state 299 between rule 164 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 299 between rule 164 and token T_SL resolved as shift.
Conflict in state 299 between rule 164 and token T_SR resolved as shift.
Conflict in state 299 between rule 164 and token '+' resolved as shift.
Conflict in state 299 between rule 164 and token '-' resolved as shift.
Conflict in state 299 between rule 164 and token '.' resolved as shift.
Conflict in state 299 between rule 164 and token '*' resolved as shift.
Conflict in state 299 between rule 164 and token '/' resolved as shift.
Conflict in state 299 between rule 164 and token '%' resolved as shift.
Conflict in state 300 between rule 165 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 300 between rule 165 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 300 between rule 165 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 300 between rule 165 and token '?' resolved as shift.
Conflict in state 300 between rule 165 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 300 between rule 165 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 300 between rule 165 and token '|' resolved as shift.
Conflict in state 300 between rule 165 and token '^' resolved as shift.
Conflict in state 300 between rule 165 and token '&' resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_EQUAL resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 300 between rule 165 and token '<' resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 165 and token '>' resolved as shift.
Conflict in state 300 between rule 165 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 300 between rule 165 and token T_SL resolved as shift.
Conflict in state 300 between rule 165 and token T_SR resolved as shift.
Conflict in state 300 between rule 165 and token '+' resolved as shift.
Conflict in state 300 between rule 165 and token '-' resolved as shift.
Conflict in state 300 between rule 165 and token '.' resolved as shift.
Conflict in state 300 between rule 165 and token '*' resolved as shift.
Conflict in state 300 between rule 165 and token '/' resolved as shift.
Conflict in state 300 between rule 165 and token '%' resolved as shift.
Conflict in state 301 between rule 166 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 301 between rule 166 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 301 between rule 166 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 301 between rule 166 and token '?' resolved as shift.
Conflict in state 301 between rule 166 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 301 between rule 166 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 301 between rule 166 and token '|' resolved as shift.
Conflict in state 301 between rule 166 and token '^' resolved as shift.
Conflict in state 301 between rule 166 and token '&' resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_EQUAL resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 301 between rule 166 and token '<' resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 166 and token '>' resolved as shift.
Conflict in state 301 between rule 166 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 301 between rule 166 and token T_SL resolved as shift.
Conflict in state 301 between rule 166 and token T_SR resolved as shift.
Conflict in state 301 between rule 166 and token '+' resolved as shift.
Conflict in state 301 between rule 166 and token '-' resolved as shift.
Conflict in state 301 between rule 166 and token '.' resolved as shift.
Conflict in state 301 between rule 166 and token '*' resolved as shift.
Conflict in state 301 between rule 166 and token '/' resolved as shift.
Conflict in state 301 between rule 166 and token '%' resolved as shift.
Conflict in state 302 between rule 167 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 302 between rule 167 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 302 between rule 167 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 302 between rule 167 and token '?' resolved as shift.
Conflict in state 302 between rule 167 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 302 between rule 167 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 302 between rule 167 and token '|' resolved as shift.
Conflict in state 302 between rule 167 and token '^' resolved as shift.
Conflict in state 302 between rule 167 and token '&' resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_EQUAL resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 302 between rule 167 and token '<' resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 167 and token '>' resolved as shift.
Conflict in state 302 between rule 167 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 302 between rule 167 and token T_SL resolved as shift.
Conflict in state 302 between rule 167 and token T_SR resolved as shift.
Conflict in state 302 between rule 167 and token '+' resolved as shift.
Conflict in state 302 between rule 167 and token '-' resolved as shift.
Conflict in state 302 between rule 167 and token '.' resolved as shift.
Conflict in state 302 between rule 167 and token '*' resolved as shift.
Conflict in state 302 between rule 167 and token '/' resolved as shift.
Conflict in state 302 between rule 167 and token '%' resolved as shift.
Conflict in state 363 between rule 177 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 363 between rule 177 and token T_LOGICAL_XOR resolved as shift.
Conflict in state 363 between rule 177 and token T_LOGICAL_AND resolved as shift.
Conflict in state 363 between rule 177 and token '?' resolved as shift.
Conflict in state 363 between rule 177 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 363 between rule 177 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 363 between rule 177 and token '|' resolved as shift.
Conflict in state 363 between rule 177 and token '^' resolved as shift.
Conflict in state 363 between rule 177 and token '&' resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_EQUAL resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 363 between rule 177 and token '<' resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 363 between rule 177 and token '>' resolved as shift.
Conflict in state 363 between rule 177 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 363 between rule 177 and token T_SL resolved as shift.
Conflict in state 363 between rule 177 and token T_SR resolved as shift.
Conflict in state 363 between rule 177 and token '+' resolved as shift.
Conflict in state 363 between rule 177 and token '-' resolved as shift.
Conflict in state 363 between rule 177 and token '.' resolved as shift.
Conflict in state 363 between rule 177 and token '*' resolved as shift.
Conflict in state 363 between rule 177 and token '/' resolved as shift.
Conflict in state 363 between rule 177 and token '%' resolved as shift.
Conflict in state 364 between rule 179 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 364 between rule 179 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 364 between rule 179 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 364 between rule 179 and token '?' resolved as shift.
Conflict in state 364 between rule 179 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 364 between rule 179 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 364 between rule 179 and token '|' resolved as shift.
Conflict in state 364 between rule 179 and token '^' resolved as shift.
Conflict in state 364 between rule 179 and token '&' resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_EQUAL resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 364 between rule 179 and token '<' resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 364 between rule 179 and token '>' resolved as shift.
Conflict in state 364 between rule 179 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 364 between rule 179 and token T_SL resolved as shift.
Conflict in state 364 between rule 179 and token T_SR resolved as shift.
Conflict in state 364 between rule 179 and token '+' resolved as shift.
Conflict in state 364 between rule 179 and token '-' resolved as shift.
Conflict in state 364 between rule 179 and token '.' resolved as shift.
Conflict in state 364 between rule 179 and token '*' resolved as shift.
Conflict in state 364 between rule 179 and token '/' resolved as shift.
Conflict in state 364 between rule 179 and token '%' resolved as shift.
Conflict in state 366 between rule 173 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 366 between rule 173 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 366 between rule 173 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 366 between rule 173 and token '?' resolved as reduce.
Conflict in state 366 between rule 173 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 366 between rule 173 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 366 between rule 173 and token '|' resolved as shift.
Conflict in state 366 between rule 173 and token '^' resolved as shift.
Conflict in state 366 between rule 173 and token '&' resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_EQUAL resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 366 between rule 173 and token '<' resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 366 between rule 173 and token '>' resolved as shift.
Conflict in state 366 between rule 173 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 366 between rule 173 and token T_SL resolved as shift.
Conflict in state 366 between rule 173 and token T_SR resolved as shift.
Conflict in state 366 between rule 173 and token '+' resolved as shift.
Conflict in state 366 between rule 173 and token '-' resolved as shift.
Conflict in state 366 between rule 173 and token '.' resolved as shift.
Conflict in state 366 between rule 173 and token '*' resolved as shift.
Conflict in state 366 between rule 173 and token '/' resolved as shift.
Conflict in state 366 between rule 173 and token '%' resolved as shift.
Conflict in state 367 between rule 175 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 367 between rule 175 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 367 between rule 175 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 367 between rule 175 and token '?' resolved as reduce.
Conflict in state 367 between rule 175 and token T_BOOLEAN_OR resolved as reduce.
Conflict in state 367 between rule 175 and token T_BOOLEAN_AND resolved as reduce.
Conflict in state 367 between rule 175 and token '|' resolved as shift.
Conflict in state 367 between rule 175 and token '^' resolved as shift.
Conflict in state 367 between rule 175 and token '&' resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_EQUAL resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 367 between rule 175 and token '<' resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 367 between rule 175 and token '>' resolved as shift.
Conflict in state 367 between rule 175 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 367 between rule 175 and token T_SL resolved as shift.
Conflict in state 367 between rule 175 and token T_SR resolved as shift.
Conflict in state 367 between rule 175 and token '+' resolved as shift.
Conflict in state 367 between rule 175 and token '-' resolved as shift.
Conflict in state 367 between rule 175 and token '.' resolved as shift.
Conflict in state 367 between rule 175 and token '*' resolved as shift.
Conflict in state 367 between rule 175 and token '/' resolved as shift.
Conflict in state 367 between rule 175 and token '%' resolved as shift.
Conflict in state 513 between rule 151 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 513 between rule 151 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 513 between rule 151 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 513 between rule 151 and token '?' resolved as shift.
Conflict in state 513 between rule 151 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 513 between rule 151 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 513 between rule 151 and token '|' resolved as shift.
Conflict in state 513 between rule 151 and token '^' resolved as shift.
Conflict in state 513 between rule 151 and token '&' resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_EQUAL resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 513 between rule 151 and token '<' resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 513 between rule 151 and token '>' resolved as shift.
Conflict in state 513 between rule 151 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 513 between rule 151 and token T_SL resolved as shift.
Conflict in state 513 between rule 151 and token T_SR resolved as shift.
Conflict in state 513 between rule 151 and token '+' resolved as shift.
Conflict in state 513 between rule 151 and token '-' resolved as shift.
Conflict in state 513 between rule 151 and token '.' resolved as shift.
Conflict in state 513 between rule 151 and token '*' resolved as shift.
Conflict in state 513 between rule 151 and token '/' resolved as shift.
Conflict in state 513 between rule 151 and token '%' resolved as shift.
Conflict in state 518 between rule 207 and token T_LOGICAL_OR resolved as reduce.
Conflict in state 518 between rule 207 and token T_LOGICAL_XOR resolved as reduce.
Conflict in state 518 between rule 207 and token T_LOGICAL_AND resolved as reduce.
Conflict in state 518 between rule 207 and token '?' resolved as reduce.
Conflict in state 518 between rule 207 and token T_BOOLEAN_OR resolved as shift.
Conflict in state 518 between rule 207 and token T_BOOLEAN_AND resolved as shift.
Conflict in state 518 between rule 207 and token '|' resolved as shift.
Conflict in state 518 between rule 207 and token '^' resolved as shift.
Conflict in state 518 between rule 207 and token '&' resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_EQUAL resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_NOT_EQUAL resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_IDENTICAL resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_NOT_IDENTICAL resolved as shift.
Conflict in state 518 between rule 207 and token '<' resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_SMALLER_OR_EQUAL resolved as shift.
Conflict in state 518 between rule 207 and token '>' resolved as shift.
Conflict in state 518 between rule 207 and token T_IS_GREATER_OR_EQUAL resolved as shift.
Conflict in state 518 between rule 207 and token T_SL resolved as shift.
Conflict in state 518 between rule 207 and token T_SR resolved as shift.
Conflict in state 518 between rule 207 and token '+' resolved as shift.
Conflict in state 518 between rule 207 and token '-' resolved as shift.
Conflict in state 518 between rule 207 and token '.' resolved as shift.
Conflict in state 518 between rule 207 and token '*' resolved as shift.
Conflict in state 518 between rule 207 and token '/' resolved as shift.
Conflict in state 518 between rule 207 and token '%' resolved as shift.
State 78 contains 1 shift/reduce conflict.
State 197 contains 1 shift/reduce conflict.
State 244 contains 2 shift/reduce conflicts.
State 379 contains 1 shift/reduce conflict.
State 523 contains 2 shift/reduce conflicts.

Grammar
rule 1    start -> top_statement_list
rule 2    @1 ->		/* empty */
rule 3    top_statement_list -> top_statement_list @1 top_statement
rule 4    top_statement_list ->		/* empty */
rule 5    top_statement -> statement
rule 6    top_statement -> declaration_statement
rule 7    @2 ->		/* empty */
rule 8    inner_statement_list -> inner_statement_list @2 inner_statement
rule 9    inner_statement_list ->		/* empty */
rule 10   inner_statement -> statement
rule 11   inner_statement -> declaration_statement
rule 12   statement -> unticked_statement
rule 13   unticked_statement -> '{' inner_statement_list '}'
rule 14   @3 ->		/* empty */
rule 15   @4 ->		/* empty */
rule 16   unticked_statement -> T_IF '(' expr ')' @3 statement @4 elseif_list else_single
rule 17   @5 ->		/* empty */
rule 18   @6 ->		/* empty */
rule 19   unticked_statement -> T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'
rule 20   @7 ->		/* empty */
rule 21   @8 ->		/* empty */
rule 22   unticked_statement -> T_WHILE '(' @7 expr ')' @8 while_statement
rule 23   @9 ->		/* empty */
rule 24   @10 ->		/* empty */
rule 25   unticked_statement -> T_DO @9 statement T_WHILE '(' @10 expr ')' ';'
rule 26   @11 ->		/* empty */
rule 27   @12 ->		/* empty */
rule 28   @13 ->		/* empty */
rule 29   unticked_statement -> T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement
rule 30   @14 ->		/* empty */
rule 31   unticked_statement -> T_SWITCH '(' expr ')' @14 switch_case_list
rule 32   unticked_statement -> T_BREAK ';'
rule 33   unticked_statement -> T_BREAK expr ';'
rule 34   unticked_statement -> T_CONTINUE ';'
rule 35   unticked_statement -> T_CONTINUE expr ';'
rule 36   unticked_statement -> T_RETURN ';'
rule 37   unticked_statement -> T_RETURN expr_without_variable ';'
rule 38   unticked_statement -> T_RETURN cvar ';'
rule 39   unticked_statement -> T_GLOBAL global_var_list
rule 40   unticked_statement -> T_STATIC static_var_list
rule 41   unticked_statement -> T_ECHO echo_expr_list ';'
rule 42   unticked_statement -> T_INLINE_HTML
rule 43   unticked_statement -> expr ';'
rule 44   unticked_statement -> T_REQUIRE expr ';'
rule 45   unticked_statement -> T_REQUIRE_ONCE use_filename ';'
rule 46   unticked_statement -> T_USE use_filename ';'
rule 47   unticked_statement -> T_UNSET '(' cvar ')' ';'
rule 48   @15 ->		/* empty */
rule 49   @16 ->		/* empty */
rule 50   unticked_statement -> T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement
rule 51   @17 ->		/* empty */
rule 52   unticked_statement -> T_DECLARE @17 '(' declare_list ')' declare_statement
rule 53   unticked_statement -> ';'
rule 54   use_filename -> T_CONSTANT_ENCAPSED_STRING
rule 55   use_filename -> '(' T_CONSTANT_ENCAPSED_STRING ')'
rule 56   declaration_statement -> unticked_declaration_statement
rule 57   @18 ->		/* empty */
rule 58   @19 ->		/* empty */
rule 59   unticked_declaration_statement -> T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'
rule 60   @20 ->		/* empty */
rule 61   @21 ->		/* empty */
rule 62   unticked_declaration_statement -> T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'
rule 63   @22 ->		/* empty */
rule 64   unticked_declaration_statement -> T_CLASS T_STRING @22 '{' class_statement_list '}'
rule 65   @23 ->		/* empty */
rule 66   unticked_declaration_statement -> T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}'
rule 67   foreach_optional_arg ->		/* empty */
rule 68   foreach_optional_arg -> T_DOUBLE_ARROW w_cvar
rule 69   for_statement -> statement
rule 70   for_statement -> ':' inner_statement_list T_ENDFOR ';'
rule 71   foreach_statement -> statement
rule 72   foreach_statement -> ':' inner_statement_list T_ENDFOREACH ';'
rule 73   declare_statement -> statement
rule 74   declare_statement -> ':' inner_statement_list T_ENDDECLARE ';'
rule 75   declare_list -> T_STRING '=' static_scalar
rule 76   declare_list -> declare_list ',' T_STRING '=' static_scalar
rule 77   switch_case_list -> '{' case_list '}'
rule 78   switch_case_list -> '{' ';' case_list '}'
rule 79   switch_case_list -> ':' case_list T_ENDSWITCH ';'
rule 80   switch_case_list -> ':' ';' case_list T_ENDSWITCH ';'
rule 81   case_list ->		/* empty */
rule 82   @24 ->		/* empty */
rule 83   case_list -> case_list T_CASE expr case_separator @24 inner_statement_list
rule 84   @25 ->		/* empty */
rule 85   case_list -> case_list T_DEFAULT case_separator @25 inner_statement_list
rule 86   case_separator -> ':'
rule 87   case_separator -> ';'
rule 88   while_statement -> statement
rule 89   while_statement -> ':' inner_statement_list T_ENDWHILE ';'
rule 90   elseif_list ->		/* empty */
rule 91   @26 ->		/* empty */
rule 92   elseif_list -> elseif_list T_ELSEIF '(' expr ')' @26 statement
rule 93   new_elseif_list ->		/* empty */
rule 94   @27 ->		/* empty */
rule 95   new_elseif_list -> new_elseif_list T_ELSEIF '(' expr ')' ':' @27 inner_statement_list
rule 96   else_single ->		/* empty */
rule 97   else_single -> T_ELSE statement
rule 98   new_else_single ->		/* empty */
rule 99   new_else_single -> T_ELSE ':' inner_statement_list
rule 100  parameter_list -> non_empty_parameter_list
rule 101  parameter_list ->		/* empty */
rule 102  non_empty_parameter_list -> T_VARIABLE
rule 103  non_empty_parameter_list -> '&' T_VARIABLE
rule 104  non_empty_parameter_list -> T_CONST T_VARIABLE
rule 105  non_empty_parameter_list -> T_VARIABLE '=' static_scalar
rule 106  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE
rule 107  non_empty_parameter_list -> non_empty_parameter_list ',' '&' T_VARIABLE
rule 108  non_empty_parameter_list -> non_empty_parameter_list ',' T_CONST T_VARIABLE
rule 109  non_empty_parameter_list -> non_empty_parameter_list ',' T_VARIABLE '=' static_scalar
rule 110  function_call_parameter_list -> non_empty_function_call_parameter_list
rule 111  function_call_parameter_list ->		/* empty */
rule 112  non_empty_function_call_parameter_list -> expr_without_variable
rule 113  non_empty_function_call_parameter_list -> cvar
rule 114  non_empty_function_call_parameter_list -> '&' w_cvar
rule 115  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' expr_without_variable
rule 116  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' cvar
rule 117  non_empty_function_call_parameter_list -> non_empty_function_call_parameter_list ',' '&' w_cvar
rule 118  global_var_list -> global_var_list ',' global_var
rule 119  global_var_list -> global_var
rule 120  global_var -> T_VARIABLE
rule 121  global_var -> '$' r_cvar
rule 122  global_var -> '$' '{' expr '}'
rule 123  static_var_list -> static_var_list ',' T_VARIABLE
rule 124  static_var_list -> static_var_list ',' T_VARIABLE '=' static_scalar
rule 125  static_var_list -> T_VARIABLE
rule 126  static_var_list -> T_VARIABLE '=' static_scalar
rule 127  class_statement_list -> class_statement_list class_statement
rule 128  class_statement_list ->		/* empty */
rule 129  class_statement -> T_VAR class_variable_decleration ';'
rule 130  @28 ->		/* empty */
rule 131  @29 ->		/* empty */
rule 132  class_statement -> T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'
rule 133  @30 ->		/* empty */
rule 134  @31 ->		/* empty */
rule 135  class_statement -> T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'
rule 136  is_reference ->		/* empty */
rule 137  is_reference -> '&'
rule 138  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE
rule 139  class_variable_decleration -> class_variable_decleration ',' T_VARIABLE '=' static_scalar
rule 140  class_variable_decleration -> T_VARIABLE
rule 141  class_variable_decleration -> T_VARIABLE '=' static_scalar
rule 142  echo_expr_list ->		/* empty */
rule 143  echo_expr_list -> echo_expr_list ',' expr
rule 144  echo_expr_list -> expr
rule 145  for_expr ->		/* empty */
rule 146  for_expr -> non_empty_for_expr
rule 147  @32 ->		/* empty */
rule 148  non_empty_for_expr -> non_empty_for_expr ',' @32 expr
rule 149  non_empty_for_expr -> expr
rule 150  @33 ->		/* empty */
rule 151  expr_without_variable -> T_LIST '(' @33 assignment_list ')' '=' expr
rule 152  expr_without_variable -> cvar '=' expr
rule 153  expr_without_variable -> cvar '=' '&' w_cvar
rule 154  expr_without_variable -> cvar '=' '&' function_call
rule 155  @34 ->		/* empty */
rule 156  expr_without_variable -> T_NEW class_name @34 ctor_arguments
rule 157  expr_without_variable -> cvar T_PLUS_EQUAL expr
rule 158  expr_without_variable -> cvar T_MINUS_EQUAL expr
rule 159  expr_without_variable -> cvar T_MUL_EQUAL expr
rule 160  expr_without_variable -> cvar T_DIV_EQUAL expr
rule 161  expr_without_variable -> cvar T_CONCAT_EQUAL expr
rule 162  expr_without_variable -> cvar T_MOD_EQUAL expr
rule 163  expr_without_variable -> cvar T_AND_EQUAL expr
rule 164  expr_without_variable -> cvar T_OR_EQUAL expr
rule 165  expr_without_variable -> cvar XT_OR_EQUAL expr
rule 166  expr_without_variable -> cvar T_SL_EQUAL expr
rule 167  expr_without_variable -> cvar T_SR_EQUAL expr
rule 168  expr_without_variable -> rw_cvar T_INC
rule 169  expr_without_variable -> T_INC rw_cvar
rule 170  expr_without_variable -> rw_cvar T_DEC
rule 171  expr_without_variable -> T_DEC rw_cvar
rule 172  @35 ->		/* empty */
rule 173  expr_without_variable -> expr T_BOOLEAN_OR @35 expr
rule 174  @36 ->		/* empty */
rule 175  expr_without_variable -> expr T_BOOLEAN_AND @36 expr
rule 176  @37 ->		/* empty */
rule 177  expr_without_variable -> expr T_LOGICAL_OR @37 expr
rule 178  @38 ->		/* empty */
rule 179  expr_without_variable -> expr T_LOGICAL_AND @38 expr
rule 180  expr_without_variable -> expr T_LOGICAL_XOR expr
rule 181  expr_without_variable -> expr '|' expr
rule 182  expr_without_variable -> expr '&' expr
rule 183  expr_without_variable -> expr '^' expr
rule 184  expr_without_variable -> expr '.' expr
rule 185  expr_without_variable -> expr '+' expr
rule 186  expr_without_variable -> expr '-' expr
rule 187  expr_without_variable -> expr '*' expr
rule 188  expr_without_variable -> expr '/' expr
rule 189  expr_without_variable -> expr '%' expr
rule 190  expr_without_variable -> expr T_SL expr
rule 191  expr_without_variable -> expr T_SR expr
rule 192  expr_without_variable -> '+' expr
rule 193  expr_without_variable -> '-' expr
rule 194  expr_without_variable -> '!' expr
rule 195  expr_without_variable -> '~' expr
rule 196  expr_without_variable -> expr T_IS_IDENTICAL expr
rule 197  expr_without_variable -> expr T_IS_NOT_IDENTICAL expr
rule 198  expr_without_variable -> expr T_IS_EQUAL expr
rule 199  expr_without_variable -> expr T_IS_NOT_EQUAL expr
rule 200  expr_without_variable -> expr '<' expr
rule 201  expr_without_variable -> expr T_IS_SMALLER_OR_EQUAL expr
rule 202  expr_without_variable -> expr '>' expr
rule 203  expr_without_variable -> expr T_IS_GREATER_OR_EQUAL expr
rule 204  expr_without_variable -> '(' expr ')'
rule 205  @39 ->		/* empty */
rule 206  @40 ->		/* empty */
rule 207  expr_without_variable -> expr '?' @39 expr ':' @40 expr
rule 208  expr_without_variable -> function_call
rule 209  expr_without_variable -> internal_functions_in_yacc
rule 210  expr_without_variable -> T_INT_CAST expr
rule 211  expr_without_variable -> T_DOUBLE_CAST expr
rule 212  expr_without_variable -> T_STRING_CAST expr
rule 213  expr_without_variable -> T_ARRAY_CAST expr
rule 214  expr_without_variable -> T_OBJECT_CAST expr
rule 215  expr_without_variable -> T_BOOL_CAST expr
rule 216  expr_without_variable -> T_UNSET_CAST expr
rule 217  expr_without_variable -> T_EXIT exit_expr
rule 218  @41 ->		/* empty */
rule 219  expr_without_variable -> '@' @41 expr
rule 220  expr_without_variable -> scalar
rule 221  expr_without_variable -> T_ARRAY '(' array_pair_list ')'
rule 222  expr_without_variable -> '`' encaps_list '`'
rule 223  expr_without_variable -> T_PRINT expr
rule 224  @42 ->		/* empty */
rule 225  function_call -> T_STRING '(' @42 function_call_parameter_list ')'
rule 226  @43 ->		/* empty */
rule 227  function_call -> r_cvar '(' @43 function_call_parameter_list ')'
rule 228  @44 ->		/* empty */
rule 229  function_call -> T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'
rule 230  exit_expr ->		/* empty */
rule 231  exit_expr -> '(' ')'
rule 232  exit_expr -> '(' expr ')'
rule 233  ctor_arguments ->		/* empty */
rule 234  ctor_arguments -> '(' function_call_parameter_list ')'
rule 235  class_name -> T_STRING
rule 236  class_name -> r_cvar
rule 237  common_scalar -> T_LNUMBER
rule 238  common_scalar -> T_DNUMBER
rule 239  common_scalar -> T_CONSTANT_ENCAPSED_STRING
rule 240  common_scalar -> T_LINE
rule 241  common_scalar -> T_FILE
rule 242  static_scalar -> common_scalar
rule 243  static_scalar -> T_STRING
rule 244  static_scalar -> '+' static_scalar
rule 245  static_scalar -> '-' static_scalar
rule 246  static_scalar -> T_ARRAY '(' static_array_pair_list ')'
rule 247  scalar -> T_STRING
rule 248  scalar -> T_STRING_VARNAME
rule 249  scalar -> common_scalar
rule 250  scalar -> '"' encaps_list '"'
rule 251  scalar -> ''' encaps_list '''
rule 252  scalar -> T_START_HEREDOC encaps_list T_END_HEREDOC
rule 253  static_array_pair_list ->		/* empty */
rule 254  static_array_pair_list -> non_empty_static_array_pair_list possible_comma
rule 255  possible_comma ->		/* empty */
rule 256  possible_comma -> ','
rule 257  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar
rule 258  non_empty_static_array_pair_list -> non_empty_static_array_pair_list ',' static_scalar
rule 259  non_empty_static_array_pair_list -> static_scalar T_DOUBLE_ARROW static_scalar
rule 260  non_empty_static_array_pair_list -> static_scalar
rule 261  expr -> r_cvar
rule 262  expr -> expr_without_variable
rule 263  r_cvar -> cvar
rule 264  w_cvar -> cvar
rule 265  rw_cvar -> cvar
rule 266  cvar -> cvar_without_objects
rule 267  @45 ->		/* empty */
rule 268  cvar -> cvar_without_objects T_OBJECT_OPERATOR @45 ref_list
rule 269  cvar_without_objects -> reference_variable
rule 270  cvar_without_objects -> simple_indirect_reference reference_variable
rule 271  reference_variable -> reference_variable '[' dim_offset ']'
rule 272  reference_variable -> reference_variable '{' expr '}'
rule 273  reference_variable -> compound_variable
rule 274  compound_variable -> T_VARIABLE
rule 275  compound_variable -> '$' '{' expr '}'
rule 276  dim_offset ->		/* empty */
rule 277  dim_offset -> expr
rule 278  ref_list -> object_property
rule 279  @46 ->		/* empty */
rule 280  ref_list -> ref_list T_OBJECT_OPERATOR @46 object_property
rule 281  object_property -> object_dim_list
rule 282  @47 ->		/* empty */
rule 283  object_property -> cvar_without_objects @47
rule 284  object_dim_list -> object_dim_list '[' dim_offset ']'
rule 285  object_dim_list -> object_dim_list '{' expr '}'
rule 286  object_dim_list -> variable_name
rule 287  variable_name -> T_STRING
rule 288  variable_name -> '{' expr '}'
rule 289  simple_indirect_reference -> '$'
rule 290  simple_indirect_reference -> simple_indirect_reference '$'
rule 291  assignment_list -> assignment_list ',' assignment_list_element
rule 292  assignment_list -> assignment_list_element
rule 293  assignment_list_element -> cvar
rule 294  @48 ->		/* empty */
rule 295  assignment_list_element -> T_LIST '(' @48 assignment_list ')'
rule 296  assignment_list_element ->		/* empty */
rule 297  array_pair_list ->		/* empty */
rule 298  array_pair_list -> non_empty_array_pair_list possible_comma
rule 299  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr
rule 300  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr
rule 301  non_empty_array_pair_list -> expr T_DOUBLE_ARROW expr
rule 302  non_empty_array_pair_list -> expr
rule 303  non_empty_array_pair_list -> non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar
rule 304  non_empty_array_pair_list -> non_empty_array_pair_list ',' '&' w_cvar
rule 305  non_empty_array_pair_list -> expr T_DOUBLE_ARROW '&' w_cvar
rule 306  non_empty_array_pair_list -> '&' w_cvar
rule 307  encaps_list -> encaps_list encaps_var
rule 308  encaps_list -> encaps_list T_STRING
rule 309  encaps_list -> encaps_list T_NUM_STRING
rule 310  encaps_list -> encaps_list T_ENCAPSED_AND_WHITESPACE
rule 311  encaps_list -> encaps_list T_CHARACTER
rule 312  encaps_list -> encaps_list T_BAD_CHARACTER
rule 313  encaps_list -> encaps_list '['
rule 314  encaps_list -> encaps_list ']'
rule 315  encaps_list -> encaps_list '{'
rule 316  encaps_list -> encaps_list '}'
rule 317  encaps_list -> encaps_list T_OBJECT_OPERATOR
rule 318  encaps_list ->		/* empty */
rule 319  encaps_var -> T_VARIABLE
rule 320  @49 ->		/* empty */
rule 321  encaps_var -> T_VARIABLE '[' @49 encaps_var_offset ']'
rule 322  encaps_var -> T_VARIABLE T_OBJECT_OPERATOR T_STRING
rule 323  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES expr '}'
rule 324  encaps_var -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'
rule 325  encaps_var -> T_CURLY_OPEN cvar '}'
rule 326  encaps_var_offset -> T_STRING
rule 327  encaps_var_offset -> T_NUM_STRING
rule 328  encaps_var_offset -> T_VARIABLE
rule 329  internal_functions_in_yacc -> T_ISSET '(' cvar ')'
rule 330  internal_functions_in_yacc -> T_EMPTY '(' cvar ')'
rule 331  internal_functions_in_yacc -> T_INCLUDE expr
rule 332  internal_functions_in_yacc -> T_INCLUDE_ONCE expr
rule 333  internal_functions_in_yacc -> T_EVAL '(' expr ')'

Terminals, with rules where they appear

$ (-1)
'!' (33) 194
'"' (34) 250
'$' (36) 121 122 275 289 290
'%' (37) 189
'&' (38) 103 107 114 117 137 153 154 182 303 304 305 306
''' (39) 251
'(' (40) 16 19 22 25 29 31 47 50 52 55 59 62 92 95 132 135 151 204
    221 225 227 229 231 232 234 246 295 329 330 333
')' (41) 16 19 22 25 29 31 47 50 52 55 59 62 92 95 132 135 151 204
    221 225 227 229 231 232 234 246 295 329 330 333
'*' (42) 187
'+' (43) 185 192 244
',' (44) 76 106 107 108 109 115 116 117 118 123 124 138 139 143 148
    256 257 258 291 299 300 303 304
'-' (45) 186 193 245
'.' (46) 184
'/' (47) 188
':' (58) 19 70 72 74 79 80 86 89 95 99 207
';' (59) 19 25 29 32 33 34 35 36 37 38 41 43 44 45 46 47 53 62 70 72
    74 78 79 80 87 89 129 135
'<' (60) 200
'=' (61) 75 76 105 109 124 126 139 141 151 152 153 154
'>' (62) 202
'?' (63) 207
'@' (64) 219
'[' (91) 271 284 313 321 324
']' (93) 271 284 314 321 324
'^' (94) 183
'`' (96) 222
'{' (123) 13 59 64 66 77 78 122 132 272 275 285 288 315
'|' (124) 181
'}' (125) 13 59 64 66 77 78 122 132 272 275 285 288 316 323 324 325
'~' (126) 195
error (256)
T_INCLUDE (258) 331
T_INCLUDE_ONCE (259) 332
T_EVAL (260) 333
T_LOGICAL_OR (261) 177
T_LOGICAL_XOR (262) 180
T_LOGICAL_AND (263) 179
T_PRINT (264) 223
T_PLUS_EQUAL (265) 157
T_MINUS_EQUAL (266) 158
T_MUL_EQUAL (267) 159
T_DIV_EQUAL (268) 160
T_CONCAT_EQUAL (269) 161
T_MOD_EQUAL (270) 162
T_AND_EQUAL (271) 163
T_OR_EQUAL (272) 164
XT_OR_EQUAL (273) 165
T_SL_EQUAL (274) 166
T_SR_EQUAL (275) 167
T_BOOLEAN_OR (276) 173
T_BOOLEAN_AND (277) 175
T_IS_EQUAL (278) 198
T_IS_NOT_EQUAL (279) 199
T_IS_IDENTICAL (280) 196
T_IS_NOT_IDENTICAL (281) 197
T_IS_SMALLER_OR_EQUAL (282) 201
T_IS_GREATER_OR_EQUAL (283) 203
T_SL (284) 190
T_SR (285) 191
T_INC (286) 168 169
T_DEC (287) 170 171
T_INT_CAST (288) 210
T_DOUBLE_CAST (289) 211
T_STRING_CAST (290) 212
T_ARRAY_CAST (291) 213
T_OBJECT_CAST (292) 214
T_BOOL_CAST (293) 215
T_UNSET_CAST (294) 216
T_NEW (295) 156
T_EXIT (296) 217
T_IF (297) 16 19
T_ELSEIF (298) 92 95
T_ELSE (299) 97 99
T_ENDIF (300) 19
T_LNUMBER (301) 237
T_DNUMBER (302) 238
T_STRING (303) 59 62 64 66 75 76 132 135 225 229 235 243 247 287 308
    322 326
T_STRING_VARNAME (304) 248 324
T_VARIABLE (305) 102 103 104 105 106 107 108 109 120 123 124 125 126
    138 139 140 141 274 319 321 322 328
T_NUM_STRING (306) 309 327
T_INLINE_HTML (307) 42
T_CHARACTER (308) 311
T_BAD_CHARACTER (309) 312
T_ENCAPSED_AND_WHITESPACE (310) 310
T_CONSTANT_ENCAPSED_STRING (311) 54 55 239
T_ECHO (312) 41
T_DO (313) 25
T_WHILE (314) 22 25
T_ENDWHILE (315) 89
T_FOR (316) 29
T_ENDFOR (317) 70
T_FOREACH (318) 50
T_ENDFOREACH (319) 72
T_DECLARE (320) 52
T_ENDDECLARE (321) 74
T_AS (322) 50
T_SWITCH (323) 31
T_ENDSWITCH (324) 79 80
T_CASE (325) 83
T_DEFAULT (326) 85
T_BREAK (327) 32 33
T_CONTINUE (328) 34 35
T_OLD_FUNCTION (329) 62 135
T_FUNCTION (330) 59 132
T_CONST (331) 104 108
T_RETURN (332) 36 37 38
T_REQUIRE (333) 44
T_REQUIRE_ONCE (334) 45
T_USE (335) 46
T_GLOBAL (336) 39
T_STATIC (337) 40
T_VAR (338) 129
T_UNSET (339) 47
T_ISSET (340) 329
T_EMPTY (341) 330
T_CLASS (342) 64 66
T_EXTENDS (343) 66
T_OBJECT_OPERATOR (344) 268 280 317 322
T_DOUBLE_ARROW (345) 68 257 259 299 301 303 305
T_LIST (346) 151 295
T_ARRAY (347) 221 246
T_LINE (348) 240
T_FILE (349) 241
T_COMMENT (350)
T_ML_COMMENT (351)
T_OPEN_TAG (352)
T_OPEN_TAG_WITH_ECHO (353)
T_CLOSE_TAG (354)
T_WHITESPACE (355)
T_START_HEREDOC (356) 252
T_END_HEREDOC (357) 252
T_DOLLAR_OPEN_CURLY_BRACES (358) 323 324
T_CURLY_OPEN (359) 325
T_PAAMAYIM_NEKUDOTAYIM (360) 229
T_PHP_TRACK_VARS (361)

Nonterminals, with rules where they appear

start (136)
    on left: 1
top_statement_list (137)
    on left: 3 4, on right: 1 3
@1 (138)
    on left: 2, on right: 3
top_statement (139)
    on left: 5 6, on right: 3
inner_statement_list (140)
    on left: 8 9, on right: 8 13 19 59 62 70 72 74 83 85 89 95 99 132
    135
@2 (141)
    on left: 7, on right: 8
inner_statement (142)
    on left: 10 11, on right: 8
statement (143)
    on left: 12, on right: 5 10 16 25 69 71 73 88 92 97
unticked_statement (144)
    on left: 13 16 19 22 25 29 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 50 52 53, on right: 12
@3 (145)
    on left: 14, on right: 16
@4 (146)
    on left: 15, on right: 16
@5 (147)
    on left: 17, on right: 19
@6 (148)
    on left: 18, on right: 19
@7 (149)
    on left: 20, on right: 22
@8 (150)
    on left: 21, on right: 22
@9 (151)
    on left: 23, on right: 25
@10 (152)
    on left: 24, on right: 25
@11 (153)
    on left: 26, on right: 29
@12 (154)
    on left: 27, on right: 29
@13 (155)
    on left: 28, on right: 29
@14 (156)
    on left: 30, on right: 31
@15 (157)
    on left: 48, on right: 50
@16 (158)
    on left: 49, on right: 50
@17 (159)
    on left: 51, on right: 52
use_filename (160)
    on left: 54 55, on right: 45 46
declaration_statement (161)
    on left: 56, on right: 6 11
unticked_declaration_statement (162)
    on left: 59 62 64 66, on right: 56
@18 (163)
    on left: 57, on right: 59
@19 (164)
    on left: 58, on right: 59
@20 (165)
    on left: 60, on right: 62
@21 (166)
    on left: 61, on right: 62
@22 (167)
    on left: 63, on right: 64
@23 (168)
    on left: 65, on right: 66
foreach_optional_arg (169)
    on left: 67 68, on right: 50
for_statement (170)
    on left: 69 70, on right: 29
foreach_statement (171)
    on left: 71 72, on right: 50
declare_statement (172)
    on left: 73 74, on right: 52
declare_list (173)
    on left: 75 76, on right: 52 76
switch_case_list (174)
    on left: 77 78 79 80, on right: 31
case_list (175)
    on left: 81 83 85, on right: 77 78 79 80 83 85
@24 (176)
    on left: 82, on right: 83
@25 (177)
    on left: 84, on right: 85
case_separator (178)
    on left: 86 87, on right: 83 85
while_statement (179)
    on left: 88 89, on right: 22
elseif_list (180)
    on left: 90 92, on right: 16 92
@26 (181)
    on left: 91, on right: 92
new_elseif_list (182)
    on left: 93 95, on right: 19 95
@27 (183)
    on left: 94, on right: 95
else_single (184)
    on left: 96 97, on right: 16
new_else_single (185)
    on left: 98 99, on right: 19
parameter_list (186)
    on left: 100 101, on right: 59 62 132 135
non_empty_parameter_list (187)
    on left: 102 103 104 105 106 107 108 109, on right: 100 106 107
    108 109
function_call_parameter_list (188)
    on left: 110 111, on right: 225 227 229 234
non_empty_function_call_parameter_list (189)
    on left: 112 113 114 115 116 117, on right: 110 115 116 117
global_var_list (190)
    on left: 118 119, on right: 39 118
global_var (191)
    on left: 120 121 122, on right: 118 119
static_var_list (192)
    on left: 123 124 125 126, on right: 40 123 124
class_statement_list (193)
    on left: 127 128, on right: 64 66 127
class_statement (194)
    on left: 129 132 135, on right: 127
@28 (195)
    on left: 130, on right: 132
@29 (196)
    on left: 131, on right: 132
@30 (197)
    on left: 133, on right: 135
@31 (198)
    on left: 134, on right: 135
is_reference (199)
    on left: 136 137, on right: 59 62 132 135
class_variable_decleration (200)
    on left: 138 139 140 141, on right: 129 138 139
echo_expr_list (201)
    on left: 142 143 144, on right: 41 143
for_expr (202)
    on left: 145 146, on right: 29
non_empty_for_expr (203)
    on left: 148 149, on right: 146 148
@32 (204)
    on left: 147, on right: 148
expr_without_variable (205)
    on left: 151 152 153 154 156 157 158 159 160 161 162 163 164 165
    166 167 168 169 170 171 173 175 177 179 180 181 182 183 184 185
    186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201
    202 203 204 207 208 209 210 211 212 213 214 215 216 217 219 220
    221 222 223, on right: 37 112 115 262
@33 (206)
    on left: 150, on right: 151
@34 (207)
    on left: 155, on right: 156
@35 (208)
    on left: 172, on right: 173
@36 (209)
    on left: 174, on right: 175
@37 (210)
    on left: 176, on right: 177
@38 (211)
    on left: 178, on right: 179
@39 (212)
    on left: 205, on right: 207
@40 (213)
    on left: 206, on right: 207
@41 (214)
    on left: 218, on right: 219
function_call (215)
    on left: 225 227 229, on right: 154 208
@42 (216)
    on left: 224, on right: 225
@43 (217)
    on left: 226, on right: 227
@44 (218)
    on left: 228, on right: 229
exit_expr (219)
    on left: 230 231 232, on right: 217
ctor_arguments (220)
    on left: 233 234, on right: 156
class_name (221)
    on left: 235 236, on right: 156
common_scalar (222)
    on left: 237 238 239 240 241, on right: 242 249
static_scalar (223)
    on left: 242 243 244 245 246, on right: 75 76 105 109 124 126 139
    141 244 245 257 258 259 260
scalar (224)
    on left: 247 248 249 250 251 252, on right: 220
static_array_pair_list (225)
    on left: 253 254, on right: 246
possible_comma (226)
    on left: 255 256, on right: 254 298
non_empty_static_array_pair_list (227)
    on left: 257 258 259 260, on right: 254 257 258
expr (228)
    on left: 261 262, on right: 16 19 22 25 31 33 35 43 44 50 83 92
    95 122 143 144 148 149 151 152 157 158 159 160 161 162 163 164
    165 166 167 173 175 177 179 180 181 182 183 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
    207 210 211 212 213 214 215 216 219 223 232 272 275 277 285 288
    299 300 301 302 303 305 323 324 331 332 333
r_cvar (229)
    on left: 263, on right: 121 227 236 261
w_cvar (230)
    on left: 264, on right: 50 68 114 117 153 303 304 305 306
rw_cvar (231)
    on left: 265, on right: 168 169 170 171
cvar (232)
    on left: 266 268, on right: 38 47 113 116 152 153 154 157 158 159
    160 161 162 163 164 165 166 167 263 264 265 293 325 329 330
@45 (233)
    on left: 267, on right: 268
cvar_without_objects (234)
    on left: 269 270, on right: 266 268 283
reference_variable (235)
    on left: 271 272 273, on right: 269 270 271 272
compound_variable (236)
    on left: 274 275, on right: 273
dim_offset (237)
    on left: 276 277, on right: 271 284
ref_list (238)
    on left: 278 280, on right: 268 280
@46 (239)
    on left: 279, on right: 280
object_property (240)
    on left: 281 283, on right: 278 280
@47 (241)
    on left: 282, on right: 283
object_dim_list (242)
    on left: 284 285 286, on right: 281 284 285
variable_name (243)
    on left: 287 288, on right: 286
simple_indirect_reference (244)
    on left: 289 290, on right: 270 290
assignment_list (245)
    on left: 291 292, on right: 151 291 295
assignment_list_element (246)
    on left: 293 295 296, on right: 291 292
@48 (247)
    on left: 294, on right: 295
array_pair_list (248)
    on left: 297 298, on right: 221
non_empty_array_pair_list (249)
    on left: 299 300 301 302 303 304 305 306, on right: 298 299 300
    303 304
encaps_list (250)
    on left: 307 308 309 310 311 312 313 314 315 316 317 318,
    on right: 222 250 251 252 307 308 309 310 311 312 313 314 315 316
    317
encaps_var (251)
    on left: 319 321 322 323 324 325, on right: 307
@49 (252)
    on left: 320, on right: 321
encaps_var_offset (253)
    on left: 326 327 328, on right: 321
internal_functions_in_yacc (254)
    on left: 329 330 331 332 333, on right: 209


state 0

    $default	reduce using rule 4 (top_statement_list)

    start	go to state 640
    top_statement_list	go to state 1



state 1

    start  ->  top_statement_list .   (rule 1)
    top_statement_list  ->  top_statement_list . @1 top_statement   (rule 3)

    $   	reduce using rule 1 (start)
    $default	reduce using rule 2 (@1)

    @1  	go to state 2



state 2

    top_statement_list  ->  top_statement_list @1 . top_statement   (rule 3)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_OLD_FUNCTION	shift, and go to state 40
    T_FUNCTION	shift, and go to state 41
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    top_statement	go to state 64
    statement	go to state 65
    unticked_statement	go to state 66
    declaration_statement	go to state 67
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 3

    internal_functions_in_yacc  ->  T_INCLUDE . expr   (rule 331)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 82
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 4

    internal_functions_in_yacc  ->  T_INCLUDE_ONCE . expr   (rule 332)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 83
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 5

    internal_functions_in_yacc  ->  T_EVAL . '(' expr ')'   (rule 333)

    '(' 	shift, and go to state 84



state 6

    expr_without_variable  ->  T_PRINT . expr   (rule 223)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 85
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 7

    expr_without_variable  ->  '+' . expr   (rule 192)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 86
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 8

    expr_without_variable  ->  '-' . expr   (rule 193)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 87
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 9

    expr_without_variable  ->  '!' . expr   (rule 194)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 88
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 10

    expr_without_variable  ->  '~' . expr   (rule 195)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 89
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 11

    expr_without_variable  ->  T_INC . rw_cvar   (rule 169)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    rw_cvar	go to state 90
    cvar	go to state 91
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 12

    expr_without_variable  ->  T_DEC . rw_cvar   (rule 171)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    rw_cvar	go to state 92
    cvar	go to state 91
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 13

    expr_without_variable  ->  T_INT_CAST . expr   (rule 210)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 93
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 14

    expr_without_variable  ->  T_DOUBLE_CAST . expr   (rule 211)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 94
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 15

    expr_without_variable  ->  T_STRING_CAST . expr   (rule 212)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 95
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 16

    expr_without_variable  ->  T_ARRAY_CAST . expr   (rule 213)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 96
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 17

    expr_without_variable  ->  T_OBJECT_CAST . expr   (rule 214)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 97
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 18

    expr_without_variable  ->  T_BOOL_CAST . expr   (rule 215)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 98
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 19

    expr_without_variable  ->  T_UNSET_CAST . expr   (rule 216)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 99
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 20

    expr_without_variable  ->  '@' . @41 expr   (rule 219)

    $default	reduce using rule 218 (@41)

    @41 	go to state 100



state 21

    expr_without_variable  ->  T_NEW . class_name @34 ctor_arguments   (rule 156)

    T_STRING	shift, and go to state 101
    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    class_name	go to state 102
    r_cvar	go to state 103
    cvar	go to state 104
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 22

    expr_without_variable  ->  T_EXIT . exit_expr   (rule 217)

    '(' 	shift, and go to state 105

    $default	reduce using rule 230 (exit_expr)

    exit_expr	go to state 106



state 23

    unticked_statement  ->  T_IF . '(' expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF . '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    '(' 	shift, and go to state 107



state 24

    common_scalar  ->  T_LNUMBER .   (rule 237)

    $default	reduce using rule 237 (common_scalar)



state 25

    common_scalar  ->  T_DNUMBER .   (rule 238)

    $default	reduce using rule 238 (common_scalar)



state 26

    function_call  ->  T_STRING . '(' @42 function_call_parameter_list ')'   (rule 225)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'   (rule 229)
    scalar  ->  T_STRING .   (rule 247)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 108
    '(' 	shift, and go to state 109

    $default	reduce using rule 247 (scalar)



state 27

    scalar  ->  T_STRING_VARNAME .   (rule 248)

    $default	reduce using rule 248 (scalar)



state 28

    compound_variable  ->  T_VARIABLE .   (rule 274)

    $default	reduce using rule 274 (compound_variable)



state 29

    unticked_statement  ->  T_INLINE_HTML .   (rule 42)

    $default	reduce using rule 42 (unticked_statement)



state 30

    common_scalar  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 239)

    $default	reduce using rule 239 (common_scalar)



state 31

    unticked_statement  ->  T_ECHO . echo_expr_list ';'   (rule 41)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 142 (echo_expr_list)

    echo_expr_list	go to state 110
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 111
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 32

    unticked_statement  ->  T_DO . @9 statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 23 (@9)

    @9  	go to state 112



state 33

    unticked_statement  ->  T_WHILE . '(' @7 expr ')' @8 while_statement   (rule 22)

    '(' 	shift, and go to state 113



state 34

    unticked_statement  ->  T_FOR . '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    '(' 	shift, and go to state 114



state 35

    unticked_statement  ->  T_FOREACH . '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    '(' 	shift, and go to state 115



state 36

    unticked_statement  ->  T_DECLARE . @17 '(' declare_list ')' declare_statement   (rule 52)

    $default	reduce using rule 51 (@17)

    @17 	go to state 116



state 37

    unticked_statement  ->  T_SWITCH . '(' expr ')' @14 switch_case_list   (rule 31)

    '(' 	shift, and go to state 117



state 38

    unticked_statement  ->  T_BREAK . ';'   (rule 32)
    unticked_statement  ->  T_BREAK . expr ';'   (rule 33)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 118
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 119
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 39

    unticked_statement  ->  T_CONTINUE . ';'   (rule 34)
    unticked_statement  ->  T_CONTINUE . expr ';'   (rule 35)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 120
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 121
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 40

    unticked_declaration_statement  ->  T_OLD_FUNCTION . @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 62)

    $default	reduce using rule 60 (@20)

    @20 	go to state 122



state 41

    unticked_declaration_statement  ->  T_FUNCTION . @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    $default	reduce using rule 57 (@18)

    @18 	go to state 123



state 42

    unticked_statement  ->  T_RETURN . ';'   (rule 36)
    unticked_statement  ->  T_RETURN . expr_without_variable ';'   (rule 37)
    unticked_statement  ->  T_RETURN . cvar ';'   (rule 38)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 124
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 125
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 127
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 43

    unticked_statement  ->  T_REQUIRE . expr ';'   (rule 44)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 128
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 44

    unticked_statement  ->  T_REQUIRE_ONCE . use_filename ';'   (rule 45)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 129
    '(' 	shift, and go to state 130

    use_filename	go to state 131



state 45

    unticked_statement  ->  T_USE . use_filename ';'   (rule 46)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 129
    '(' 	shift, and go to state 130

    use_filename	go to state 132



state 46

    unticked_statement  ->  T_GLOBAL . global_var_list   (rule 39)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var_list	go to state 135
    global_var	go to state 136



state 47

    unticked_statement  ->  T_STATIC . static_var_list   (rule 40)

    T_VARIABLE	shift, and go to state 137

    static_var_list	go to state 138



state 48

    unticked_statement  ->  T_UNSET . '(' cvar ')' ';'   (rule 47)

    '(' 	shift, and go to state 139



state 49

    internal_functions_in_yacc  ->  T_ISSET . '(' cvar ')'   (rule 329)

    '(' 	shift, and go to state 140



state 50

    internal_functions_in_yacc  ->  T_EMPTY . '(' cvar ')'   (rule 330)

    '(' 	shift, and go to state 141



state 51

    unticked_declaration_statement  ->  T_CLASS . T_STRING @22 '{' class_statement_list '}'   (rule 64)
    unticked_declaration_statement  ->  T_CLASS . T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}'   (rule 66)

    T_STRING	shift, and go to state 142



state 52

    expr_without_variable  ->  T_LIST . '(' @33 assignment_list ')' '=' expr   (rule 151)

    '(' 	shift, and go to state 143



state 53

    expr_without_variable  ->  T_ARRAY . '(' array_pair_list ')'   (rule 221)

    '(' 	shift, and go to state 144



state 54

    common_scalar  ->  T_LINE .   (rule 240)

    $default	reduce using rule 240 (common_scalar)



state 55

    common_scalar  ->  T_FILE .   (rule 241)

    $default	reduce using rule 241 (common_scalar)



state 56

    scalar  ->  T_START_HEREDOC . encaps_list T_END_HEREDOC   (rule 252)

    $default	reduce using rule 318 (encaps_list)

    encaps_list	go to state 145



state 57

    unticked_statement  ->  '{' . inner_statement_list '}'   (rule 13)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 146



state 58

    expr_without_variable  ->  '(' . expr ')'   (rule 204)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 147
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 59

    unticked_statement  ->  ';' .   (rule 53)

    $default	reduce using rule 53 (unticked_statement)



state 60

    compound_variable  ->  '$' . '{' expr '}'   (rule 275)
    simple_indirect_reference  ->  '$' .   (rule 289)

    '{' 	shift, and go to state 148

    $default	reduce using rule 289 (simple_indirect_reference)



state 61

    expr_without_variable  ->  '`' . encaps_list '`'   (rule 222)

    $default	reduce using rule 318 (encaps_list)

    encaps_list	go to state 149



state 62

    scalar  ->  '"' . encaps_list '"'   (rule 250)

    $default	reduce using rule 318 (encaps_list)

    encaps_list	go to state 150



state 63

    scalar  ->  ''' . encaps_list '''   (rule 251)

    $default	reduce using rule 318 (encaps_list)

    encaps_list	go to state 151



state 64

    top_statement_list  ->  top_statement_list @1 top_statement .   (rule 3)

    $default	reduce using rule 3 (top_statement_list)



state 65

    top_statement  ->  statement .   (rule 5)

    $default	reduce using rule 5 (top_statement)



state 66

    statement  ->  unticked_statement .   (rule 12)

    $default	reduce using rule 12 (statement)



state 67

    top_statement  ->  declaration_statement .   (rule 6)

    $default	reduce using rule 6 (top_statement)



state 68

    declaration_statement  ->  unticked_declaration_statement .   (rule 56)

    $default	reduce using rule 56 (declaration_statement)



state 69

    expr  ->  expr_without_variable .   (rule 262)

    $default	reduce using rule 262 (expr)



state 70

    expr_without_variable  ->  function_call .   (rule 208)

    $default	reduce using rule 208 (expr_without_variable)



state 71

    scalar  ->  common_scalar .   (rule 249)

    $default	reduce using rule 249 (scalar)



state 72

    expr_without_variable  ->  scalar .   (rule 220)

    $default	reduce using rule 220 (expr_without_variable)



state 73

    unticked_statement  ->  expr . ';'   (rule 43)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 177



state 74

    function_call  ->  r_cvar . '(' @43 function_call_parameter_list ')'   (rule 227)
    expr  ->  r_cvar .   (rule 261)

    '(' 	shift, and go to state 178

    $default	reduce using rule 261 (expr)



state 75

    expr_without_variable  ->  rw_cvar . T_INC   (rule 168)
    expr_without_variable  ->  rw_cvar . T_DEC   (rule 170)

    T_INC	shift, and go to state 179
    T_DEC	shift, and go to state 180



state 76

    expr_without_variable  ->  cvar . '=' expr   (rule 152)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 153)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 154)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 157)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 158)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 159)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . XT_OR_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 167)
    r_cvar  ->  cvar .   (rule 263)
    rw_cvar  ->  cvar .   (rule 265)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    XT_OR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    T_INC	reduce using rule 265 (rw_cvar)
    T_DEC	reduce using rule 265 (rw_cvar)
    $default	reduce using rule 263 (r_cvar)



state 77

    cvar  ->  cvar_without_objects .   (rule 266)
    cvar  ->  cvar_without_objects . T_OBJECT_OPERATOR @45 ref_list   (rule 268)

    T_OBJECT_OPERATOR	shift, and go to state 193

    $default	reduce using rule 266 (cvar)



state 78

    cvar_without_objects  ->  reference_variable .   (rule 269)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 271)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 272)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    '{' 	[reduce using rule 269 (cvar_without_objects)]
    $default	reduce using rule 269 (cvar_without_objects)



state 79

    reference_variable  ->  compound_variable .   (rule 273)

    $default	reduce using rule 273 (reference_variable)



state 80

    cvar_without_objects  ->  simple_indirect_reference . reference_variable   (rule 270)
    simple_indirect_reference  ->  simple_indirect_reference . '$'   (rule 290)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 196

    reference_variable	go to state 197
    compound_variable	go to state 79



state 81

    expr_without_variable  ->  internal_functions_in_yacc .   (rule 209)

    $default	reduce using rule 209 (expr_without_variable)



state 82

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    internal_functions_in_yacc  ->  T_INCLUDE expr .   (rule 331)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 331 (internal_functions_in_yacc)



state 83

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    internal_functions_in_yacc  ->  T_INCLUDE_ONCE expr .   (rule 332)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 332 (internal_functions_in_yacc)



state 84

    internal_functions_in_yacc  ->  T_EVAL '(' . expr ')'   (rule 333)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 198
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 85

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_PRINT expr .   (rule 223)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 223 (expr_without_variable)



state 86

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  '+' expr .   (rule 192)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 192 (expr_without_variable)



state 87

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  '-' expr .   (rule 193)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 193 (expr_without_variable)



state 88

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  '!' expr .   (rule 194)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)


    $default	reduce using rule 194 (expr_without_variable)



state 89

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  '~' expr .   (rule 195)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)


    $default	reduce using rule 195 (expr_without_variable)



state 90

    expr_without_variable  ->  T_INC rw_cvar .   (rule 169)

    $default	reduce using rule 169 (expr_without_variable)



state 91

    rw_cvar  ->  cvar .   (rule 265)

    $default	reduce using rule 265 (rw_cvar)



state 92

    expr_without_variable  ->  T_DEC rw_cvar .   (rule 171)

    $default	reduce using rule 171 (expr_without_variable)



state 93

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_INT_CAST expr .   (rule 210)


    $default	reduce using rule 210 (expr_without_variable)



state 94

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_DOUBLE_CAST expr .   (rule 211)


    $default	reduce using rule 211 (expr_without_variable)



state 95

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_STRING_CAST expr .   (rule 212)


    $default	reduce using rule 212 (expr_without_variable)



state 96

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_ARRAY_CAST expr .   (rule 213)


    $default	reduce using rule 213 (expr_without_variable)



state 97

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_OBJECT_CAST expr .   (rule 214)


    $default	reduce using rule 214 (expr_without_variable)



state 98

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_BOOL_CAST expr .   (rule 215)


    $default	reduce using rule 215 (expr_without_variable)



state 99

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  T_UNSET_CAST expr .   (rule 216)


    $default	reduce using rule 216 (expr_without_variable)



state 100

    expr_without_variable  ->  '@' @41 . expr   (rule 219)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 199
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 101

    class_name  ->  T_STRING .   (rule 235)

    $default	reduce using rule 235 (class_name)



state 102

    expr_without_variable  ->  T_NEW class_name . @34 ctor_arguments   (rule 156)

    $default	reduce using rule 155 (@34)

    @34 	go to state 200



state 103

    class_name  ->  r_cvar .   (rule 236)

    $default	reduce using rule 236 (class_name)



state 104

    r_cvar  ->  cvar .   (rule 263)

    $default	reduce using rule 263 (r_cvar)



state 105

    exit_expr  ->  '(' . ')'   (rule 231)
    exit_expr  ->  '(' . expr ')'   (rule 232)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    ')' 	shift, and go to state 201
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 202
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 106

    expr_without_variable  ->  T_EXIT exit_expr .   (rule 217)

    $default	reduce using rule 217 (expr_without_variable)



state 107

    unticked_statement  ->  T_IF '(' . expr ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' . expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 203
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 108

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM . T_STRING '(' @44 function_call_parameter_list ')'   (rule 229)

    T_STRING	shift, and go to state 204



state 109

    function_call  ->  T_STRING '(' . @42 function_call_parameter_list ')'   (rule 225)

    $default	reduce using rule 224 (@42)

    @42 	go to state 205



state 110

    unticked_statement  ->  T_ECHO echo_expr_list . ';'   (rule 41)
    echo_expr_list  ->  echo_expr_list . ',' expr   (rule 143)

    ',' 	shift, and go to state 206
    ';' 	shift, and go to state 207



state 111

    echo_expr_list  ->  expr .   (rule 144)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 144 (echo_expr_list)



state 112

    unticked_statement  ->  T_DO @9 . statement T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 208
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 113

    unticked_statement  ->  T_WHILE '(' . @7 expr ')' @8 while_statement   (rule 22)

    $default	reduce using rule 20 (@7)

    @7  	go to state 209



state 114

    unticked_statement  ->  T_FOR '(' . for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 145 (for_expr)

    for_expr	go to state 210
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 115

    unticked_statement  ->  T_FOREACH '(' . expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 213
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 116

    unticked_statement  ->  T_DECLARE @17 . '(' declare_list ')' declare_statement   (rule 52)

    '(' 	shift, and go to state 214



state 117

    unticked_statement  ->  T_SWITCH '(' . expr ')' @14 switch_case_list   (rule 31)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 215
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 118

    unticked_statement  ->  T_BREAK ';' .   (rule 32)

    $default	reduce using rule 32 (unticked_statement)



state 119

    unticked_statement  ->  T_BREAK expr . ';'   (rule 33)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 216



state 120

    unticked_statement  ->  T_CONTINUE ';' .   (rule 34)

    $default	reduce using rule 34 (unticked_statement)



state 121

    unticked_statement  ->  T_CONTINUE expr . ';'   (rule 35)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 217



state 122

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 . is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 62)

    '&' 	shift, and go to state 218

    $default	reduce using rule 136 (is_reference)

    is_reference	go to state 219



state 123

    unticked_declaration_statement  ->  T_FUNCTION @18 . is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    '&' 	shift, and go to state 218

    $default	reduce using rule 136 (is_reference)

    is_reference	go to state 220



state 124

    unticked_statement  ->  T_RETURN ';' .   (rule 36)

    $default	reduce using rule 36 (unticked_statement)



state 125

    unticked_statement  ->  T_RETURN expr_without_variable . ';'   (rule 37)
    expr  ->  expr_without_variable .   (rule 262)

    ';' 	shift, and go to state 221

    $default	reduce using rule 262 (expr)



state 126

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 127

    unticked_statement  ->  T_RETURN cvar . ';'   (rule 38)
    expr_without_variable  ->  cvar . '=' expr   (rule 152)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 153)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 154)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 157)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 158)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 159)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . XT_OR_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 167)
    r_cvar  ->  cvar .   (rule 263)
    rw_cvar  ->  cvar .   (rule 265)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    XT_OR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192
    ';' 	shift, and go to state 222

    T_INC	reduce using rule 265 (rw_cvar)
    T_DEC	reduce using rule 265 (rw_cvar)
    $default	reduce using rule 263 (r_cvar)



state 128

    unticked_statement  ->  T_REQUIRE expr . ';'   (rule 44)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 223



state 129

    use_filename  ->  T_CONSTANT_ENCAPSED_STRING .   (rule 54)

    $default	reduce using rule 54 (use_filename)



state 130

    use_filename  ->  '(' . T_CONSTANT_ENCAPSED_STRING ')'   (rule 55)

    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 224



state 131

    unticked_statement  ->  T_REQUIRE_ONCE use_filename . ';'   (rule 45)

    ';' 	shift, and go to state 225



state 132

    unticked_statement  ->  T_USE use_filename . ';'   (rule 46)

    ';' 	shift, and go to state 226



state 133

    global_var  ->  T_VARIABLE .   (rule 120)

    $default	reduce using rule 120 (global_var)



state 134

    global_var  ->  '$' . r_cvar   (rule 121)
    global_var  ->  '$' . '{' expr '}'   (rule 122)

    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 227
    '$' 	shift, and go to state 60

    r_cvar	go to state 228
    cvar	go to state 104
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 135

    unticked_statement  ->  T_GLOBAL global_var_list .   (rule 39)
    global_var_list  ->  global_var_list . ',' global_var   (rule 118)

    ',' 	shift, and go to state 229

    $default	reduce using rule 39 (unticked_statement)



state 136

    global_var_list  ->  global_var .   (rule 119)

    $default	reduce using rule 119 (global_var_list)



state 137

    static_var_list  ->  T_VARIABLE .   (rule 125)
    static_var_list  ->  T_VARIABLE . '=' static_scalar   (rule 126)

    '=' 	shift, and go to state 230

    $default	reduce using rule 125 (static_var_list)



state 138

    unticked_statement  ->  T_STATIC static_var_list .   (rule 40)
    static_var_list  ->  static_var_list . ',' T_VARIABLE   (rule 123)
    static_var_list  ->  static_var_list . ',' T_VARIABLE '=' static_scalar   (rule 124)

    ',' 	shift, and go to state 231

    $default	reduce using rule 40 (unticked_statement)



state 139

    unticked_statement  ->  T_UNSET '(' . cvar ')' ';'   (rule 47)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 232
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 140

    internal_functions_in_yacc  ->  T_ISSET '(' . cvar ')'   (rule 329)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 233
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 141

    internal_functions_in_yacc  ->  T_EMPTY '(' . cvar ')'   (rule 330)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 234
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 142

    unticked_declaration_statement  ->  T_CLASS T_STRING . @22 '{' class_statement_list '}'   (rule 64)
    unticked_declaration_statement  ->  T_CLASS T_STRING . T_EXTENDS T_STRING @23 '{' class_statement_list '}'   (rule 66)

    T_EXTENDS	shift, and go to state 235

    $default	reduce using rule 63 (@22)

    @22 	go to state 236



state 143

    expr_without_variable  ->  T_LIST '(' . @33 assignment_list ')' '=' expr   (rule 151)

    $default	reduce using rule 150 (@33)

    @33 	go to state 237



state 144

    expr_without_variable  ->  T_ARRAY '(' . array_pair_list ')'   (rule 221)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 238
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 297 (array_pair_list)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 239
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    array_pair_list	go to state 240
    non_empty_array_pair_list	go to state 241
    internal_functions_in_yacc	go to state 81



state 145

    scalar  ->  T_START_HEREDOC encaps_list . T_END_HEREDOC   (rule 252)
    encaps_list  ->  encaps_list . encaps_var   (rule 307)
    encaps_list  ->  encaps_list . T_STRING   (rule 308)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 309)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 310)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 311)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 312)
    encaps_list  ->  encaps_list . '['   (rule 313)
    encaps_list  ->  encaps_list . ']'   (rule 314)
    encaps_list  ->  encaps_list . '{'   (rule 315)
    encaps_list  ->  encaps_list . '}'   (rule 316)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 317)

    '[' 	shift, and go to state 242
    T_STRING	shift, and go to state 243
    T_VARIABLE	shift, and go to state 244
    T_NUM_STRING	shift, and go to state 245
    T_CHARACTER	shift, and go to state 246
    T_BAD_CHARACTER	shift, and go to state 247
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 248
    T_OBJECT_OPERATOR	shift, and go to state 249
    T_END_HEREDOC	shift, and go to state 250
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 251
    T_CURLY_OPEN	shift, and go to state 252
    '{' 	shift, and go to state 253
    '}' 	shift, and go to state 254
    ']' 	shift, and go to state 255

    encaps_var	go to state 256



state 146

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  '{' inner_statement_list . '}'   (rule 13)

    '}' 	shift, and go to state 257

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 147

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  '(' expr . ')'   (rule 204)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 259



state 148

    compound_variable  ->  '$' '{' . expr '}'   (rule 275)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 260
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 149

    expr_without_variable  ->  '`' encaps_list . '`'   (rule 222)
    encaps_list  ->  encaps_list . encaps_var   (rule 307)
    encaps_list  ->  encaps_list . T_STRING   (rule 308)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 309)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 310)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 311)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 312)
    encaps_list  ->  encaps_list . '['   (rule 313)
    encaps_list  ->  encaps_list . ']'   (rule 314)
    encaps_list  ->  encaps_list . '{'   (rule 315)
    encaps_list  ->  encaps_list . '}'   (rule 316)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 317)

    '[' 	shift, and go to state 242
    T_STRING	shift, and go to state 243
    T_VARIABLE	shift, and go to state 244
    T_NUM_STRING	shift, and go to state 245
    T_CHARACTER	shift, and go to state 246
    T_BAD_CHARACTER	shift, and go to state 247
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 248
    T_OBJECT_OPERATOR	shift, and go to state 249
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 251
    T_CURLY_OPEN	shift, and go to state 252
    '{' 	shift, and go to state 253
    '}' 	shift, and go to state 254
    '`' 	shift, and go to state 261
    ']' 	shift, and go to state 255

    encaps_var	go to state 256



state 150

    scalar  ->  '"' encaps_list . '"'   (rule 250)
    encaps_list  ->  encaps_list . encaps_var   (rule 307)
    encaps_list  ->  encaps_list . T_STRING   (rule 308)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 309)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 310)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 311)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 312)
    encaps_list  ->  encaps_list . '['   (rule 313)
    encaps_list  ->  encaps_list . ']'   (rule 314)
    encaps_list  ->  encaps_list . '{'   (rule 315)
    encaps_list  ->  encaps_list . '}'   (rule 316)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 317)

    '[' 	shift, and go to state 242
    T_STRING	shift, and go to state 243
    T_VARIABLE	shift, and go to state 244
    T_NUM_STRING	shift, and go to state 245
    T_CHARACTER	shift, and go to state 246
    T_BAD_CHARACTER	shift, and go to state 247
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 248
    T_OBJECT_OPERATOR	shift, and go to state 249
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 251
    T_CURLY_OPEN	shift, and go to state 252
    '{' 	shift, and go to state 253
    '}' 	shift, and go to state 254
    '"' 	shift, and go to state 262
    ']' 	shift, and go to state 255

    encaps_var	go to state 256



state 151

    scalar  ->  ''' encaps_list . '''   (rule 251)
    encaps_list  ->  encaps_list . encaps_var   (rule 307)
    encaps_list  ->  encaps_list . T_STRING   (rule 308)
    encaps_list  ->  encaps_list . T_NUM_STRING   (rule 309)
    encaps_list  ->  encaps_list . T_ENCAPSED_AND_WHITESPACE   (rule 310)
    encaps_list  ->  encaps_list . T_CHARACTER   (rule 311)
    encaps_list  ->  encaps_list . T_BAD_CHARACTER   (rule 312)
    encaps_list  ->  encaps_list . '['   (rule 313)
    encaps_list  ->  encaps_list . ']'   (rule 314)
    encaps_list  ->  encaps_list . '{'   (rule 315)
    encaps_list  ->  encaps_list . '}'   (rule 316)
    encaps_list  ->  encaps_list . T_OBJECT_OPERATOR   (rule 317)

    '[' 	shift, and go to state 242
    T_STRING	shift, and go to state 243
    T_VARIABLE	shift, and go to state 244
    T_NUM_STRING	shift, and go to state 245
    T_CHARACTER	shift, and go to state 246
    T_BAD_CHARACTER	shift, and go to state 247
    T_ENCAPSED_AND_WHITESPACE	shift, and go to state 248
    T_OBJECT_OPERATOR	shift, and go to state 249
    T_DOLLAR_OPEN_CURLY_BRACES	shift, and go to state 251
    T_CURLY_OPEN	shift, and go to state 252
    '{' 	shift, and go to state 253
    '}' 	shift, and go to state 254
    ''' 	shift, and go to state 263
    ']' 	shift, and go to state 255

    encaps_var	go to state 256



state 152

    expr_without_variable  ->  expr T_LOGICAL_OR . @37 expr   (rule 177)

    $default	reduce using rule 176 (@37)

    @37 	go to state 264



state 153

    expr_without_variable  ->  expr T_LOGICAL_XOR . expr   (rule 180)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 265
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 154

    expr_without_variable  ->  expr T_LOGICAL_AND . @38 expr   (rule 179)

    $default	reduce using rule 178 (@38)

    @38 	go to state 266



state 155

    expr_without_variable  ->  expr '?' . @39 expr ':' @40 expr   (rule 207)

    $default	reduce using rule 205 (@39)

    @39 	go to state 267



state 156

    expr_without_variable  ->  expr T_BOOLEAN_OR . @35 expr   (rule 173)

    $default	reduce using rule 172 (@35)

    @35 	go to state 268



state 157

    expr_without_variable  ->  expr T_BOOLEAN_AND . @36 expr   (rule 175)

    $default	reduce using rule 174 (@36)

    @36 	go to state 269



state 158

    expr_without_variable  ->  expr '|' . expr   (rule 181)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 270
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 159

    expr_without_variable  ->  expr '^' . expr   (rule 183)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 271
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 160

    expr_without_variable  ->  expr '&' . expr   (rule 182)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 272
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 161

    expr_without_variable  ->  expr T_IS_EQUAL . expr   (rule 198)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 273
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 162

    expr_without_variable  ->  expr T_IS_NOT_EQUAL . expr   (rule 199)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 274
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 163

    expr_without_variable  ->  expr T_IS_IDENTICAL . expr   (rule 196)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 275
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 164

    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL . expr   (rule 197)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 276
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 165

    expr_without_variable  ->  expr '<' . expr   (rule 200)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 277
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 166

    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL . expr   (rule 201)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 278
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 167

    expr_without_variable  ->  expr '>' . expr   (rule 202)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 279
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 168

    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL . expr   (rule 203)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 280
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 169

    expr_without_variable  ->  expr T_SL . expr   (rule 190)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 281
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 170

    expr_without_variable  ->  expr T_SR . expr   (rule 191)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 282
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 171

    expr_without_variable  ->  expr '+' . expr   (rule 185)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 283
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 172

    expr_without_variable  ->  expr '-' . expr   (rule 186)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 284
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 173

    expr_without_variable  ->  expr '.' . expr   (rule 184)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 285
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 174

    expr_without_variable  ->  expr '*' . expr   (rule 187)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 286
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 175

    expr_without_variable  ->  expr '/' . expr   (rule 188)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 287
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 176

    expr_without_variable  ->  expr '%' . expr   (rule 189)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 288
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 177

    unticked_statement  ->  expr ';' .   (rule 43)

    $default	reduce using rule 43 (unticked_statement)



state 178

    function_call  ->  r_cvar '(' . @43 function_call_parameter_list ')'   (rule 227)

    $default	reduce using rule 226 (@43)

    @43 	go to state 289



state 179

    expr_without_variable  ->  rw_cvar T_INC .   (rule 168)

    $default	reduce using rule 168 (expr_without_variable)



state 180

    expr_without_variable  ->  rw_cvar T_DEC .   (rule 170)

    $default	reduce using rule 170 (expr_without_variable)



state 181

    expr_without_variable  ->  cvar '=' . expr   (rule 152)
    expr_without_variable  ->  cvar '=' . '&' w_cvar   (rule 153)
    expr_without_variable  ->  cvar '=' . '&' function_call   (rule 154)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 290
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 291
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 182

    expr_without_variable  ->  cvar T_PLUS_EQUAL . expr   (rule 157)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 292
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 183

    expr_without_variable  ->  cvar T_MINUS_EQUAL . expr   (rule 158)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 293
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 184

    expr_without_variable  ->  cvar T_MUL_EQUAL . expr   (rule 159)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 294
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 185

    expr_without_variable  ->  cvar T_DIV_EQUAL . expr   (rule 160)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 295
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 186

    expr_without_variable  ->  cvar T_CONCAT_EQUAL . expr   (rule 161)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 296
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 187

    expr_without_variable  ->  cvar T_MOD_EQUAL . expr   (rule 162)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 297
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 188

    expr_without_variable  ->  cvar T_AND_EQUAL . expr   (rule 163)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 298
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 189

    expr_without_variable  ->  cvar T_OR_EQUAL . expr   (rule 164)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 299
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 190

    expr_without_variable  ->  cvar XT_OR_EQUAL . expr   (rule 165)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 300
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 191

    expr_without_variable  ->  cvar T_SL_EQUAL . expr   (rule 166)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 301
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 192

    expr_without_variable  ->  cvar T_SR_EQUAL . expr   (rule 167)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 302
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 193

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR . @45 ref_list   (rule 268)

    $default	reduce using rule 267 (@45)

    @45 	go to state 303



state 194

    reference_variable  ->  reference_variable '[' . dim_offset ']'   (rule 271)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 276 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 304
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 305
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 195

    reference_variable  ->  reference_variable '{' . expr '}'   (rule 272)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 306
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 196

    compound_variable  ->  '$' . '{' expr '}'   (rule 275)
    simple_indirect_reference  ->  simple_indirect_reference '$' .   (rule 290)

    '{' 	shift, and go to state 148

    $default	reduce using rule 290 (simple_indirect_reference)



state 197

    cvar_without_objects  ->  simple_indirect_reference reference_variable .   (rule 270)
    reference_variable  ->  reference_variable . '[' dim_offset ']'   (rule 271)
    reference_variable  ->  reference_variable . '{' expr '}'   (rule 272)

    '[' 	shift, and go to state 194
    '{' 	shift, and go to state 195

    '{' 	[reduce using rule 270 (cvar_without_objects)]
    $default	reduce using rule 270 (cvar_without_objects)



state 198

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    internal_functions_in_yacc  ->  T_EVAL '(' expr . ')'   (rule 333)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 307



state 199

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  '@' @41 expr .   (rule 219)


    $default	reduce using rule 219 (expr_without_variable)



state 200

    expr_without_variable  ->  T_NEW class_name @34 . ctor_arguments   (rule 156)

    '(' 	shift, and go to state 308

    $default	reduce using rule 233 (ctor_arguments)

    ctor_arguments	go to state 309



state 201

    exit_expr  ->  '(' ')' .   (rule 231)

    $default	reduce using rule 231 (exit_expr)



state 202

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    exit_expr  ->  '(' expr . ')'   (rule 232)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 310



state 203

    unticked_statement  ->  T_IF '(' expr . ')' @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr . ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 311



state 204

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING . '(' @44 function_call_parameter_list ')'   (rule 229)

    '(' 	shift, and go to state 312



state 205

    function_call  ->  T_STRING '(' @42 . function_call_parameter_list ')'   (rule 225)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 313
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 111 (function_call_parameter_list)

    function_call_parameter_list	go to state 314
    non_empty_function_call_parameter_list	go to state 315
    expr_without_variable	go to state 316
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 317
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 206

    echo_expr_list  ->  echo_expr_list ',' . expr   (rule 143)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 318
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 207

    unticked_statement  ->  T_ECHO echo_expr_list ';' .   (rule 41)

    $default	reduce using rule 41 (unticked_statement)



state 208

    unticked_statement  ->  T_DO @9 statement . T_WHILE '(' @10 expr ')' ';'   (rule 25)

    T_WHILE	shift, and go to state 319



state 209

    unticked_statement  ->  T_WHILE '(' @7 . expr ')' @8 while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 320
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 210

    unticked_statement  ->  T_FOR '(' for_expr . ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 321



state 211

    for_expr  ->  non_empty_for_expr .   (rule 146)
    non_empty_for_expr  ->  non_empty_for_expr . ',' @32 expr   (rule 148)

    ',' 	shift, and go to state 322

    $default	reduce using rule 146 (for_expr)



state 212

    non_empty_for_expr  ->  expr .   (rule 149)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 149 (non_empty_for_expr)



state 213

    unticked_statement  ->  T_FOREACH '(' expr . T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_AS	shift, and go to state 323



state 214

    unticked_statement  ->  T_DECLARE @17 '(' . declare_list ')' declare_statement   (rule 52)

    T_STRING	shift, and go to state 324

    declare_list	go to state 325



state 215

    unticked_statement  ->  T_SWITCH '(' expr . ')' @14 switch_case_list   (rule 31)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 326



state 216

    unticked_statement  ->  T_BREAK expr ';' .   (rule 33)

    $default	reduce using rule 33 (unticked_statement)



state 217

    unticked_statement  ->  T_CONTINUE expr ';' .   (rule 35)

    $default	reduce using rule 35 (unticked_statement)



state 218

    is_reference  ->  '&' .   (rule 137)

    $default	reduce using rule 137 (is_reference)



state 219

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference . T_STRING @21 parameter_list '(' inner_statement_list ')' ';'   (rule 62)

    T_STRING	shift, and go to state 327



state 220

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference . T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    T_STRING	shift, and go to state 328



state 221

    unticked_statement  ->  T_RETURN expr_without_variable ';' .   (rule 37)

    $default	reduce using rule 37 (unticked_statement)



state 222

    unticked_statement  ->  T_RETURN cvar ';' .   (rule 38)

    $default	reduce using rule 38 (unticked_statement)



state 223

    unticked_statement  ->  T_REQUIRE expr ';' .   (rule 44)

    $default	reduce using rule 44 (unticked_statement)



state 224

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING . ')'   (rule 55)

    ')' 	shift, and go to state 329



state 225

    unticked_statement  ->  T_REQUIRE_ONCE use_filename ';' .   (rule 45)

    $default	reduce using rule 45 (unticked_statement)



state 226

    unticked_statement  ->  T_USE use_filename ';' .   (rule 46)

    $default	reduce using rule 46 (unticked_statement)



state 227

    global_var  ->  '$' '{' . expr '}'   (rule 122)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 330
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 228

    global_var  ->  '$' r_cvar .   (rule 121)

    $default	reduce using rule 121 (global_var)



state 229

    global_var_list  ->  global_var_list ',' . global_var   (rule 118)

    T_VARIABLE	shift, and go to state 133
    '$' 	shift, and go to state 134

    global_var	go to state 331



state 230

    static_var_list  ->  T_VARIABLE '=' . static_scalar   (rule 126)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 337



state 231

    static_var_list  ->  static_var_list ',' . T_VARIABLE   (rule 123)
    static_var_list  ->  static_var_list ',' . T_VARIABLE '=' static_scalar   (rule 124)

    T_VARIABLE	shift, and go to state 338



state 232

    unticked_statement  ->  T_UNSET '(' cvar . ')' ';'   (rule 47)

    ')' 	shift, and go to state 339



state 233

    internal_functions_in_yacc  ->  T_ISSET '(' cvar . ')'   (rule 329)

    ')' 	shift, and go to state 340



state 234

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar . ')'   (rule 330)

    ')' 	shift, and go to state 341



state 235

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS . T_STRING @23 '{' class_statement_list '}'   (rule 66)

    T_STRING	shift, and go to state 342



state 236

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 . '{' class_statement_list '}'   (rule 64)

    '{' 	shift, and go to state 343



state 237

    expr_without_variable  ->  T_LIST '(' @33 . assignment_list ')' '=' expr   (rule 151)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 344
    '$' 	shift, and go to state 60

    $default	reduce using rule 296 (assignment_list_element)

    cvar	go to state 345
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 346
    assignment_list_element	go to state 347



state 238

    non_empty_array_pair_list  ->  '&' . w_cvar   (rule 306)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 348
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 239

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW expr   (rule 301)
    non_empty_array_pair_list  ->  expr .   (rule 302)
    non_empty_array_pair_list  ->  expr . T_DOUBLE_ARROW '&' w_cvar   (rule 305)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 350

    $default	reduce using rule 302 (non_empty_array_pair_list)



state 240

    expr_without_variable  ->  T_ARRAY '(' array_pair_list . ')'   (rule 221)

    ')' 	shift, and go to state 351



state 241

    array_pair_list  ->  non_empty_array_pair_list . possible_comma   (rule 298)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW expr   (rule 299)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr   (rule 300)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' expr T_DOUBLE_ARROW '&' w_cvar   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list . ',' '&' w_cvar   (rule 304)

    ',' 	shift, and go to state 352

    $default	reduce using rule 255 (possible_comma)

    possible_comma	go to state 353



state 242

    encaps_list  ->  encaps_list '[' .   (rule 313)

    $default	reduce using rule 313 (encaps_list)



state 243

    encaps_list  ->  encaps_list T_STRING .   (rule 308)

    $default	reduce using rule 308 (encaps_list)



state 244

    encaps_var  ->  T_VARIABLE .   (rule 319)
    encaps_var  ->  T_VARIABLE . '[' @49 encaps_var_offset ']'   (rule 321)
    encaps_var  ->  T_VARIABLE . T_OBJECT_OPERATOR T_STRING   (rule 322)

    '[' 	shift, and go to state 354
    T_OBJECT_OPERATOR	shift, and go to state 355

    '[' 	[reduce using rule 319 (encaps_var)]
    T_OBJECT_OPERATOR	[reduce using rule 319 (encaps_var)]
    $default	reduce using rule 319 (encaps_var)



state 245

    encaps_list  ->  encaps_list T_NUM_STRING .   (rule 309)

    $default	reduce using rule 309 (encaps_list)



state 246

    encaps_list  ->  encaps_list T_CHARACTER .   (rule 311)

    $default	reduce using rule 311 (encaps_list)



state 247

    encaps_list  ->  encaps_list T_BAD_CHARACTER .   (rule 312)

    $default	reduce using rule 312 (encaps_list)



state 248

    encaps_list  ->  encaps_list T_ENCAPSED_AND_WHITESPACE .   (rule 310)

    $default	reduce using rule 310 (encaps_list)



state 249

    encaps_list  ->  encaps_list T_OBJECT_OPERATOR .   (rule 317)

    $default	reduce using rule 317 (encaps_list)



state 250

    scalar  ->  T_START_HEREDOC encaps_list T_END_HEREDOC .   (rule 252)

    $default	reduce using rule 252 (scalar)



state 251

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . expr '}'   (rule 323)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME '[' expr ']' '}'   (rule 324)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 356
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 357
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 252

    encaps_var  ->  T_CURLY_OPEN . cvar '}'   (rule 325)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    cvar	go to state 358
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 253

    encaps_list  ->  encaps_list '{' .   (rule 315)

    $default	reduce using rule 315 (encaps_list)



state 254

    encaps_list  ->  encaps_list '}' .   (rule 316)

    $default	reduce using rule 316 (encaps_list)



state 255

    encaps_list  ->  encaps_list ']' .   (rule 314)

    $default	reduce using rule 314 (encaps_list)



state 256

    encaps_list  ->  encaps_list encaps_var .   (rule 307)

    $default	reduce using rule 307 (encaps_list)



state 257

    unticked_statement  ->  '{' inner_statement_list '}' .   (rule 13)

    $default	reduce using rule 13 (unticked_statement)



state 258

    inner_statement_list  ->  inner_statement_list @2 . inner_statement   (rule 8)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_OLD_FUNCTION	shift, and go to state 40
    T_FUNCTION	shift, and go to state 41
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_CLASS	shift, and go to state 51
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    inner_statement	go to state 359
    statement	go to state 360
    unticked_statement	go to state 66
    declaration_statement	go to state 361
    unticked_declaration_statement	go to state 68
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 259

    expr_without_variable  ->  '(' expr ')' .   (rule 204)

    $default	reduce using rule 204 (expr_without_variable)



state 260

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    compound_variable  ->  '$' '{' expr . '}'   (rule 275)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 362



state 261

    expr_without_variable  ->  '`' encaps_list '`' .   (rule 222)

    $default	reduce using rule 222 (expr_without_variable)



state 262

    scalar  ->  '"' encaps_list '"' .   (rule 250)

    $default	reduce using rule 250 (scalar)



state 263

    scalar  ->  ''' encaps_list ''' .   (rule 251)

    $default	reduce using rule 251 (scalar)



state 264

    expr_without_variable  ->  expr T_LOGICAL_OR @37 . expr   (rule 177)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 363
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 265

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr T_LOGICAL_XOR expr .   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 180 (expr_without_variable)



state 266

    expr_without_variable  ->  expr T_LOGICAL_AND @38 . expr   (rule 179)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 364
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 267

    expr_without_variable  ->  expr '?' @39 . expr ':' @40 expr   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 365
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 268

    expr_without_variable  ->  expr T_BOOLEAN_OR @35 . expr   (rule 173)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 366
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 269

    expr_without_variable  ->  expr T_BOOLEAN_AND @36 . expr   (rule 175)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 367
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 270

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr '|' expr .   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 181 (expr_without_variable)



state 271

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr '^' expr .   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 183 (expr_without_variable)



state 272

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr '&' expr .   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 182 (expr_without_variable)



state 273

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr T_IS_EQUAL expr .   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 198 (expr_without_variable)



state 274

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr T_IS_NOT_EQUAL expr .   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 199 (expr_without_variable)



state 275

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr T_IS_IDENTICAL expr .   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 196 (expr_without_variable)



state 276

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr T_IS_NOT_IDENTICAL expr .   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    T_IS_EQUAL	error (nonassociative)
    T_IS_NOT_EQUAL	error (nonassociative)
    T_IS_IDENTICAL	error (nonassociative)
    T_IS_NOT_IDENTICAL	error (nonassociative)

    $default	reduce using rule 197 (expr_without_variable)



state 277

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr '<' expr .   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 200 (expr_without_variable)



state 278

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr T_IS_SMALLER_OR_EQUAL expr .   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 201 (expr_without_variable)



state 279

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr '>' expr .   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 202 (expr_without_variable)



state 280

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr T_IS_GREATER_OR_EQUAL expr .   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    '<' 	error (nonassociative)
    T_IS_SMALLER_OR_EQUAL	error (nonassociative)
    '>' 	error (nonassociative)
    T_IS_GREATER_OR_EQUAL	error (nonassociative)

    $default	reduce using rule 203 (expr_without_variable)



state 281

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr T_SL expr .   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 190 (expr_without_variable)



state 282

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr T_SR expr .   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 191 (expr_without_variable)



state 283

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr '+' expr .   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 185 (expr_without_variable)



state 284

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr '-' expr .   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 186 (expr_without_variable)



state 285

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr '.' expr .   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 184 (expr_without_variable)



state 286

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr '*' expr .   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)


    $default	reduce using rule 187 (expr_without_variable)



state 287

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr '/' expr .   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)


    $default	reduce using rule 188 (expr_without_variable)



state 288

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr '%' expr .   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)


    $default	reduce using rule 189 (expr_without_variable)



state 289

    function_call  ->  r_cvar '(' @43 . function_call_parameter_list ')'   (rule 227)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 313
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 111 (function_call_parameter_list)

    function_call_parameter_list	go to state 368
    non_empty_function_call_parameter_list	go to state 315
    expr_without_variable	go to state 316
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 317
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 290

    expr_without_variable  ->  cvar '=' '&' . w_cvar   (rule 153)
    expr_without_variable  ->  cvar '=' '&' . function_call   (rule 154)

    T_STRING	shift, and go to state 369
    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    function_call	go to state 370
    r_cvar	go to state 371
    w_cvar	go to state 372
    cvar	go to state 373
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 291

    expr_without_variable  ->  cvar '=' expr .   (rule 152)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 152 (expr_without_variable)



state 292

    expr_without_variable  ->  cvar T_PLUS_EQUAL expr .   (rule 157)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 157 (expr_without_variable)



state 293

    expr_without_variable  ->  cvar T_MINUS_EQUAL expr .   (rule 158)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 158 (expr_without_variable)



state 294

    expr_without_variable  ->  cvar T_MUL_EQUAL expr .   (rule 159)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 159 (expr_without_variable)



state 295

    expr_without_variable  ->  cvar T_DIV_EQUAL expr .   (rule 160)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 160 (expr_without_variable)



state 296

    expr_without_variable  ->  cvar T_CONCAT_EQUAL expr .   (rule 161)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 161 (expr_without_variable)



state 297

    expr_without_variable  ->  cvar T_MOD_EQUAL expr .   (rule 162)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 162 (expr_without_variable)



state 298

    expr_without_variable  ->  cvar T_AND_EQUAL expr .   (rule 163)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 163 (expr_without_variable)



state 299

    expr_without_variable  ->  cvar T_OR_EQUAL expr .   (rule 164)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 164 (expr_without_variable)



state 300

    expr_without_variable  ->  cvar XT_OR_EQUAL expr .   (rule 165)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 165 (expr_without_variable)



state 301

    expr_without_variable  ->  cvar T_SL_EQUAL expr .   (rule 166)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 166 (expr_without_variable)



state 302

    expr_without_variable  ->  cvar T_SR_EQUAL expr .   (rule 167)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 167 (expr_without_variable)



state 303

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @45 . ref_list   (rule 268)

    T_STRING	shift, and go to state 374
    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 375
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 376
    reference_variable	go to state 78
    compound_variable	go to state 79
    ref_list	go to state 377
    object_property	go to state 378
    object_dim_list	go to state 379
    variable_name	go to state 380
    simple_indirect_reference	go to state 80



state 304

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    dim_offset  ->  expr .   (rule 277)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 277 (dim_offset)



state 305

    reference_variable  ->  reference_variable '[' dim_offset . ']'   (rule 271)

    ']' 	shift, and go to state 381



state 306

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    reference_variable  ->  reference_variable '{' expr . '}'   (rule 272)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 382



state 307

    internal_functions_in_yacc  ->  T_EVAL '(' expr ')' .   (rule 333)

    $default	reduce using rule 333 (internal_functions_in_yacc)



state 308

    ctor_arguments  ->  '(' . function_call_parameter_list ')'   (rule 234)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 313
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 111 (function_call_parameter_list)

    function_call_parameter_list	go to state 383
    non_empty_function_call_parameter_list	go to state 315
    expr_without_variable	go to state 316
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 317
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 309

    expr_without_variable  ->  T_NEW class_name @34 ctor_arguments .   (rule 156)

    $default	reduce using rule 156 (expr_without_variable)



state 310

    exit_expr  ->  '(' expr ')' .   (rule 232)

    $default	reduce using rule 232 (exit_expr)



state 311

    unticked_statement  ->  T_IF '(' expr ')' . @3 statement @4 elseif_list else_single   (rule 16)
    unticked_statement  ->  T_IF '(' expr ')' . ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    ':' 	shift, and go to state 384

    $default	reduce using rule 14 (@3)

    @3  	go to state 385



state 312

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' . @44 function_call_parameter_list ')'   (rule 229)

    $default	reduce using rule 228 (@44)

    @44 	go to state 386



state 313

    non_empty_function_call_parameter_list  ->  '&' . w_cvar   (rule 114)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 387
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 314

    function_call  ->  T_STRING '(' @42 function_call_parameter_list . ')'   (rule 225)

    ')' 	shift, and go to state 388



state 315

    function_call_parameter_list  ->  non_empty_function_call_parameter_list .   (rule 110)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' expr_without_variable   (rule 115)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' cvar   (rule 116)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list . ',' '&' w_cvar   (rule 117)

    ',' 	shift, and go to state 389

    $default	reduce using rule 110 (function_call_parameter_list)



state 316

    non_empty_function_call_parameter_list  ->  expr_without_variable .   (rule 112)
    expr  ->  expr_without_variable .   (rule 262)

    ',' 	reduce using rule 112 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 112 (non_empty_function_call_parameter_list)
    $default	reduce using rule 262 (expr)



state 317

    non_empty_function_call_parameter_list  ->  cvar .   (rule 113)
    expr_without_variable  ->  cvar . '=' expr   (rule 152)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 153)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 154)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 157)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 158)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 159)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . XT_OR_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 167)
    r_cvar  ->  cvar .   (rule 263)
    rw_cvar  ->  cvar .   (rule 265)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    XT_OR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    ',' 	reduce using rule 113 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 265 (rw_cvar)
    T_DEC	reduce using rule 265 (rw_cvar)
    ')' 	reduce using rule 113 (non_empty_function_call_parameter_list)
    $default	reduce using rule 263 (r_cvar)



state 318

    echo_expr_list  ->  echo_expr_list ',' expr .   (rule 143)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 143 (echo_expr_list)



state 319

    unticked_statement  ->  T_DO @9 statement T_WHILE . '(' @10 expr ')' ';'   (rule 25)

    '(' 	shift, and go to state 390



state 320

    unticked_statement  ->  T_WHILE '(' @7 expr . ')' @8 while_statement   (rule 22)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 391



state 321

    unticked_statement  ->  T_FOR '(' for_expr ';' . @11 for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 26 (@11)

    @11 	go to state 392



state 322

    non_empty_for_expr  ->  non_empty_for_expr ',' . @32 expr   (rule 148)

    $default	reduce using rule 147 (@32)

    @32 	go to state 393



state 323

    unticked_statement  ->  T_FOREACH '(' expr T_AS . @15 w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    $default	reduce using rule 48 (@15)

    @15 	go to state 394



state 324

    declare_list  ->  T_STRING . '=' static_scalar   (rule 75)

    '=' 	shift, and go to state 395



state 325

    unticked_statement  ->  T_DECLARE @17 '(' declare_list . ')' declare_statement   (rule 52)
    declare_list  ->  declare_list . ',' T_STRING '=' static_scalar   (rule 76)

    ',' 	shift, and go to state 396
    ')' 	shift, and go to state 397



state 326

    unticked_statement  ->  T_SWITCH '(' expr ')' . @14 switch_case_list   (rule 31)

    $default	reduce using rule 30 (@14)

    @14 	go to state 398



state 327

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING . @21 parameter_list '(' inner_statement_list ')' ';'   (rule 62)

    $default	reduce using rule 61 (@21)

    @21 	go to state 399



state 328

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING . @19 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    $default	reduce using rule 58 (@19)

    @19 	go to state 400



state 329

    use_filename  ->  '(' T_CONSTANT_ENCAPSED_STRING ')' .   (rule 55)

    $default	reduce using rule 55 (use_filename)



state 330

    global_var  ->  '$' '{' expr . '}'   (rule 122)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 401



state 331

    global_var_list  ->  global_var_list ',' global_var .   (rule 118)

    $default	reduce using rule 118 (global_var_list)



state 332

    static_scalar  ->  '+' . static_scalar   (rule 244)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 402



state 333

    static_scalar  ->  '-' . static_scalar   (rule 245)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 403



state 334

    static_scalar  ->  T_STRING .   (rule 243)

    $default	reduce using rule 243 (static_scalar)



state 335

    static_scalar  ->  T_ARRAY . '(' static_array_pair_list ')'   (rule 246)

    '(' 	shift, and go to state 404



state 336

    static_scalar  ->  common_scalar .   (rule 242)

    $default	reduce using rule 242 (static_scalar)



state 337

    static_var_list  ->  T_VARIABLE '=' static_scalar .   (rule 126)

    $default	reduce using rule 126 (static_var_list)



state 338

    static_var_list  ->  static_var_list ',' T_VARIABLE .   (rule 123)
    static_var_list  ->  static_var_list ',' T_VARIABLE . '=' static_scalar   (rule 124)

    '=' 	shift, and go to state 405

    $default	reduce using rule 123 (static_var_list)



state 339

    unticked_statement  ->  T_UNSET '(' cvar ')' . ';'   (rule 47)

    ';' 	shift, and go to state 406



state 340

    internal_functions_in_yacc  ->  T_ISSET '(' cvar ')' .   (rule 329)

    $default	reduce using rule 329 (internal_functions_in_yacc)



state 341

    internal_functions_in_yacc  ->  T_EMPTY '(' cvar ')' .   (rule 330)

    $default	reduce using rule 330 (internal_functions_in_yacc)



state 342

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING . @23 '{' class_statement_list '}'   (rule 66)

    $default	reduce using rule 65 (@23)

    @23 	go to state 407



state 343

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' . class_statement_list '}'   (rule 64)

    $default	reduce using rule 128 (class_statement_list)

    class_statement_list	go to state 408



state 344

    assignment_list_element  ->  T_LIST . '(' @48 assignment_list ')'   (rule 295)

    '(' 	shift, and go to state 409



state 345

    assignment_list_element  ->  cvar .   (rule 293)

    $default	reduce using rule 293 (assignment_list_element)



state 346

    expr_without_variable  ->  T_LIST '(' @33 assignment_list . ')' '=' expr   (rule 151)
    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 291)

    ',' 	shift, and go to state 410
    ')' 	shift, and go to state 411



state 347

    assignment_list  ->  assignment_list_element .   (rule 292)

    $default	reduce using rule 292 (assignment_list)



state 348

    non_empty_array_pair_list  ->  '&' w_cvar .   (rule 306)

    $default	reduce using rule 306 (non_empty_array_pair_list)



state 349

    w_cvar  ->  cvar .   (rule 264)

    $default	reduce using rule 264 (w_cvar)



state 350

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . expr   (rule 301)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW . '&' w_cvar   (rule 305)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 412
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 413
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 351

    expr_without_variable  ->  T_ARRAY '(' array_pair_list ')' .   (rule 221)

    $default	reduce using rule 221 (expr_without_variable)



state 352

    possible_comma  ->  ',' .   (rule 256)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW expr   (rule 299)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr   (rule 300)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . expr T_DOUBLE_ARROW '&' w_cvar   (rule 303)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' . '&' w_cvar   (rule 304)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 414
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 256 (possible_comma)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 415
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 353

    array_pair_list  ->  non_empty_array_pair_list possible_comma .   (rule 298)

    $default	reduce using rule 298 (array_pair_list)



state 354

    encaps_var  ->  T_VARIABLE '[' . @49 encaps_var_offset ']'   (rule 321)

    $default	reduce using rule 320 (@49)

    @49 	go to state 416



state 355

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR . T_STRING   (rule 322)

    T_STRING	shift, and go to state 417



state 356

    scalar  ->  T_STRING_VARNAME .   (rule 248)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . '[' expr ']' '}'   (rule 324)

    '[' 	shift, and go to state 418

    $default	reduce using rule 248 (scalar)



state 357

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr . '}'   (rule 323)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 419



state 358

    encaps_var  ->  T_CURLY_OPEN cvar . '}'   (rule 325)

    '}' 	shift, and go to state 420



state 359

    inner_statement_list  ->  inner_statement_list @2 inner_statement .   (rule 8)

    $default	reduce using rule 8 (inner_statement_list)



state 360

    inner_statement  ->  statement .   (rule 10)

    $default	reduce using rule 10 (inner_statement)



state 361

    inner_statement  ->  declaration_statement .   (rule 11)

    $default	reduce using rule 11 (inner_statement)



state 362

    compound_variable  ->  '$' '{' expr '}' .   (rule 275)

    $default	reduce using rule 275 (compound_variable)



state 363

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr T_LOGICAL_OR @37 expr .   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 177 (expr_without_variable)



state 364

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr T_LOGICAL_AND @38 expr .   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 179 (expr_without_variable)



state 365

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  expr '?' @39 expr . ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 421
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176



state 366

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr T_BOOLEAN_OR @35 expr .   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 173 (expr_without_variable)



state 367

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr T_BOOLEAN_AND @36 expr .   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 175 (expr_without_variable)



state 368

    function_call  ->  r_cvar '(' @43 function_call_parameter_list . ')'   (rule 227)

    ')' 	shift, and go to state 422



state 369

    function_call  ->  T_STRING . '(' @42 function_call_parameter_list ')'   (rule 225)
    function_call  ->  T_STRING . T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')'   (rule 229)

    T_PAAMAYIM_NEKUDOTAYIM	shift, and go to state 108
    '(' 	shift, and go to state 109



state 370

    expr_without_variable  ->  cvar '=' '&' function_call .   (rule 154)

    $default	reduce using rule 154 (expr_without_variable)



state 371

    function_call  ->  r_cvar . '(' @43 function_call_parameter_list ')'   (rule 227)

    '(' 	shift, and go to state 178



state 372

    expr_without_variable  ->  cvar '=' '&' w_cvar .   (rule 153)

    $default	reduce using rule 153 (expr_without_variable)



state 373

    r_cvar  ->  cvar .   (rule 263)
    w_cvar  ->  cvar .   (rule 264)

    '(' 	reduce using rule 263 (r_cvar)
    $default	reduce using rule 264 (w_cvar)



state 374

    variable_name  ->  T_STRING .   (rule 287)

    $default	reduce using rule 287 (variable_name)



state 375

    variable_name  ->  '{' . expr '}'   (rule 288)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 423
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 376

    object_property  ->  cvar_without_objects . @47   (rule 283)

    $default	reduce using rule 282 (@47)

    @47 	go to state 424



state 377

    cvar  ->  cvar_without_objects T_OBJECT_OPERATOR @45 ref_list .   (rule 268)
    ref_list  ->  ref_list . T_OBJECT_OPERATOR @46 object_property   (rule 280)

    T_OBJECT_OPERATOR	shift, and go to state 425

    $default	reduce using rule 268 (cvar)



state 378

    ref_list  ->  object_property .   (rule 278)

    $default	reduce using rule 278 (ref_list)



state 379

    object_property  ->  object_dim_list .   (rule 281)
    object_dim_list  ->  object_dim_list . '[' dim_offset ']'   (rule 284)
    object_dim_list  ->  object_dim_list . '{' expr '}'   (rule 285)

    '[' 	shift, and go to state 426
    '{' 	shift, and go to state 427

    '{' 	[reduce using rule 281 (object_property)]
    $default	reduce using rule 281 (object_property)



state 380

    object_dim_list  ->  variable_name .   (rule 286)

    $default	reduce using rule 286 (object_dim_list)



state 381

    reference_variable  ->  reference_variable '[' dim_offset ']' .   (rule 271)

    $default	reduce using rule 271 (reference_variable)



state 382

    reference_variable  ->  reference_variable '{' expr '}' .   (rule 272)

    $default	reduce using rule 272 (reference_variable)



state 383

    ctor_arguments  ->  '(' function_call_parameter_list . ')'   (rule 234)

    ')' 	shift, and go to state 428



state 384

    unticked_statement  ->  T_IF '(' expr ')' ':' . @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 17 (@5)

    @5  	go to state 429



state 385

    unticked_statement  ->  T_IF '(' expr ')' @3 . statement @4 elseif_list else_single   (rule 16)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 430
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 386

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 . function_call_parameter_list ')'   (rule 229)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 313
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 111 (function_call_parameter_list)

    function_call_parameter_list	go to state 431
    non_empty_function_call_parameter_list	go to state 315
    expr_without_variable	go to state 316
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 317
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 387

    non_empty_function_call_parameter_list  ->  '&' w_cvar .   (rule 114)

    $default	reduce using rule 114 (non_empty_function_call_parameter_list)



state 388

    function_call  ->  T_STRING '(' @42 function_call_parameter_list ')' .   (rule 225)

    $default	reduce using rule 225 (function_call)



state 389

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . expr_without_variable   (rule 115)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . cvar   (rule 116)
    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' . '&' w_cvar   (rule 117)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 432
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 433
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 126
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 434
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 390

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' . @10 expr ')' ';'   (rule 25)

    $default	reduce using rule 24 (@10)

    @10 	go to state 435



state 391

    unticked_statement  ->  T_WHILE '(' @7 expr ')' . @8 while_statement   (rule 22)

    $default	reduce using rule 21 (@8)

    @8  	go to state 436



state 392

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 . for_expr ';' @12 for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 145 (for_expr)

    for_expr	go to state 437
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 393

    non_empty_for_expr  ->  non_empty_for_expr ',' @32 . expr   (rule 148)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 438
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 394

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 . w_cvar foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 439
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 395

    declare_list  ->  T_STRING '=' . static_scalar   (rule 75)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 440



state 396

    declare_list  ->  declare_list ',' . T_STRING '=' static_scalar   (rule 76)

    T_STRING	shift, and go to state 441



state 397

    unticked_statement  ->  T_DECLARE @17 '(' declare_list ')' . declare_statement   (rule 52)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 442
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 443
    unticked_statement	go to state 66
    declare_statement	go to state 444
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 398

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 . switch_case_list   (rule 31)

    ':' 	shift, and go to state 445
    '{' 	shift, and go to state 446

    switch_case_list	go to state 447



state 399

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 . parameter_list '(' inner_statement_list ')' ';'   (rule 62)

    '&' 	shift, and go to state 448
    T_VARIABLE	shift, and go to state 449
    T_CONST	shift, and go to state 450

    $default	reduce using rule 101 (parameter_list)

    parameter_list	go to state 451
    non_empty_parameter_list	go to state 452



state 400

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    '(' 	shift, and go to state 453



state 401

    global_var  ->  '$' '{' expr '}' .   (rule 122)

    $default	reduce using rule 122 (global_var)



state 402

    static_scalar  ->  '+' static_scalar .   (rule 244)

    $default	reduce using rule 244 (static_scalar)



state 403

    static_scalar  ->  '-' static_scalar .   (rule 245)

    $default	reduce using rule 245 (static_scalar)



state 404

    static_scalar  ->  T_ARRAY '(' . static_array_pair_list ')'   (rule 246)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 253 (static_array_pair_list)

    common_scalar	go to state 336
    static_scalar	go to state 454
    static_array_pair_list	go to state 455
    non_empty_static_array_pair_list	go to state 456



state 405

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' . static_scalar   (rule 124)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 457



state 406

    unticked_statement  ->  T_UNSET '(' cvar ')' ';' .   (rule 47)

    $default	reduce using rule 47 (unticked_statement)



state 407

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 . '{' class_statement_list '}'   (rule 66)

    '{' 	shift, and go to state 458



state 408

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' class_statement_list . '}'   (rule 64)
    class_statement_list  ->  class_statement_list . class_statement   (rule 127)

    T_OLD_FUNCTION	shift, and go to state 459
    T_FUNCTION	shift, and go to state 460
    T_VAR	shift, and go to state 461
    '}' 	shift, and go to state 462

    class_statement	go to state 463



state 409

    assignment_list_element  ->  T_LIST '(' . @48 assignment_list ')'   (rule 295)

    $default	reduce using rule 294 (@48)

    @48 	go to state 464



state 410

    assignment_list  ->  assignment_list ',' . assignment_list_element   (rule 291)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 344
    '$' 	shift, and go to state 60

    $default	reduce using rule 296 (assignment_list_element)

    cvar	go to state 345
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list_element	go to state 465



state 411

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' . '=' expr   (rule 151)

    '=' 	shift, and go to state 466



state 412

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' . w_cvar   (rule 305)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 467
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 413

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW expr .   (rule 301)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 301 (non_empty_array_pair_list)



state 414

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' . w_cvar   (rule 304)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 468
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 415

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW expr   (rule 299)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr .   (rule 300)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr . T_DOUBLE_ARROW '&' w_cvar   (rule 303)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    T_DOUBLE_ARROW	shift, and go to state 469

    $default	reduce using rule 300 (non_empty_array_pair_list)



state 416

    encaps_var  ->  T_VARIABLE '[' @49 . encaps_var_offset ']'   (rule 321)

    T_STRING	shift, and go to state 470
    T_VARIABLE	shift, and go to state 471
    T_NUM_STRING	shift, and go to state 472

    encaps_var_offset	go to state 473



state 417

    encaps_var  ->  T_VARIABLE T_OBJECT_OPERATOR T_STRING .   (rule 322)

    $default	reduce using rule 322 (encaps_var)



state 418

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' . expr ']' '}'   (rule 324)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 474
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 419

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES expr '}' .   (rule 323)

    $default	reduce using rule 323 (encaps_var)



state 420

    encaps_var  ->  T_CURLY_OPEN cvar '}' .   (rule 325)

    $default	reduce using rule 325 (encaps_var)



state 421

    expr_without_variable  ->  expr '?' @39 expr ':' . @40 expr   (rule 207)

    $default	reduce using rule 206 (@40)

    @40 	go to state 475



state 422

    function_call  ->  r_cvar '(' @43 function_call_parameter_list ')' .   (rule 227)

    $default	reduce using rule 227 (function_call)



state 423

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    variable_name  ->  '{' expr . '}'   (rule 288)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 476



state 424

    object_property  ->  cvar_without_objects @47 .   (rule 283)

    $default	reduce using rule 283 (object_property)



state 425

    ref_list  ->  ref_list T_OBJECT_OPERATOR . @46 object_property   (rule 280)

    $default	reduce using rule 279 (@46)

    @46 	go to state 477



state 426

    object_dim_list  ->  object_dim_list '[' . dim_offset ']'   (rule 284)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 276 (dim_offset)

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 304
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    dim_offset	go to state 478
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 427

    object_dim_list  ->  object_dim_list '{' . expr '}'   (rule 285)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 479
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 428

    ctor_arguments  ->  '(' function_call_parameter_list ')' .   (rule 234)

    $default	reduce using rule 234 (ctor_arguments)



state 429

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 . inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 480



state 430

    unticked_statement  ->  T_IF '(' expr ')' @3 statement . @4 elseif_list else_single   (rule 16)

    $default	reduce using rule 15 (@4)

    @4  	go to state 481



state 431

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list . ')'   (rule 229)

    ')' 	shift, and go to state 482



state 432

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' . w_cvar   (rule 117)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 483
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 433

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' expr_without_variable .   (rule 115)
    expr  ->  expr_without_variable .   (rule 262)

    ',' 	reduce using rule 115 (non_empty_function_call_parameter_list)
    ')' 	reduce using rule 115 (non_empty_function_call_parameter_list)
    $default	reduce using rule 262 (expr)



state 434

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' cvar .   (rule 116)
    expr_without_variable  ->  cvar . '=' expr   (rule 152)
    expr_without_variable  ->  cvar . '=' '&' w_cvar   (rule 153)
    expr_without_variable  ->  cvar . '=' '&' function_call   (rule 154)
    expr_without_variable  ->  cvar . T_PLUS_EQUAL expr   (rule 157)
    expr_without_variable  ->  cvar . T_MINUS_EQUAL expr   (rule 158)
    expr_without_variable  ->  cvar . T_MUL_EQUAL expr   (rule 159)
    expr_without_variable  ->  cvar . T_DIV_EQUAL expr   (rule 160)
    expr_without_variable  ->  cvar . T_CONCAT_EQUAL expr   (rule 161)
    expr_without_variable  ->  cvar . T_MOD_EQUAL expr   (rule 162)
    expr_without_variable  ->  cvar . T_AND_EQUAL expr   (rule 163)
    expr_without_variable  ->  cvar . T_OR_EQUAL expr   (rule 164)
    expr_without_variable  ->  cvar . XT_OR_EQUAL expr   (rule 165)
    expr_without_variable  ->  cvar . T_SL_EQUAL expr   (rule 166)
    expr_without_variable  ->  cvar . T_SR_EQUAL expr   (rule 167)
    r_cvar  ->  cvar .   (rule 263)
    rw_cvar  ->  cvar .   (rule 265)

    '=' 	shift, and go to state 181
    T_PLUS_EQUAL	shift, and go to state 182
    T_MINUS_EQUAL	shift, and go to state 183
    T_MUL_EQUAL	shift, and go to state 184
    T_DIV_EQUAL	shift, and go to state 185
    T_CONCAT_EQUAL	shift, and go to state 186
    T_MOD_EQUAL	shift, and go to state 187
    T_AND_EQUAL	shift, and go to state 188
    T_OR_EQUAL	shift, and go to state 189
    XT_OR_EQUAL	shift, and go to state 190
    T_SL_EQUAL	shift, and go to state 191
    T_SR_EQUAL	shift, and go to state 192

    ',' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    T_INC	reduce using rule 265 (rw_cvar)
    T_DEC	reduce using rule 265 (rw_cvar)
    ')' 	reduce using rule 116 (non_empty_function_call_parameter_list)
    $default	reduce using rule 263 (r_cvar)



state 435

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 . expr ')' ';'   (rule 25)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 484
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 436

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 . while_statement   (rule 22)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 485
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 486
    unticked_statement	go to state 66
    while_statement	go to state 487
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 437

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr . ';' @12 for_expr ')' @13 for_statement   (rule 29)

    ';' 	shift, and go to state 488



state 438

    non_empty_for_expr  ->  non_empty_for_expr ',' @32 expr .   (rule 148)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 148 (non_empty_for_expr)



state 439

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar . foreach_optional_arg ')' @16 foreach_statement   (rule 50)

    T_DOUBLE_ARROW	shift, and go to state 489

    $default	reduce using rule 67 (foreach_optional_arg)

    foreach_optional_arg	go to state 490



state 440

    declare_list  ->  T_STRING '=' static_scalar .   (rule 75)

    $default	reduce using rule 75 (declare_list)



state 441

    declare_list  ->  declare_list ',' T_STRING . '=' static_scalar   (rule 76)

    '=' 	shift, and go to state 491



state 442

    declare_statement  ->  ':' . inner_statement_list T_ENDDECLARE ';'   (rule 74)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 492



state 443

    declare_statement  ->  statement .   (rule 73)

    $default	reduce using rule 73 (declare_statement)



state 444

    unticked_statement  ->  T_DECLARE @17 '(' declare_list ')' declare_statement .   (rule 52)

    $default	reduce using rule 52 (unticked_statement)



state 445

    switch_case_list  ->  ':' . case_list T_ENDSWITCH ';'   (rule 79)
    switch_case_list  ->  ':' . ';' case_list T_ENDSWITCH ';'   (rule 80)

    ';' 	shift, and go to state 493

    $default	reduce using rule 81 (case_list)

    case_list	go to state 494



state 446

    switch_case_list  ->  '{' . case_list '}'   (rule 77)
    switch_case_list  ->  '{' . ';' case_list '}'   (rule 78)

    ';' 	shift, and go to state 495

    $default	reduce using rule 81 (case_list)

    case_list	go to state 496



state 447

    unticked_statement  ->  T_SWITCH '(' expr ')' @14 switch_case_list .   (rule 31)

    $default	reduce using rule 31 (unticked_statement)



state 448

    non_empty_parameter_list  ->  '&' . T_VARIABLE   (rule 103)

    T_VARIABLE	shift, and go to state 497



state 449

    non_empty_parameter_list  ->  T_VARIABLE .   (rule 102)
    non_empty_parameter_list  ->  T_VARIABLE . '=' static_scalar   (rule 105)

    '=' 	shift, and go to state 498

    $default	reduce using rule 102 (non_empty_parameter_list)



state 450

    non_empty_parameter_list  ->  T_CONST . T_VARIABLE   (rule 104)

    T_VARIABLE	shift, and go to state 499



state 451

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list . '(' inner_statement_list ')' ';'   (rule 62)

    '(' 	shift, and go to state 500



state 452

    parameter_list  ->  non_empty_parameter_list .   (rule 100)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE   (rule 106)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' '&' T_VARIABLE   (rule 107)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_CONST T_VARIABLE   (rule 108)
    non_empty_parameter_list  ->  non_empty_parameter_list . ',' T_VARIABLE '=' static_scalar   (rule 109)

    ',' 	shift, and go to state 501

    $default	reduce using rule 100 (parameter_list)



state 453

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 59)

    '&' 	shift, and go to state 448
    T_VARIABLE	shift, and go to state 449
    T_CONST	shift, and go to state 450

    $default	reduce using rule 101 (parameter_list)

    parameter_list	go to state 502
    non_empty_parameter_list	go to state 452



state 454

    non_empty_static_array_pair_list  ->  static_scalar . T_DOUBLE_ARROW static_scalar   (rule 259)
    non_empty_static_array_pair_list  ->  static_scalar .   (rule 260)

    T_DOUBLE_ARROW	shift, and go to state 503

    $default	reduce using rule 260 (non_empty_static_array_pair_list)



state 455

    static_scalar  ->  T_ARRAY '(' static_array_pair_list . ')'   (rule 246)

    ')' 	shift, and go to state 504



state 456

    static_array_pair_list  ->  non_empty_static_array_pair_list . possible_comma   (rule 254)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar T_DOUBLE_ARROW static_scalar   (rule 257)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list . ',' static_scalar   (rule 258)

    ',' 	shift, and go to state 505

    $default	reduce using rule 255 (possible_comma)

    possible_comma	go to state 506



state 457

    static_var_list  ->  static_var_list ',' T_VARIABLE '=' static_scalar .   (rule 124)

    $default	reduce using rule 124 (static_var_list)



state 458

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' . class_statement_list '}'   (rule 66)

    $default	reduce using rule 128 (class_statement_list)

    class_statement_list	go to state 507



state 459

    class_statement  ->  T_OLD_FUNCTION . @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 135)

    $default	reduce using rule 133 (@30)

    @30 	go to state 508



state 460

    class_statement  ->  T_FUNCTION . @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    $default	reduce using rule 130 (@28)

    @28 	go to state 509



state 461

    class_statement  ->  T_VAR . class_variable_decleration ';'   (rule 129)

    T_VARIABLE	shift, and go to state 510

    class_variable_decleration	go to state 511



state 462

    unticked_declaration_statement  ->  T_CLASS T_STRING @22 '{' class_statement_list '}' .   (rule 64)

    $default	reduce using rule 64 (unticked_declaration_statement)



state 463

    class_statement_list  ->  class_statement_list class_statement .   (rule 127)

    $default	reduce using rule 127 (class_statement_list)



state 464

    assignment_list_element  ->  T_LIST '(' @48 . assignment_list ')'   (rule 295)

    T_VARIABLE	shift, and go to state 28
    T_LIST	shift, and go to state 344
    '$' 	shift, and go to state 60

    $default	reduce using rule 296 (assignment_list_element)

    cvar	go to state 345
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    assignment_list	go to state 512
    assignment_list_element	go to state 347



state 465

    assignment_list  ->  assignment_list ',' assignment_list_element .   (rule 291)

    $default	reduce using rule 291 (assignment_list)



state 466

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' '=' . expr   (rule 151)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 513
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 467

    non_empty_array_pair_list  ->  expr T_DOUBLE_ARROW '&' w_cvar .   (rule 305)

    $default	reduce using rule 305 (non_empty_array_pair_list)



state 468

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' '&' w_cvar .   (rule 304)

    $default	reduce using rule 304 (non_empty_array_pair_list)



state 469

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . expr   (rule 299)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW . '&' w_cvar   (rule 303)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '&' 	shift, and go to state 514
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 515
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 470

    encaps_var_offset  ->  T_STRING .   (rule 326)

    $default	reduce using rule 326 (encaps_var_offset)



state 471

    encaps_var_offset  ->  T_VARIABLE .   (rule 328)

    $default	reduce using rule 328 (encaps_var_offset)



state 472

    encaps_var_offset  ->  T_NUM_STRING .   (rule 327)

    $default	reduce using rule 327 (encaps_var_offset)



state 473

    encaps_var  ->  T_VARIABLE '[' @49 encaps_var_offset . ']'   (rule 321)

    ']' 	shift, and go to state 516



state 474

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr . ']' '}'   (rule 324)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ']' 	shift, and go to state 517



state 475

    expr_without_variable  ->  expr '?' @39 expr ':' @40 . expr   (rule 207)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 518
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 476

    variable_name  ->  '{' expr '}' .   (rule 288)

    $default	reduce using rule 288 (variable_name)



state 477

    ref_list  ->  ref_list T_OBJECT_OPERATOR @46 . object_property   (rule 280)

    T_STRING	shift, and go to state 374
    T_VARIABLE	shift, and go to state 28
    '{' 	shift, and go to state 375
    '$' 	shift, and go to state 60

    cvar_without_objects	go to state 376
    reference_variable	go to state 78
    compound_variable	go to state 79
    object_property	go to state 519
    object_dim_list	go to state 379
    variable_name	go to state 380
    simple_indirect_reference	go to state 80



state 478

    object_dim_list  ->  object_dim_list '[' dim_offset . ']'   (rule 284)

    ']' 	shift, and go to state 520



state 479

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    object_dim_list  ->  object_dim_list '{' expr . '}'   (rule 285)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '}' 	shift, and go to state 521



state 480

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list . @6 new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    T_ELSEIF	reduce using rule 18 (@6)
    T_ELSE	reduce using rule 18 (@6)
    T_ENDIF	reduce using rule 18 (@6)
    $default	reduce using rule 7 (@2)

    @2  	go to state 258
    @6  	go to state 522



state 481

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 . elseif_list else_single   (rule 16)

    $default	reduce using rule 90 (elseif_list)

    elseif_list	go to state 523



state 482

    function_call  ->  T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING '(' @44 function_call_parameter_list ')' .   (rule 229)

    $default	reduce using rule 229 (function_call)



state 483

    non_empty_function_call_parameter_list  ->  non_empty_function_call_parameter_list ',' '&' w_cvar .   (rule 117)

    $default	reduce using rule 117 (non_empty_function_call_parameter_list)



state 484

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr . ')' ';'   (rule 25)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 524



state 485

    while_statement  ->  ':' . inner_statement_list T_ENDWHILE ';'   (rule 89)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 525



state 486

    while_statement  ->  statement .   (rule 88)

    $default	reduce using rule 88 (while_statement)



state 487

    unticked_statement  ->  T_WHILE '(' @7 expr ')' @8 while_statement .   (rule 22)

    $default	reduce using rule 22 (unticked_statement)



state 488

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' . @12 for_expr ')' @13 for_statement   (rule 29)

    $default	reduce using rule 27 (@12)

    @12 	go to state 526



state 489

    foreach_optional_arg  ->  T_DOUBLE_ARROW . w_cvar   (rule 68)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 527
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 490

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg . ')' @16 foreach_statement   (rule 50)

    ')' 	shift, and go to state 528



state 491

    declare_list  ->  declare_list ',' T_STRING '=' . static_scalar   (rule 76)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 529



state 492

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    declare_statement  ->  ':' inner_statement_list . T_ENDDECLARE ';'   (rule 74)

    T_ENDDECLARE	shift, and go to state 530

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 493

    switch_case_list  ->  ':' ';' . case_list T_ENDSWITCH ';'   (rule 80)

    $default	reduce using rule 81 (case_list)

    case_list	go to state 531



state 494

    switch_case_list  ->  ':' case_list . T_ENDSWITCH ';'   (rule 79)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 83)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 85)

    T_ENDSWITCH	shift, and go to state 532
    T_CASE	shift, and go to state 533
    T_DEFAULT	shift, and go to state 534



state 495

    switch_case_list  ->  '{' ';' . case_list '}'   (rule 78)

    $default	reduce using rule 81 (case_list)

    case_list	go to state 535



state 496

    switch_case_list  ->  '{' case_list . '}'   (rule 77)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 83)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 85)

    T_CASE	shift, and go to state 533
    T_DEFAULT	shift, and go to state 534
    '}' 	shift, and go to state 536



state 497

    non_empty_parameter_list  ->  '&' T_VARIABLE .   (rule 103)

    $default	reduce using rule 103 (non_empty_parameter_list)



state 498

    non_empty_parameter_list  ->  T_VARIABLE '=' . static_scalar   (rule 105)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 537



state 499

    non_empty_parameter_list  ->  T_CONST T_VARIABLE .   (rule 104)

    $default	reduce using rule 104 (non_empty_parameter_list)



state 500

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' . inner_statement_list ')' ';'   (rule 62)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 538



state 501

    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE   (rule 106)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . '&' T_VARIABLE   (rule 107)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_CONST T_VARIABLE   (rule 108)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' . T_VARIABLE '=' static_scalar   (rule 109)

    '&' 	shift, and go to state 539
    T_VARIABLE	shift, and go to state 540
    T_CONST	shift, and go to state 541



state 502

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 59)

    ')' 	shift, and go to state 542



state 503

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW . static_scalar   (rule 259)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 543



state 504

    static_scalar  ->  T_ARRAY '(' static_array_pair_list ')' .   (rule 246)

    $default	reduce using rule 246 (static_scalar)



state 505

    possible_comma  ->  ',' .   (rule 256)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar T_DOUBLE_ARROW static_scalar   (rule 257)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' . static_scalar   (rule 258)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    $default	reduce using rule 256 (possible_comma)

    common_scalar	go to state 336
    static_scalar	go to state 544



state 506

    static_array_pair_list  ->  non_empty_static_array_pair_list possible_comma .   (rule 254)

    $default	reduce using rule 254 (static_array_pair_list)



state 507

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list . '}'   (rule 66)
    class_statement_list  ->  class_statement_list . class_statement   (rule 127)

    T_OLD_FUNCTION	shift, and go to state 459
    T_FUNCTION	shift, and go to state 460
    T_VAR	shift, and go to state 461
    '}' 	shift, and go to state 545

    class_statement	go to state 463



state 508

    class_statement  ->  T_OLD_FUNCTION @30 . is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 135)

    '&' 	shift, and go to state 218

    $default	reduce using rule 136 (is_reference)

    is_reference	go to state 546



state 509

    class_statement  ->  T_FUNCTION @28 . is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    '&' 	shift, and go to state 218

    $default	reduce using rule 136 (is_reference)

    is_reference	go to state 547



state 510

    class_variable_decleration  ->  T_VARIABLE .   (rule 140)
    class_variable_decleration  ->  T_VARIABLE . '=' static_scalar   (rule 141)

    '=' 	shift, and go to state 548

    $default	reduce using rule 140 (class_variable_decleration)



state 511

    class_statement  ->  T_VAR class_variable_decleration . ';'   (rule 129)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE   (rule 138)
    class_variable_decleration  ->  class_variable_decleration . ',' T_VARIABLE '=' static_scalar   (rule 139)

    ',' 	shift, and go to state 549
    ';' 	shift, and go to state 550



state 512

    assignment_list  ->  assignment_list . ',' assignment_list_element   (rule 291)
    assignment_list_element  ->  T_LIST '(' @48 assignment_list . ')'   (rule 295)

    ',' 	shift, and go to state 410
    ')' 	shift, and go to state 551



state 513

    expr_without_variable  ->  T_LIST '(' @33 assignment_list ')' '=' expr .   (rule 151)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 151 (expr_without_variable)



state 514

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' . w_cvar   (rule 303)

    T_VARIABLE	shift, and go to state 28
    '$' 	shift, and go to state 60

    w_cvar	go to state 552
    cvar	go to state 349
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80



state 515

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW expr .   (rule 299)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 299 (non_empty_array_pair_list)



state 516

    encaps_var  ->  T_VARIABLE '[' @49 encaps_var_offset ']' .   (rule 321)

    $default	reduce using rule 321 (encaps_var)



state 517

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' . '}'   (rule 324)

    '}' 	shift, and go to state 553



state 518

    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)
    expr_without_variable  ->  expr '?' @39 expr ':' @40 expr .   (rule 207)

    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176

    $default	reduce using rule 207 (expr_without_variable)



state 519

    ref_list  ->  ref_list T_OBJECT_OPERATOR @46 object_property .   (rule 280)

    $default	reduce using rule 280 (ref_list)



state 520

    object_dim_list  ->  object_dim_list '[' dim_offset ']' .   (rule 284)

    $default	reduce using rule 284 (object_dim_list)



state 521

    object_dim_list  ->  object_dim_list '{' expr '}' .   (rule 285)

    $default	reduce using rule 285 (object_dim_list)



state 522

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 . new_elseif_list new_else_single T_ENDIF ';'   (rule 19)

    $default	reduce using rule 93 (new_elseif_list)

    new_elseif_list	go to state 554



state 523

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list . else_single   (rule 16)
    elseif_list  ->  elseif_list . T_ELSEIF '(' expr ')' @26 statement   (rule 92)

    T_ELSEIF	shift, and go to state 555
    T_ELSE	shift, and go to state 556

    T_ELSEIF	[reduce using rule 96 (else_single)]
    T_ELSE	[reduce using rule 96 (else_single)]
    $default	reduce using rule 96 (else_single)

    else_single	go to state 557



state 524

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' . ';'   (rule 25)

    ';' 	shift, and go to state 558



state 525

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    while_statement  ->  ':' inner_statement_list . T_ENDWHILE ';'   (rule 89)

    T_ENDWHILE	shift, and go to state 559

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 526

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 . for_expr ')' @13 for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    $default	reduce using rule 145 (for_expr)

    for_expr	go to state 560
    non_empty_for_expr	go to state 211
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 212
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 527

    foreach_optional_arg  ->  T_DOUBLE_ARROW w_cvar .   (rule 68)

    $default	reduce using rule 68 (foreach_optional_arg)



state 528

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' . @16 foreach_statement   (rule 50)

    $default	reduce using rule 49 (@16)

    @16 	go to state 561



state 529

    declare_list  ->  declare_list ',' T_STRING '=' static_scalar .   (rule 76)

    $default	reduce using rule 76 (declare_list)



state 530

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE . ';'   (rule 74)

    ';' 	shift, and go to state 562



state 531

    switch_case_list  ->  ':' ';' case_list . T_ENDSWITCH ';'   (rule 80)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 83)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 85)

    T_ENDSWITCH	shift, and go to state 563
    T_CASE	shift, and go to state 533
    T_DEFAULT	shift, and go to state 534



state 532

    switch_case_list  ->  ':' case_list T_ENDSWITCH . ';'   (rule 79)

    ';' 	shift, and go to state 564



state 533

    case_list  ->  case_list T_CASE . expr case_separator @24 inner_statement_list   (rule 83)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 565
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 534

    case_list  ->  case_list T_DEFAULT . case_separator @25 inner_statement_list   (rule 85)

    ':' 	shift, and go to state 566
    ';' 	shift, and go to state 567

    case_separator	go to state 568



state 535

    switch_case_list  ->  '{' ';' case_list . '}'   (rule 78)
    case_list  ->  case_list . T_CASE expr case_separator @24 inner_statement_list   (rule 83)
    case_list  ->  case_list . T_DEFAULT case_separator @25 inner_statement_list   (rule 85)

    T_CASE	shift, and go to state 533
    T_DEFAULT	shift, and go to state 534
    '}' 	shift, and go to state 569



state 536

    switch_case_list  ->  '{' case_list '}' .   (rule 77)

    $default	reduce using rule 77 (switch_case_list)



state 537

    non_empty_parameter_list  ->  T_VARIABLE '=' static_scalar .   (rule 105)

    $default	reduce using rule 105 (non_empty_parameter_list)



state 538

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list . ')' ';'   (rule 62)

    ')' 	shift, and go to state 570

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 539

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' . T_VARIABLE   (rule 107)

    T_VARIABLE	shift, and go to state 571



state 540

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE .   (rule 106)
    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE . '=' static_scalar   (rule 109)

    '=' 	shift, and go to state 572

    $default	reduce using rule 106 (non_empty_parameter_list)



state 541

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST . T_VARIABLE   (rule 108)

    T_VARIABLE	shift, and go to state 573



state 542

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 59)

    '{' 	shift, and go to state 574



state 543

    non_empty_static_array_pair_list  ->  static_scalar T_DOUBLE_ARROW static_scalar .   (rule 259)

    $default	reduce using rule 259 (non_empty_static_array_pair_list)



state 544

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar . T_DOUBLE_ARROW static_scalar   (rule 257)
    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar .   (rule 258)

    T_DOUBLE_ARROW	shift, and go to state 575

    $default	reduce using rule 258 (non_empty_static_array_pair_list)



state 545

    unticked_declaration_statement  ->  T_CLASS T_STRING T_EXTENDS T_STRING @23 '{' class_statement_list '}' .   (rule 66)

    $default	reduce using rule 66 (unticked_declaration_statement)



state 546

    class_statement  ->  T_OLD_FUNCTION @30 is_reference . T_STRING @31 parameter_list '(' inner_statement_list ')' ';'   (rule 135)

    T_STRING	shift, and go to state 576



state 547

    class_statement  ->  T_FUNCTION @28 is_reference . T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    T_STRING	shift, and go to state 577



state 548

    class_variable_decleration  ->  T_VARIABLE '=' . static_scalar   (rule 141)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 578



state 549

    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE   (rule 138)
    class_variable_decleration  ->  class_variable_decleration ',' . T_VARIABLE '=' static_scalar   (rule 139)

    T_VARIABLE	shift, and go to state 579



state 550

    class_statement  ->  T_VAR class_variable_decleration ';' .   (rule 129)

    $default	reduce using rule 129 (class_statement)



state 551

    assignment_list_element  ->  T_LIST '(' @48 assignment_list ')' .   (rule 295)

    $default	reduce using rule 295 (assignment_list_element)



state 552

    non_empty_array_pair_list  ->  non_empty_array_pair_list ',' expr T_DOUBLE_ARROW '&' w_cvar .   (rule 303)

    $default	reduce using rule 303 (non_empty_array_pair_list)



state 553

    encaps_var  ->  T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}' .   (rule 324)

    $default	reduce using rule 324 (encaps_var)



state 554

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list . new_else_single T_ENDIF ';'   (rule 19)
    new_elseif_list  ->  new_elseif_list . T_ELSEIF '(' expr ')' ':' @27 inner_statement_list   (rule 95)

    T_ELSEIF	shift, and go to state 580
    T_ELSE	shift, and go to state 581

    $default	reduce using rule 98 (new_else_single)

    new_else_single	go to state 582



state 555

    elseif_list  ->  elseif_list T_ELSEIF . '(' expr ')' @26 statement   (rule 92)

    '(' 	shift, and go to state 583



state 556

    else_single  ->  T_ELSE . statement   (rule 97)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 584
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 557

    unticked_statement  ->  T_IF '(' expr ')' @3 statement @4 elseif_list else_single .   (rule 16)

    $default	reduce using rule 16 (unticked_statement)



state 558

    unticked_statement  ->  T_DO @9 statement T_WHILE '(' @10 expr ')' ';' .   (rule 25)

    $default	reduce using rule 25 (unticked_statement)



state 559

    while_statement  ->  ':' inner_statement_list T_ENDWHILE . ';'   (rule 89)

    ';' 	shift, and go to state 585



state 560

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr . ')' @13 for_statement   (rule 29)

    ')' 	shift, and go to state 586



state 561

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 . foreach_statement   (rule 50)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 587
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 588
    unticked_statement	go to state 66
    foreach_statement	go to state 589
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 562

    declare_statement  ->  ':' inner_statement_list T_ENDDECLARE ';' .   (rule 74)

    $default	reduce using rule 74 (declare_statement)



state 563

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH . ';'   (rule 80)

    ';' 	shift, and go to state 590



state 564

    switch_case_list  ->  ':' case_list T_ENDSWITCH ';' .   (rule 79)

    $default	reduce using rule 79 (switch_case_list)



state 565

    case_list  ->  case_list T_CASE expr . case_separator @24 inner_statement_list   (rule 83)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    ':' 	shift, and go to state 566
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ';' 	shift, and go to state 567

    case_separator	go to state 591



state 566

    case_separator  ->  ':' .   (rule 86)

    $default	reduce using rule 86 (case_separator)



state 567

    case_separator  ->  ';' .   (rule 87)

    $default	reduce using rule 87 (case_separator)



state 568

    case_list  ->  case_list T_DEFAULT case_separator . @25 inner_statement_list   (rule 85)

    $default	reduce using rule 84 (@25)

    @25 	go to state 592



state 569

    switch_case_list  ->  '{' ';' case_list '}' .   (rule 78)

    $default	reduce using rule 78 (switch_case_list)



state 570

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' . ';'   (rule 62)

    ';' 	shift, and go to state 593



state 571

    non_empty_parameter_list  ->  non_empty_parameter_list ',' '&' T_VARIABLE .   (rule 107)

    $default	reduce using rule 107 (non_empty_parameter_list)



state 572

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' . static_scalar   (rule 109)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 594



state 573

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_CONST T_VARIABLE .   (rule 108)

    $default	reduce using rule 108 (non_empty_parameter_list)



state 574

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 59)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 595



state 575

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW . static_scalar   (rule 257)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 596



state 576

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING . @31 parameter_list '(' inner_statement_list ')' ';'   (rule 135)

    $default	reduce using rule 134 (@31)

    @31 	go to state 597



state 577

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING . @29 '(' parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    $default	reduce using rule 131 (@29)

    @29 	go to state 598



state 578

    class_variable_decleration  ->  T_VARIABLE '=' static_scalar .   (rule 141)

    $default	reduce using rule 141 (class_variable_decleration)



state 579

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE .   (rule 138)
    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE . '=' static_scalar   (rule 139)

    '=' 	shift, and go to state 599

    $default	reduce using rule 138 (class_variable_decleration)



state 580

    new_elseif_list  ->  new_elseif_list T_ELSEIF . '(' expr ')' ':' @27 inner_statement_list   (rule 95)

    '(' 	shift, and go to state 600



state 581

    new_else_single  ->  T_ELSE . ':' inner_statement_list   (rule 99)

    ':' 	shift, and go to state 601



state 582

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single . T_ENDIF ';'   (rule 19)

    T_ENDIF	shift, and go to state 602



state 583

    elseif_list  ->  elseif_list T_ELSEIF '(' . expr ')' @26 statement   (rule 92)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 603
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 584

    else_single  ->  T_ELSE statement .   (rule 97)

    $default	reduce using rule 97 (else_single)



state 585

    while_statement  ->  ':' inner_statement_list T_ENDWHILE ';' .   (rule 89)

    $default	reduce using rule 89 (while_statement)



state 586

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' . @13 for_statement   (rule 29)

    $default	reduce using rule 28 (@13)

    @13 	go to state 604



state 587

    foreach_statement  ->  ':' . inner_statement_list T_ENDFOREACH ';'   (rule 72)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 605



state 588

    foreach_statement  ->  statement .   (rule 71)

    $default	reduce using rule 71 (foreach_statement)



state 589

    unticked_statement  ->  T_FOREACH '(' expr T_AS @15 w_cvar foreach_optional_arg ')' @16 foreach_statement .   (rule 50)

    $default	reduce using rule 50 (unticked_statement)



state 590

    switch_case_list  ->  ':' ';' case_list T_ENDSWITCH ';' .   (rule 80)

    $default	reduce using rule 80 (switch_case_list)



state 591

    case_list  ->  case_list T_CASE expr case_separator . @24 inner_statement_list   (rule 83)

    $default	reduce using rule 82 (@24)

    @24 	go to state 606



state 592

    case_list  ->  case_list T_DEFAULT case_separator @25 . inner_statement_list   (rule 85)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 607



state 593

    unticked_declaration_statement  ->  T_OLD_FUNCTION @20 is_reference T_STRING @21 parameter_list '(' inner_statement_list ')' ';' .   (rule 62)

    $default	reduce using rule 62 (unticked_declaration_statement)



state 594

    non_empty_parameter_list  ->  non_empty_parameter_list ',' T_VARIABLE '=' static_scalar .   (rule 109)

    $default	reduce using rule 109 (non_empty_parameter_list)



state 595

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 59)

    '}' 	shift, and go to state 608

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 596

    non_empty_static_array_pair_list  ->  non_empty_static_array_pair_list ',' static_scalar T_DOUBLE_ARROW static_scalar .   (rule 257)

    $default	reduce using rule 257 (non_empty_static_array_pair_list)



state 597

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 . parameter_list '(' inner_statement_list ')' ';'   (rule 135)

    '&' 	shift, and go to state 448
    T_VARIABLE	shift, and go to state 449
    T_CONST	shift, and go to state 450

    $default	reduce using rule 101 (parameter_list)

    parameter_list	go to state 609
    non_empty_parameter_list	go to state 452



state 598

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 . '(' parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    '(' 	shift, and go to state 610



state 599

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' . static_scalar   (rule 139)

    '+' 	shift, and go to state 332
    '-' 	shift, and go to state 333
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 334
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ARRAY	shift, and go to state 335
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55

    common_scalar	go to state 336
    static_scalar	go to state 611



state 600

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' . expr ')' ':' @27 inner_statement_list   (rule 95)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '(' 	shift, and go to state 58
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 612
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 601

    new_else_single  ->  T_ELSE ':' . inner_statement_list   (rule 99)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 613



state 602

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF . ';'   (rule 19)

    ';' 	shift, and go to state 614



state 603

    elseif_list  ->  elseif_list T_ELSEIF '(' expr . ')' @26 statement   (rule 92)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 615



state 604

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 . for_statement   (rule 29)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    ':' 	shift, and go to state 616
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 617
    unticked_statement	go to state 66
    for_statement	go to state 618
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 605

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    foreach_statement  ->  ':' inner_statement_list . T_ENDFOREACH ';'   (rule 72)

    T_ENDFOREACH	shift, and go to state 619

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 606

    case_list  ->  case_list T_CASE expr case_separator @24 . inner_statement_list   (rule 83)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 620



state 607

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_DEFAULT case_separator @25 inner_statement_list .   (rule 85)

    T_ENDSWITCH	reduce using rule 85 (case_list)
    T_CASE	reduce using rule 85 (case_list)
    T_DEFAULT	reduce using rule 85 (case_list)
    '}' 	reduce using rule 85 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 608

    unticked_declaration_statement  ->  T_FUNCTION @18 is_reference T_STRING @19 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 59)

    $default	reduce using rule 59 (unticked_declaration_statement)



state 609

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list . '(' inner_statement_list ')' ';'   (rule 135)

    '(' 	shift, and go to state 621



state 610

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' . parameter_list ')' '{' inner_statement_list '}'   (rule 132)

    '&' 	shift, and go to state 448
    T_VARIABLE	shift, and go to state 449
    T_CONST	shift, and go to state 450

    $default	reduce using rule 101 (parameter_list)

    parameter_list	go to state 622
    non_empty_parameter_list	go to state 452



state 611

    class_variable_decleration  ->  class_variable_decleration ',' T_VARIABLE '=' static_scalar .   (rule 139)

    $default	reduce using rule 139 (class_variable_decleration)



state 612

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr . ')' ':' @27 inner_statement_list   (rule 95)
    expr_without_variable  ->  expr . T_BOOLEAN_OR @35 expr   (rule 173)
    expr_without_variable  ->  expr . T_BOOLEAN_AND @36 expr   (rule 175)
    expr_without_variable  ->  expr . T_LOGICAL_OR @37 expr   (rule 177)
    expr_without_variable  ->  expr . T_LOGICAL_AND @38 expr   (rule 179)
    expr_without_variable  ->  expr . T_LOGICAL_XOR expr   (rule 180)
    expr_without_variable  ->  expr . '|' expr   (rule 181)
    expr_without_variable  ->  expr . '&' expr   (rule 182)
    expr_without_variable  ->  expr . '^' expr   (rule 183)
    expr_without_variable  ->  expr . '.' expr   (rule 184)
    expr_without_variable  ->  expr . '+' expr   (rule 185)
    expr_without_variable  ->  expr . '-' expr   (rule 186)
    expr_without_variable  ->  expr . '*' expr   (rule 187)
    expr_without_variable  ->  expr . '/' expr   (rule 188)
    expr_without_variable  ->  expr . '%' expr   (rule 189)
    expr_without_variable  ->  expr . T_SL expr   (rule 190)
    expr_without_variable  ->  expr . T_SR expr   (rule 191)
    expr_without_variable  ->  expr . T_IS_IDENTICAL expr   (rule 196)
    expr_without_variable  ->  expr . T_IS_NOT_IDENTICAL expr   (rule 197)
    expr_without_variable  ->  expr . T_IS_EQUAL expr   (rule 198)
    expr_without_variable  ->  expr . T_IS_NOT_EQUAL expr   (rule 199)
    expr_without_variable  ->  expr . '<' expr   (rule 200)
    expr_without_variable  ->  expr . T_IS_SMALLER_OR_EQUAL expr   (rule 201)
    expr_without_variable  ->  expr . '>' expr   (rule 202)
    expr_without_variable  ->  expr . T_IS_GREATER_OR_EQUAL expr   (rule 203)
    expr_without_variable  ->  expr . '?' @39 expr ':' @40 expr   (rule 207)

    T_LOGICAL_OR	shift, and go to state 152
    T_LOGICAL_XOR	shift, and go to state 153
    T_LOGICAL_AND	shift, and go to state 154
    '?' 	shift, and go to state 155
    T_BOOLEAN_OR	shift, and go to state 156
    T_BOOLEAN_AND	shift, and go to state 157
    '|' 	shift, and go to state 158
    '^' 	shift, and go to state 159
    '&' 	shift, and go to state 160
    T_IS_EQUAL	shift, and go to state 161
    T_IS_NOT_EQUAL	shift, and go to state 162
    T_IS_IDENTICAL	shift, and go to state 163
    T_IS_NOT_IDENTICAL	shift, and go to state 164
    '<' 	shift, and go to state 165
    T_IS_SMALLER_OR_EQUAL	shift, and go to state 166
    '>' 	shift, and go to state 167
    T_IS_GREATER_OR_EQUAL	shift, and go to state 168
    T_SL	shift, and go to state 169
    T_SR	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '.' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    ')' 	shift, and go to state 623



state 613

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_else_single  ->  T_ELSE ':' inner_statement_list .   (rule 99)

    T_ENDIF	reduce using rule 99 (new_else_single)
    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 614

    unticked_statement  ->  T_IF '(' expr ')' ':' @5 inner_statement_list @6 new_elseif_list new_else_single T_ENDIF ';' .   (rule 19)

    $default	reduce using rule 19 (unticked_statement)



state 615

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' . @26 statement   (rule 92)

    $default	reduce using rule 91 (@26)

    @26 	go to state 624



state 616

    for_statement  ->  ':' . inner_statement_list T_ENDFOR ';'   (rule 70)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 625



state 617

    for_statement  ->  statement .   (rule 69)

    $default	reduce using rule 69 (for_statement)



state 618

    unticked_statement  ->  T_FOR '(' for_expr ';' @11 for_expr ';' @12 for_expr ')' @13 for_statement .   (rule 29)

    $default	reduce using rule 29 (unticked_statement)



state 619

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH . ';'   (rule 72)

    ';' 	shift, and go to state 626



state 620

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    case_list  ->  case_list T_CASE expr case_separator @24 inner_statement_list .   (rule 83)

    T_ENDSWITCH	reduce using rule 83 (case_list)
    T_CASE	reduce using rule 83 (case_list)
    T_DEFAULT	reduce using rule 83 (case_list)
    '}' 	reduce using rule 83 (case_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 621

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' . inner_statement_list ')' ';'   (rule 135)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 627



state 622

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list . ')' '{' inner_statement_list '}'   (rule 132)

    ')' 	shift, and go to state 628



state 623

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' . ':' @27 inner_statement_list   (rule 95)

    ':' 	shift, and go to state 629



state 624

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @26 . statement   (rule 92)

    T_INCLUDE	shift, and go to state 3
    T_INCLUDE_ONCE	shift, and go to state 4
    T_EVAL	shift, and go to state 5
    T_PRINT	shift, and go to state 6
    '+' 	shift, and go to state 7
    '-' 	shift, and go to state 8
    '!' 	shift, and go to state 9
    '~' 	shift, and go to state 10
    T_INC	shift, and go to state 11
    T_DEC	shift, and go to state 12
    T_INT_CAST	shift, and go to state 13
    T_DOUBLE_CAST	shift, and go to state 14
    T_STRING_CAST	shift, and go to state 15
    T_ARRAY_CAST	shift, and go to state 16
    T_OBJECT_CAST	shift, and go to state 17
    T_BOOL_CAST	shift, and go to state 18
    T_UNSET_CAST	shift, and go to state 19
    '@' 	shift, and go to state 20
    T_NEW	shift, and go to state 21
    T_EXIT	shift, and go to state 22
    T_IF	shift, and go to state 23
    T_LNUMBER	shift, and go to state 24
    T_DNUMBER	shift, and go to state 25
    T_STRING	shift, and go to state 26
    T_STRING_VARNAME	shift, and go to state 27
    T_VARIABLE	shift, and go to state 28
    T_INLINE_HTML	shift, and go to state 29
    T_CONSTANT_ENCAPSED_STRING	shift, and go to state 30
    T_ECHO	shift, and go to state 31
    T_DO	shift, and go to state 32
    T_WHILE	shift, and go to state 33
    T_FOR	shift, and go to state 34
    T_FOREACH	shift, and go to state 35
    T_DECLARE	shift, and go to state 36
    T_SWITCH	shift, and go to state 37
    T_BREAK	shift, and go to state 38
    T_CONTINUE	shift, and go to state 39
    T_RETURN	shift, and go to state 42
    T_REQUIRE	shift, and go to state 43
    T_REQUIRE_ONCE	shift, and go to state 44
    T_USE	shift, and go to state 45
    T_GLOBAL	shift, and go to state 46
    T_STATIC	shift, and go to state 47
    T_UNSET	shift, and go to state 48
    T_ISSET	shift, and go to state 49
    T_EMPTY	shift, and go to state 50
    T_LIST	shift, and go to state 52
    T_ARRAY	shift, and go to state 53
    T_LINE	shift, and go to state 54
    T_FILE	shift, and go to state 55
    T_START_HEREDOC	shift, and go to state 56
    '{' 	shift, and go to state 57
    '(' 	shift, and go to state 58
    ';' 	shift, and go to state 59
    '$' 	shift, and go to state 60
    '`' 	shift, and go to state 61
    '"' 	shift, and go to state 62
    ''' 	shift, and go to state 63

    statement	go to state 630
    unticked_statement	go to state 66
    expr_without_variable	go to state 69
    function_call	go to state 70
    common_scalar	go to state 71
    scalar	go to state 72
    expr	go to state 73
    r_cvar	go to state 74
    rw_cvar	go to state 75
    cvar	go to state 76
    cvar_without_objects	go to state 77
    reference_variable	go to state 78
    compound_variable	go to state 79
    simple_indirect_reference	go to state 80
    internal_functions_in_yacc	go to state 81



state 625

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    for_statement  ->  ':' inner_statement_list . T_ENDFOR ';'   (rule 70)

    T_ENDFOR	shift, and go to state 631

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 626

    foreach_statement  ->  ':' inner_statement_list T_ENDFOREACH ';' .   (rule 72)

    $default	reduce using rule 72 (foreach_statement)



state 627

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list . ')' ';'   (rule 135)

    ')' 	shift, and go to state 632

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 628

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' . '{' inner_statement_list '}'   (rule 132)

    '{' 	shift, and go to state 633



state 629

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' . @27 inner_statement_list   (rule 95)

    $default	reduce using rule 94 (@27)

    @27 	go to state 634



state 630

    elseif_list  ->  elseif_list T_ELSEIF '(' expr ')' @26 statement .   (rule 92)

    $default	reduce using rule 92 (elseif_list)



state 631

    for_statement  ->  ':' inner_statement_list T_ENDFOR . ';'   (rule 70)

    ';' 	shift, and go to state 635



state 632

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' . ';'   (rule 135)

    ';' 	shift, and go to state 636



state 633

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' . inner_statement_list '}'   (rule 132)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 637



state 634

    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @27 . inner_statement_list   (rule 95)

    $default	reduce using rule 9 (inner_statement_list)

    inner_statement_list	go to state 638



state 635

    for_statement  ->  ':' inner_statement_list T_ENDFOR ';' .   (rule 70)

    $default	reduce using rule 70 (for_statement)



state 636

    class_statement  ->  T_OLD_FUNCTION @30 is_reference T_STRING @31 parameter_list '(' inner_statement_list ')' ';' .   (rule 135)

    $default	reduce using rule 135 (class_statement)



state 637

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list . '}'   (rule 132)

    '}' 	shift, and go to state 639

    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 638

    inner_statement_list  ->  inner_statement_list . @2 inner_statement   (rule 8)
    new_elseif_list  ->  new_elseif_list T_ELSEIF '(' expr ')' ':' @27 inner_statement_list .   (rule 95)

    T_ELSEIF	reduce using rule 95 (new_elseif_list)
    T_ELSE	reduce using rule 95 (new_elseif_list)
    T_ENDIF	reduce using rule 95 (new_elseif_list)
    $default	reduce using rule 7 (@2)

    @2  	go to state 258



state 639

    class_statement  ->  T_FUNCTION @28 is_reference T_STRING @29 '(' parameter_list ')' '{' inner_statement_list '}' .   (rule 132)

    $default	reduce using rule 132 (class_statement)



state 640

    $   	go to state 641



state 641

    $   	go to state 642



state 642

    $default	accept
